// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles
parcelRequire = (function (modules, cache, entry, globalName) {
  // Save the require from previous bundle to this closure if any
  var previousRequire = typeof parcelRequire === 'function' && parcelRequire;
  var nodeRequire = typeof require === 'function' && require;

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire = typeof parcelRequire === 'function' && parcelRequire;
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error('Cannot find module \'' + name + '\'');
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = cache[name] = new newRequire.Module(name);

      modules[name][0].call(module.exports, localRequire, module, module.exports, this);
    }

    return cache[name].exports;

    function localRequire(x){
      return newRequire(localRequire.resolve(x));
    }

    function resolve(x){
      return modules[name][1][x] || x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [function (require, module) {
      module.exports = exports;
    }, {}];
  };

  var error;
  for (var i = 0; i < entry.length; i++) {
    try {
      newRequire(entry[i]);
    } catch (e) {
      // Save first error but execute all entries
      if (!error) {
        error = e;
      }
    }
  }

  if (entry.length) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(entry[entry.length - 1]);

    // CommonJS
    if (typeof exports === "object" && typeof module !== "undefined") {
      module.exports = mainExports;

    // RequireJS
    } else if (typeof define === "function" && define.amd) {
     define(function () {
       return mainExports;
     });

    // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }

  // Override the current require with this new one
  parcelRequire = newRequire;

  if (error) {
    // throw error from earlier, _after updating parcelRequire_
    throw error;
  }

  return newRequire;
})({"../../node_modules/d3/dist/package.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dependencies = exports.devDependencies = exports.scripts = exports.files = exports.repository = exports.module = exports.jsdelivr = exports.unpkg = exports.main = exports.author = exports.license = exports.homepage = exports.keywords = exports.description = exports.version = exports.name = void 0;
var name = "d3";
exports.name = name;
var version = "5.15.0";
exports.version = version;
var description = "Data-Driven Documents";
exports.description = description;
var keywords = ["dom", "visualization", "svg", "animation", "canvas"];
exports.keywords = keywords;
var homepage = "https://d3js.org";
exports.homepage = homepage;
var license = "BSD-3-Clause";
exports.license = license;
var author = {
  "name": "Mike Bostock",
  "url": "https://bost.ocks.org/mike"
};
exports.author = author;
var main = "dist/d3.node.js";
exports.main = main;
var unpkg = "dist/d3.min.js";
exports.unpkg = unpkg;
var jsdelivr = "dist/d3.min.js";
exports.jsdelivr = jsdelivr;
var _module = "index.js";
exports.module = _module;
var repository = {
  "type": "git",
  "url": "https://github.com/d3/d3.git"
};
exports.repository = repository;
var files = ["dist/**/*.js", "index.js"];
exports.files = files;
var scripts = {
  "pretest": "rimraf dist && mkdir dist && json2module package.json > dist/package.js && rollup -c",
  "test": "tape 'test/**/*-test.js'",
  "prepublishOnly": "yarn test",
  "postpublish": "git push && git push --tags && cd ../d3.github.com && git pull && cp ../d3/dist/d3.js d3.v5.js && cp ../d3/dist/d3.min.js d3.v5.min.js && git add d3.v5.js d3.v5.min.js && git commit -m \"d3 ${npm_package_version}\" && git push && cd - && cd ../d3-bower && git pull && cp ../d3/LICENSE ../d3/README.md ../d3/dist/d3.js ../d3/dist/d3.min.js . && git add -- LICENSE README.md d3.js d3.min.js && git commit -m \"${npm_package_version}\" && git tag -am \"${npm_package_version}\" v${npm_package_version} && git push && git push --tags && cd - && zip -j dist/d3.zip -- LICENSE README.md API.md CHANGES.md dist/d3.js dist/d3.min.js"
};
exports.scripts = scripts;
var devDependencies = {
  "json2module": "0.0",
  "rimraf": "2",
  "rollup": "1",
  "rollup-plugin-ascii": "0.0",
  "rollup-plugin-node-resolve": "3",
  "rollup-plugin-terser": "5",
  "tape": "4"
};
exports.devDependencies = devDependencies;
var dependencies = {
  "d3-array": "1",
  "d3-axis": "1",
  "d3-brush": "1",
  "d3-chord": "1",
  "d3-collection": "1",
  "d3-color": "1",
  "d3-contour": "1",
  "d3-dispatch": "1",
  "d3-drag": "1",
  "d3-dsv": "1",
  "d3-ease": "1",
  "d3-fetch": "1",
  "d3-force": "1",
  "d3-format": "1",
  "d3-geo": "1",
  "d3-hierarchy": "1",
  "d3-interpolate": "1",
  "d3-path": "1",
  "d3-polygon": "1",
  "d3-quadtree": "1",
  "d3-random": "1",
  "d3-scale": "2",
  "d3-scale-chromatic": "1",
  "d3-selection": "1",
  "d3-shape": "1",
  "d3-time": "1",
  "d3-time-format": "2",
  "d3-timer": "1",
  "d3-transition": "1",
  "d3-voronoi": "1",
  "d3-zoom": "1"
};
exports.dependencies = dependencies;
},{}],"../../node_modules/d3-array/src/ascending.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
}
},{}],"../../node_modules/d3-array/src/bisector.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _ascending = _interopRequireDefault(require("./ascending"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(compare) {
  if (compare.length === 1) compare = ascendingComparator(compare);
  return {
    left: function (a, x, lo, hi) {
      if (lo == null) lo = 0;
      if (hi == null) hi = a.length;

      while (lo < hi) {
        var mid = lo + hi >>> 1;
        if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;
      }

      return lo;
    },
    right: function (a, x, lo, hi) {
      if (lo == null) lo = 0;
      if (hi == null) hi = a.length;

      while (lo < hi) {
        var mid = lo + hi >>> 1;
        if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;
      }

      return lo;
    }
  };
}

function ascendingComparator(f) {
  return function (d, x) {
    return (0, _ascending.default)(f(d), x);
  };
}
},{"./ascending":"../../node_modules/d3-array/src/ascending.js"}],"../../node_modules/d3-array/src/bisect.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.bisectLeft = exports.bisectRight = void 0;

var _ascending = _interopRequireDefault(require("./ascending"));

var _bisector = _interopRequireDefault(require("./bisector"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ascendingBisect = (0, _bisector.default)(_ascending.default);
var bisectRight = ascendingBisect.right;
exports.bisectRight = bisectRight;
var bisectLeft = ascendingBisect.left;
exports.bisectLeft = bisectLeft;
var _default = bisectRight;
exports.default = _default;
},{"./ascending":"../../node_modules/d3-array/src/ascending.js","./bisector":"../../node_modules/d3-array/src/bisector.js"}],"../../node_modules/d3-array/src/pairs.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.pair = pair;

function _default(array, f) {
  if (f == null) f = pair;
  var i = 0,
      n = array.length - 1,
      p = array[0],
      pairs = new Array(n < 0 ? 0 : n);

  while (i < n) pairs[i] = f(p, p = array[++i]);

  return pairs;
}

function pair(a, b) {
  return [a, b];
}
},{}],"../../node_modules/d3-array/src/cross.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _pairs = require("./pairs");

function _default(values0, values1, reduce) {
  var n0 = values0.length,
      n1 = values1.length,
      values = new Array(n0 * n1),
      i0,
      i1,
      i,
      value0;
  if (reduce == null) reduce = _pairs.pair;

  for (i0 = i = 0; i0 < n0; ++i0) {
    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {
      values[i] = reduce(value0, values1[i1]);
    }
  }

  return values;
}
},{"./pairs":"../../node_modules/d3-array/src/pairs.js"}],"../../node_modules/d3-array/src/descending.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
}
},{}],"../../node_modules/d3-array/src/number.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return x === null ? NaN : +x;
}
},{}],"../../node_modules/d3-array/src/variance.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _number = _interopRequireDefault(require("./number"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(values, valueof) {
  var n = values.length,
      m = 0,
      i = -1,
      mean = 0,
      value,
      delta,
      sum = 0;

  if (valueof == null) {
    while (++i < n) {
      if (!isNaN(value = (0, _number.default)(values[i]))) {
        delta = value - mean;
        mean += delta / ++m;
        sum += delta * (value - mean);
      }
    }
  } else {
    while (++i < n) {
      if (!isNaN(value = (0, _number.default)(valueof(values[i], i, values)))) {
        delta = value - mean;
        mean += delta / ++m;
        sum += delta * (value - mean);
      }
    }
  }

  if (m > 1) return sum / (m - 1);
}
},{"./number":"../../node_modules/d3-array/src/number.js"}],"../../node_modules/d3-array/src/deviation.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _variance = _interopRequireDefault(require("./variance"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(array, f) {
  var v = (0, _variance.default)(array, f);
  return v ? Math.sqrt(v) : v;
}
},{"./variance":"../../node_modules/d3-array/src/variance.js"}],"../../node_modules/d3-array/src/extent.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(values, valueof) {
  var n = values.length,
      i = -1,
      value,
      min,
      max;

  if (valueof == null) {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = values[i]) != null && value >= value) {
        min = max = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = values[i]) != null) {
            if (min > value) min = value;
            if (max < value) max = value;
          }
        }
      }
    }
  } else {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = valueof(values[i], i, values)) != null && value >= value) {
        min = max = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = valueof(values[i], i, values)) != null) {
            if (min > value) min = value;
            if (max < value) max = value;
          }
        }
      }
    }
  }

  return [min, max];
}
},{}],"../../node_modules/d3-array/src/array.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.map = exports.slice = void 0;
var array = Array.prototype;
var slice = array.slice;
exports.slice = slice;
var map = array.map;
exports.map = map;
},{}],"../../node_modules/d3-array/src/constant.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return function () {
    return x;
  };
}
},{}],"../../node_modules/d3-array/src/identity.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return x;
}
},{}],"../../node_modules/d3-array/src/range.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(start, stop, step) {
  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;
  var i = -1,
      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,
      range = new Array(n);

  while (++i < n) {
    range[i] = start + i * step;
  }

  return range;
}
},{}],"../../node_modules/d3-array/src/ticks.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.tickIncrement = tickIncrement;
exports.tickStep = tickStep;
var e10 = Math.sqrt(50),
    e5 = Math.sqrt(10),
    e2 = Math.sqrt(2);

function _default(start, stop, count) {
  var reverse,
      i = -1,
      n,
      ticks,
      step;
  stop = +stop, start = +start, count = +count;
  if (start === stop && count > 0) return [start];
  if (reverse = stop < start) n = start, start = stop, stop = n;
  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];

  if (step > 0) {
    start = Math.ceil(start / step);
    stop = Math.floor(stop / step);
    ticks = new Array(n = Math.ceil(stop - start + 1));

    while (++i < n) ticks[i] = (start + i) * step;
  } else {
    start = Math.floor(start * step);
    stop = Math.ceil(stop * step);
    ticks = new Array(n = Math.ceil(start - stop + 1));

    while (++i < n) ticks[i] = (start - i) / step;
  }

  if (reverse) ticks.reverse();
  return ticks;
}

function tickIncrement(start, stop, count) {
  var step = (stop - start) / Math.max(0, count),
      power = Math.floor(Math.log(step) / Math.LN10),
      error = step / Math.pow(10, power);
  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);
}

function tickStep(start, stop, count) {
  var step0 = Math.abs(stop - start) / Math.max(0, count),
      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),
      error = step0 / step1;
  if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;
  return stop < start ? -step1 : step1;
}
},{}],"../../node_modules/d3-array/src/threshold/sturges.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(values) {
  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;
}
},{}],"../../node_modules/d3-array/src/histogram.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _array = require("./array");

var _bisect = _interopRequireDefault(require("./bisect"));

var _constant = _interopRequireDefault(require("./constant"));

var _extent = _interopRequireDefault(require("./extent"));

var _identity = _interopRequireDefault(require("./identity"));

var _range = _interopRequireDefault(require("./range"));

var _ticks = require("./ticks");

var _sturges = _interopRequireDefault(require("./threshold/sturges"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var value = _identity.default,
      domain = _extent.default,
      threshold = _sturges.default;

  function histogram(data) {
    var i,
        n = data.length,
        x,
        values = new Array(n);

    for (i = 0; i < n; ++i) {
      values[i] = value(data[i], i, data);
    }

    var xz = domain(values),
        x0 = xz[0],
        x1 = xz[1],
        tz = threshold(values, x0, x1); // Convert number of thresholds into uniform thresholds.

    if (!Array.isArray(tz)) {
      tz = (0, _ticks.tickStep)(x0, x1, tz);
      tz = (0, _range.default)(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive
    } // Remove any thresholds outside the domain.


    var m = tz.length;

    while (tz[0] <= x0) tz.shift(), --m;

    while (tz[m - 1] > x1) tz.pop(), --m;

    var bins = new Array(m + 1),
        bin; // Initialize bins.

    for (i = 0; i <= m; ++i) {
      bin = bins[i] = [];
      bin.x0 = i > 0 ? tz[i - 1] : x0;
      bin.x1 = i < m ? tz[i] : x1;
    } // Assign data to bins by value, ignoring any outside the domain.


    for (i = 0; i < n; ++i) {
      x = values[i];

      if (x0 <= x && x <= x1) {
        bins[(0, _bisect.default)(tz, x, 0, m)].push(data[i]);
      }
    }

    return bins;
  }

  histogram.value = function (_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : (0, _constant.default)(_), histogram) : value;
  };

  histogram.domain = function (_) {
    return arguments.length ? (domain = typeof _ === "function" ? _ : (0, _constant.default)([_[0], _[1]]), histogram) : domain;
  };

  histogram.thresholds = function (_) {
    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? (0, _constant.default)(_array.slice.call(_)) : (0, _constant.default)(_), histogram) : threshold;
  };

  return histogram;
}
},{"./array":"../../node_modules/d3-array/src/array.js","./bisect":"../../node_modules/d3-array/src/bisect.js","./constant":"../../node_modules/d3-array/src/constant.js","./extent":"../../node_modules/d3-array/src/extent.js","./identity":"../../node_modules/d3-array/src/identity.js","./range":"../../node_modules/d3-array/src/range.js","./ticks":"../../node_modules/d3-array/src/ticks.js","./threshold/sturges":"../../node_modules/d3-array/src/threshold/sturges.js"}],"../../node_modules/d3-array/src/quantile.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _number = _interopRequireDefault(require("./number"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(values, p, valueof) {
  if (valueof == null) valueof = _number.default;
  if (!(n = values.length)) return;
  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);
  if (p >= 1) return +valueof(values[n - 1], n - 1, values);
  var n,
      i = (n - 1) * p,
      i0 = Math.floor(i),
      value0 = +valueof(values[i0], i0, values),
      value1 = +valueof(values[i0 + 1], i0 + 1, values);
  return value0 + (value1 - value0) * (i - i0);
}
},{"./number":"../../node_modules/d3-array/src/number.js"}],"../../node_modules/d3-array/src/threshold/freedmanDiaconis.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _array = require("../array");

var _ascending = _interopRequireDefault(require("../ascending"));

var _number = _interopRequireDefault(require("../number"));

var _quantile = _interopRequireDefault(require("../quantile"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(values, min, max) {
  values = _array.map.call(values, _number.default).sort(_ascending.default);
  return Math.ceil((max - min) / (2 * ((0, _quantile.default)(values, 0.75) - (0, _quantile.default)(values, 0.25)) * Math.pow(values.length, -1 / 3)));
}
},{"../array":"../../node_modules/d3-array/src/array.js","../ascending":"../../node_modules/d3-array/src/ascending.js","../number":"../../node_modules/d3-array/src/number.js","../quantile":"../../node_modules/d3-array/src/quantile.js"}],"../../node_modules/d3-array/src/threshold/scott.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _deviation = _interopRequireDefault(require("../deviation"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(values, min, max) {
  return Math.ceil((max - min) / (3.5 * (0, _deviation.default)(values) * Math.pow(values.length, -1 / 3)));
}
},{"../deviation":"../../node_modules/d3-array/src/deviation.js"}],"../../node_modules/d3-array/src/max.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(values, valueof) {
  var n = values.length,
      i = -1,
      value,
      max;

  if (valueof == null) {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = values[i]) != null && value >= value) {
        max = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = values[i]) != null && value > max) {
            max = value;
          }
        }
      }
    }
  } else {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = valueof(values[i], i, values)) != null && value >= value) {
        max = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = valueof(values[i], i, values)) != null && value > max) {
            max = value;
          }
        }
      }
    }
  }

  return max;
}
},{}],"../../node_modules/d3-array/src/mean.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _number = _interopRequireDefault(require("./number"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(values, valueof) {
  var n = values.length,
      m = n,
      i = -1,
      value,
      sum = 0;

  if (valueof == null) {
    while (++i < n) {
      if (!isNaN(value = (0, _number.default)(values[i]))) sum += value;else --m;
    }
  } else {
    while (++i < n) {
      if (!isNaN(value = (0, _number.default)(valueof(values[i], i, values)))) sum += value;else --m;
    }
  }

  if (m) return sum / m;
}
},{"./number":"../../node_modules/d3-array/src/number.js"}],"../../node_modules/d3-array/src/median.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _ascending = _interopRequireDefault(require("./ascending"));

var _number = _interopRequireDefault(require("./number"));

var _quantile = _interopRequireDefault(require("./quantile"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(values, valueof) {
  var n = values.length,
      i = -1,
      value,
      numbers = [];

  if (valueof == null) {
    while (++i < n) {
      if (!isNaN(value = (0, _number.default)(values[i]))) {
        numbers.push(value);
      }
    }
  } else {
    while (++i < n) {
      if (!isNaN(value = (0, _number.default)(valueof(values[i], i, values)))) {
        numbers.push(value);
      }
    }
  }

  return (0, _quantile.default)(numbers.sort(_ascending.default), 0.5);
}
},{"./ascending":"../../node_modules/d3-array/src/ascending.js","./number":"../../node_modules/d3-array/src/number.js","./quantile":"../../node_modules/d3-array/src/quantile.js"}],"../../node_modules/d3-array/src/merge.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(arrays) {
  var n = arrays.length,
      m,
      i = -1,
      j = 0,
      merged,
      array;

  while (++i < n) j += arrays[i].length;

  merged = new Array(j);

  while (--n >= 0) {
    array = arrays[n];
    m = array.length;

    while (--m >= 0) {
      merged[--j] = array[m];
    }
  }

  return merged;
}
},{}],"../../node_modules/d3-array/src/min.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(values, valueof) {
  var n = values.length,
      i = -1,
      value,
      min;

  if (valueof == null) {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = values[i]) != null && value >= value) {
        min = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = values[i]) != null && min > value) {
            min = value;
          }
        }
      }
    }
  } else {
    while (++i < n) {
      // Find the first comparable value.
      if ((value = valueof(values[i], i, values)) != null && value >= value) {
        min = value;

        while (++i < n) {
          // Compare the remaining values.
          if ((value = valueof(values[i], i, values)) != null && min > value) {
            min = value;
          }
        }
      }
    }
  }

  return min;
}
},{}],"../../node_modules/d3-array/src/permute.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(array, indexes) {
  var i = indexes.length,
      permutes = new Array(i);

  while (i--) permutes[i] = array[indexes[i]];

  return permutes;
}
},{}],"../../node_modules/d3-array/src/scan.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _ascending = _interopRequireDefault(require("./ascending"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(values, compare) {
  if (!(n = values.length)) return;
  var n,
      i = 0,
      j = 0,
      xi,
      xj = values[j];
  if (compare == null) compare = _ascending.default;

  while (++i < n) {
    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {
      xj = xi, j = i;
    }
  }

  if (compare(xj, xj) === 0) return j;
}
},{"./ascending":"../../node_modules/d3-array/src/ascending.js"}],"../../node_modules/d3-array/src/shuffle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(array, i0, i1) {
  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),
      t,
      i;

  while (m) {
    i = Math.random() * m-- | 0;
    t = array[m + i0];
    array[m + i0] = array[i + i0];
    array[i + i0] = t;
  }

  return array;
}
},{}],"../../node_modules/d3-array/src/sum.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(values, valueof) {
  var n = values.length,
      i = -1,
      value,
      sum = 0;

  if (valueof == null) {
    while (++i < n) {
      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.
    }
  } else {
    while (++i < n) {
      if (value = +valueof(values[i], i, values)) sum += value;
    }
  }

  return sum;
}
},{}],"../../node_modules/d3-array/src/transpose.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _min = _interopRequireDefault(require("./min"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(matrix) {
  if (!(n = matrix.length)) return [];

  for (var i = -1, m = (0, _min.default)(matrix, length), transpose = new Array(m); ++i < m;) {
    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {
      row[j] = matrix[j][i];
    }
  }

  return transpose;
}

function length(d) {
  return d.length;
}
},{"./min":"../../node_modules/d3-array/src/min.js"}],"../../node_modules/d3-array/src/zip.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _transpose = _interopRequireDefault(require("./transpose"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  return (0, _transpose.default)(arguments);
}
},{"./transpose":"../../node_modules/d3-array/src/transpose.js"}],"../../node_modules/d3-array/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "bisect", {
  enumerable: true,
  get: function () {
    return _bisect.default;
  }
});
Object.defineProperty(exports, "bisectRight", {
  enumerable: true,
  get: function () {
    return _bisect.bisectRight;
  }
});
Object.defineProperty(exports, "bisectLeft", {
  enumerable: true,
  get: function () {
    return _bisect.bisectLeft;
  }
});
Object.defineProperty(exports, "ascending", {
  enumerable: true,
  get: function () {
    return _ascending.default;
  }
});
Object.defineProperty(exports, "bisector", {
  enumerable: true,
  get: function () {
    return _bisector.default;
  }
});
Object.defineProperty(exports, "cross", {
  enumerable: true,
  get: function () {
    return _cross.default;
  }
});
Object.defineProperty(exports, "descending", {
  enumerable: true,
  get: function () {
    return _descending.default;
  }
});
Object.defineProperty(exports, "deviation", {
  enumerable: true,
  get: function () {
    return _deviation.default;
  }
});
Object.defineProperty(exports, "extent", {
  enumerable: true,
  get: function () {
    return _extent.default;
  }
});
Object.defineProperty(exports, "histogram", {
  enumerable: true,
  get: function () {
    return _histogram.default;
  }
});
Object.defineProperty(exports, "thresholdFreedmanDiaconis", {
  enumerable: true,
  get: function () {
    return _freedmanDiaconis.default;
  }
});
Object.defineProperty(exports, "thresholdScott", {
  enumerable: true,
  get: function () {
    return _scott.default;
  }
});
Object.defineProperty(exports, "thresholdSturges", {
  enumerable: true,
  get: function () {
    return _sturges.default;
  }
});
Object.defineProperty(exports, "max", {
  enumerable: true,
  get: function () {
    return _max.default;
  }
});
Object.defineProperty(exports, "mean", {
  enumerable: true,
  get: function () {
    return _mean.default;
  }
});
Object.defineProperty(exports, "median", {
  enumerable: true,
  get: function () {
    return _median.default;
  }
});
Object.defineProperty(exports, "merge", {
  enumerable: true,
  get: function () {
    return _merge.default;
  }
});
Object.defineProperty(exports, "min", {
  enumerable: true,
  get: function () {
    return _min.default;
  }
});
Object.defineProperty(exports, "pairs", {
  enumerable: true,
  get: function () {
    return _pairs.default;
  }
});
Object.defineProperty(exports, "permute", {
  enumerable: true,
  get: function () {
    return _permute.default;
  }
});
Object.defineProperty(exports, "quantile", {
  enumerable: true,
  get: function () {
    return _quantile.default;
  }
});
Object.defineProperty(exports, "range", {
  enumerable: true,
  get: function () {
    return _range.default;
  }
});
Object.defineProperty(exports, "scan", {
  enumerable: true,
  get: function () {
    return _scan.default;
  }
});
Object.defineProperty(exports, "shuffle", {
  enumerable: true,
  get: function () {
    return _shuffle.default;
  }
});
Object.defineProperty(exports, "sum", {
  enumerable: true,
  get: function () {
    return _sum.default;
  }
});
Object.defineProperty(exports, "ticks", {
  enumerable: true,
  get: function () {
    return _ticks.default;
  }
});
Object.defineProperty(exports, "tickIncrement", {
  enumerable: true,
  get: function () {
    return _ticks.tickIncrement;
  }
});
Object.defineProperty(exports, "tickStep", {
  enumerable: true,
  get: function () {
    return _ticks.tickStep;
  }
});
Object.defineProperty(exports, "transpose", {
  enumerable: true,
  get: function () {
    return _transpose.default;
  }
});
Object.defineProperty(exports, "variance", {
  enumerable: true,
  get: function () {
    return _variance.default;
  }
});
Object.defineProperty(exports, "zip", {
  enumerable: true,
  get: function () {
    return _zip.default;
  }
});

var _bisect = _interopRequireWildcard(require("./bisect"));

var _ascending = _interopRequireDefault(require("./ascending"));

var _bisector = _interopRequireDefault(require("./bisector"));

var _cross = _interopRequireDefault(require("./cross"));

var _descending = _interopRequireDefault(require("./descending"));

var _deviation = _interopRequireDefault(require("./deviation"));

var _extent = _interopRequireDefault(require("./extent"));

var _histogram = _interopRequireDefault(require("./histogram"));

var _freedmanDiaconis = _interopRequireDefault(require("./threshold/freedmanDiaconis"));

var _scott = _interopRequireDefault(require("./threshold/scott"));

var _sturges = _interopRequireDefault(require("./threshold/sturges"));

var _max = _interopRequireDefault(require("./max"));

var _mean = _interopRequireDefault(require("./mean"));

var _median = _interopRequireDefault(require("./median"));

var _merge = _interopRequireDefault(require("./merge"));

var _min = _interopRequireDefault(require("./min"));

var _pairs = _interopRequireDefault(require("./pairs"));

var _permute = _interopRequireDefault(require("./permute"));

var _quantile = _interopRequireDefault(require("./quantile"));

var _range = _interopRequireDefault(require("./range"));

var _scan = _interopRequireDefault(require("./scan"));

var _shuffle = _interopRequireDefault(require("./shuffle"));

var _sum = _interopRequireDefault(require("./sum"));

var _ticks = _interopRequireWildcard(require("./ticks"));

var _transpose = _interopRequireDefault(require("./transpose"));

var _variance = _interopRequireDefault(require("./variance"));

var _zip = _interopRequireDefault(require("./zip"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./bisect":"../../node_modules/d3-array/src/bisect.js","./ascending":"../../node_modules/d3-array/src/ascending.js","./bisector":"../../node_modules/d3-array/src/bisector.js","./cross":"../../node_modules/d3-array/src/cross.js","./descending":"../../node_modules/d3-array/src/descending.js","./deviation":"../../node_modules/d3-array/src/deviation.js","./extent":"../../node_modules/d3-array/src/extent.js","./histogram":"../../node_modules/d3-array/src/histogram.js","./threshold/freedmanDiaconis":"../../node_modules/d3-array/src/threshold/freedmanDiaconis.js","./threshold/scott":"../../node_modules/d3-array/src/threshold/scott.js","./threshold/sturges":"../../node_modules/d3-array/src/threshold/sturges.js","./max":"../../node_modules/d3-array/src/max.js","./mean":"../../node_modules/d3-array/src/mean.js","./median":"../../node_modules/d3-array/src/median.js","./merge":"../../node_modules/d3-array/src/merge.js","./min":"../../node_modules/d3-array/src/min.js","./pairs":"../../node_modules/d3-array/src/pairs.js","./permute":"../../node_modules/d3-array/src/permute.js","./quantile":"../../node_modules/d3-array/src/quantile.js","./range":"../../node_modules/d3-array/src/range.js","./scan":"../../node_modules/d3-array/src/scan.js","./shuffle":"../../node_modules/d3-array/src/shuffle.js","./sum":"../../node_modules/d3-array/src/sum.js","./ticks":"../../node_modules/d3-array/src/ticks.js","./transpose":"../../node_modules/d3-array/src/transpose.js","./variance":"../../node_modules/d3-array/src/variance.js","./zip":"../../node_modules/d3-array/src/zip.js"}],"../../node_modules/d3-axis/src/array.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.slice = void 0;
var slice = Array.prototype.slice;
exports.slice = slice;
},{}],"../../node_modules/d3-axis/src/identity.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return x;
}
},{}],"../../node_modules/d3-axis/src/axis.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.axisTop = axisTop;
exports.axisRight = axisRight;
exports.axisBottom = axisBottom;
exports.axisLeft = axisLeft;

var _array = require("./array");

var _identity = _interopRequireDefault(require("./identity"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var top = 1,
    right = 2,
    bottom = 3,
    left = 4,
    epsilon = 1e-6;

function translateX(x) {
  return "translate(" + (x + 0.5) + ",0)";
}

function translateY(y) {
  return "translate(0," + (y + 0.5) + ")";
}

function number(scale) {
  return function (d) {
    return +scale(d);
  };
}

function center(scale) {
  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.

  if (scale.round()) offset = Math.round(offset);
  return function (d) {
    return +scale(d) + offset;
  };
}

function entering() {
  return !this.__axis;
}

function axis(orient, scale) {
  var tickArguments = [],
      tickValues = null,
      tickFormat = null,
      tickSizeInner = 6,
      tickSizeOuter = 6,
      tickPadding = 3,
      k = orient === top || orient === left ? -1 : 1,
      x = orient === left || orient === right ? "x" : "y",
      transform = orient === top || orient === bottom ? translateX : translateY;

  function axis(context) {
    var values = tickValues == null ? scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain() : tickValues,
        format = tickFormat == null ? scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : _identity.default : tickFormat,
        spacing = Math.max(tickSizeInner, 0) + tickPadding,
        range = scale.range(),
        range0 = +range[0] + 0.5,
        range1 = +range[range.length - 1] + 0.5,
        position = (scale.bandwidth ? center : number)(scale.copy()),
        selection = context.selection ? context.selection() : context,
        path = selection.selectAll(".domain").data([null]),
        tick = selection.selectAll(".tick").data(values, scale).order(),
        tickExit = tick.exit(),
        tickEnter = tick.enter().append("g").attr("class", "tick"),
        line = tick.select("line"),
        text = tick.select("text");
    path = path.merge(path.enter().insert("path", ".tick").attr("class", "domain").attr("stroke", "currentColor"));
    tick = tick.merge(tickEnter);
    line = line.merge(tickEnter.append("line").attr("stroke", "currentColor").attr(x + "2", k * tickSizeInner));
    text = text.merge(tickEnter.append("text").attr("fill", "currentColor").attr(x, k * spacing).attr("dy", orient === top ? "0em" : orient === bottom ? "0.71em" : "0.32em"));

    if (context !== selection) {
      path = path.transition(context);
      tick = tick.transition(context);
      line = line.transition(context);
      text = text.transition(context);
      tickExit = tickExit.transition(context).attr("opacity", epsilon).attr("transform", function (d) {
        return isFinite(d = position(d)) ? transform(d) : this.getAttribute("transform");
      });
      tickEnter.attr("opacity", epsilon).attr("transform", function (d) {
        var p = this.parentNode.__axis;
        return transform(p && isFinite(p = p(d)) ? p : position(d));
      });
    }

    tickExit.remove();
    path.attr("d", orient === left || orient == right ? tickSizeOuter ? "M" + k * tickSizeOuter + "," + range0 + "H0.5V" + range1 + "H" + k * tickSizeOuter : "M0.5," + range0 + "V" + range1 : tickSizeOuter ? "M" + range0 + "," + k * tickSizeOuter + "V0.5H" + range1 + "V" + k * tickSizeOuter : "M" + range0 + ",0.5H" + range1);
    tick.attr("opacity", 1).attr("transform", function (d) {
      return transform(position(d));
    });
    line.attr(x + "2", k * tickSizeInner);
    text.attr(x, k * spacing).text(format);
    selection.filter(entering).attr("fill", "none").attr("font-size", 10).attr("font-family", "sans-serif").attr("text-anchor", orient === right ? "start" : orient === left ? "end" : "middle");
    selection.each(function () {
      this.__axis = position;
    });
  }

  axis.scale = function (_) {
    return arguments.length ? (scale = _, axis) : scale;
  };

  axis.ticks = function () {
    return tickArguments = _array.slice.call(arguments), axis;
  };

  axis.tickArguments = function (_) {
    return arguments.length ? (tickArguments = _ == null ? [] : _array.slice.call(_), axis) : tickArguments.slice();
  };

  axis.tickValues = function (_) {
    return arguments.length ? (tickValues = _ == null ? null : _array.slice.call(_), axis) : tickValues && tickValues.slice();
  };

  axis.tickFormat = function (_) {
    return arguments.length ? (tickFormat = _, axis) : tickFormat;
  };

  axis.tickSize = function (_) {
    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;
  };

  axis.tickSizeInner = function (_) {
    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;
  };

  axis.tickSizeOuter = function (_) {
    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;
  };

  axis.tickPadding = function (_) {
    return arguments.length ? (tickPadding = +_, axis) : tickPadding;
  };

  return axis;
}

function axisTop(scale) {
  return axis(top, scale);
}

function axisRight(scale) {
  return axis(right, scale);
}

function axisBottom(scale) {
  return axis(bottom, scale);
}

function axisLeft(scale) {
  return axis(left, scale);
}
},{"./array":"../../node_modules/d3-axis/src/array.js","./identity":"../../node_modules/d3-axis/src/identity.js"}],"../../node_modules/d3-axis/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "axisTop", {
  enumerable: true,
  get: function () {
    return _axis.axisTop;
  }
});
Object.defineProperty(exports, "axisRight", {
  enumerable: true,
  get: function () {
    return _axis.axisRight;
  }
});
Object.defineProperty(exports, "axisBottom", {
  enumerable: true,
  get: function () {
    return _axis.axisBottom;
  }
});
Object.defineProperty(exports, "axisLeft", {
  enumerable: true,
  get: function () {
    return _axis.axisLeft;
  }
});

var _axis = require("./axis");
},{"./axis":"../../node_modules/d3-axis/src/axis.js"}],"../../node_modules/d3-dispatch/src/dispatch.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var noop = {
  value: function () {}
};

function dispatch() {
  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {
    if (!(t = arguments[i] + "") || t in _ || /[\s.]/.test(t)) throw new Error("illegal type: " + t);
    _[t] = [];
  }

  return new Dispatch(_);
}

function Dispatch(_) {
  this._ = _;
}

function parseTypenames(typenames, types) {
  return typenames.trim().split(/^|\s+/).map(function (t) {
    var name = "",
        i = t.indexOf(".");
    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
    if (t && !types.hasOwnProperty(t)) throw new Error("unknown type: " + t);
    return {
      type: t,
      name: name
    };
  });
}

Dispatch.prototype = dispatch.prototype = {
  constructor: Dispatch,
  on: function (typename, callback) {
    var _ = this._,
        T = parseTypenames(typename + "", _),
        t,
        i = -1,
        n = T.length; // If no callback was specified, return the callback of the given type and name.

    if (arguments.length < 2) {
      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;

      return;
    } // If a type was specified, set the callback for the given type and name.
    // Otherwise, if a null callback was specified, remove callbacks of the given name.


    if (callback != null && typeof callback !== "function") throw new Error("invalid callback: " + callback);

    while (++i < n) {
      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);
    }

    return this;
  },
  copy: function () {
    var copy = {},
        _ = this._;

    for (var t in _) copy[t] = _[t].slice();

    return new Dispatch(copy);
  },
  call: function (type, that) {
    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];
    if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);

    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
  },
  apply: function (type, that, args) {
    if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);

    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
  }
};

function get(type, name) {
  for (var i = 0, n = type.length, c; i < n; ++i) {
    if ((c = type[i]).name === name) {
      return c.value;
    }
  }
}

function set(type, name, callback) {
  for (var i = 0, n = type.length; i < n; ++i) {
    if (type[i].name === name) {
      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));
      break;
    }
  }

  if (callback != null) type.push({
    name: name,
    value: callback
  });
  return type;
}

var _default = dispatch;
exports.default = _default;
},{}],"../../node_modules/d3-dispatch/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "dispatch", {
  enumerable: true,
  get: function () {
    return _dispatch.default;
  }
});

var _dispatch = _interopRequireDefault(require("./dispatch.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./dispatch.js":"../../node_modules/d3-dispatch/src/dispatch.js"}],"../../node_modules/d3-selection/src/namespaces.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.xhtml = void 0;
var xhtml = "http://www.w3.org/1999/xhtml";
exports.xhtml = xhtml;
var _default = {
  svg: "http://www.w3.org/2000/svg",
  xhtml: xhtml,
  xlink: "http://www.w3.org/1999/xlink",
  xml: "http://www.w3.org/XML/1998/namespace",
  xmlns: "http://www.w3.org/2000/xmlns/"
};
exports.default = _default;
},{}],"../../node_modules/d3-selection/src/namespace.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _namespaces = _interopRequireDefault(require("./namespaces"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(name) {
  var prefix = name += "",
      i = prefix.indexOf(":");
  if (i >= 0 && (prefix = name.slice(0, i)) !== "xmlns") name = name.slice(i + 1);
  return _namespaces.default.hasOwnProperty(prefix) ? {
    space: _namespaces.default[prefix],
    local: name
  } : name;
}
},{"./namespaces":"../../node_modules/d3-selection/src/namespaces.js"}],"../../node_modules/d3-selection/src/creator.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _namespace = _interopRequireDefault(require("./namespace"));

var _namespaces = require("./namespaces");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function creatorInherit(name) {
  return function () {
    var document = this.ownerDocument,
        uri = this.namespaceURI;
    return uri === _namespaces.xhtml && document.documentElement.namespaceURI === _namespaces.xhtml ? document.createElement(name) : document.createElementNS(uri, name);
  };
}

function creatorFixed(fullname) {
  return function () {
    return this.ownerDocument.createElementNS(fullname.space, fullname.local);
  };
}

function _default(name) {
  var fullname = (0, _namespace.default)(name);
  return (fullname.local ? creatorFixed : creatorInherit)(fullname);
}
},{"./namespace":"../../node_modules/d3-selection/src/namespace.js","./namespaces":"../../node_modules/d3-selection/src/namespaces.js"}],"../../node_modules/d3-selection/src/selector.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function none() {}

function _default(selector) {
  return selector == null ? none : function () {
    return this.querySelector(selector);
  };
}
},{}],"../../node_modules/d3-selection/src/selection/select.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index");

var _selector = _interopRequireDefault(require("../selector"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(select) {
  if (typeof select !== "function") select = (0, _selector.default)(select);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
        if ("__data__" in node) subnode.__data__ = node.__data__;
        subgroup[i] = subnode;
      }
    }
  }

  return new _index.Selection(subgroups, this._parents);
}
},{"./index":"../../node_modules/d3-selection/src/selection/index.js","../selector":"../../node_modules/d3-selection/src/selector.js"}],"../../node_modules/d3-selection/src/selectorAll.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function empty() {
  return [];
}

function _default(selector) {
  return selector == null ? empty : function () {
    return this.querySelectorAll(selector);
  };
}
},{}],"../../node_modules/d3-selection/src/selection/selectAll.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index");

var _selectorAll = _interopRequireDefault(require("../selectorAll"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(select) {
  if (typeof select !== "function") select = (0, _selectorAll.default)(select);

  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        subgroups.push(select.call(node, node.__data__, i, group));
        parents.push(node);
      }
    }
  }

  return new _index.Selection(subgroups, parents);
}
},{"./index":"../../node_modules/d3-selection/src/selection/index.js","../selectorAll":"../../node_modules/d3-selection/src/selectorAll.js"}],"../../node_modules/d3-selection/src/matcher.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(selector) {
  return function () {
    return this.matches(selector);
  };
}
},{}],"../../node_modules/d3-selection/src/selection/filter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index");

var _matcher = _interopRequireDefault(require("../matcher"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(match) {
  if (typeof match !== "function") match = (0, _matcher.default)(match);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
        subgroup.push(node);
      }
    }
  }

  return new _index.Selection(subgroups, this._parents);
}
},{"./index":"../../node_modules/d3-selection/src/selection/index.js","../matcher":"../../node_modules/d3-selection/src/matcher.js"}],"../../node_modules/d3-selection/src/selection/sparse.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(update) {
  return new Array(update.length);
}
},{}],"../../node_modules/d3-selection/src/selection/enter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.EnterNode = EnterNode;

var _sparse = _interopRequireDefault(require("./sparse"));

var _index = require("./index");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  return new _index.Selection(this._enter || this._groups.map(_sparse.default), this._parents);
}

function EnterNode(parent, datum) {
  this.ownerDocument = parent.ownerDocument;
  this.namespaceURI = parent.namespaceURI;
  this._next = null;
  this._parent = parent;
  this.__data__ = datum;
}

EnterNode.prototype = {
  constructor: EnterNode,
  appendChild: function (child) {
    return this._parent.insertBefore(child, this._next);
  },
  insertBefore: function (child, next) {
    return this._parent.insertBefore(child, next);
  },
  querySelector: function (selector) {
    return this._parent.querySelector(selector);
  },
  querySelectorAll: function (selector) {
    return this._parent.querySelectorAll(selector);
  }
};
},{"./sparse":"../../node_modules/d3-selection/src/selection/sparse.js","./index":"../../node_modules/d3-selection/src/selection/index.js"}],"../../node_modules/d3-selection/src/constant.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return function () {
    return x;
  };
}
},{}],"../../node_modules/d3-selection/src/selection/data.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index");

var _enter = require("./enter");

var _constant = _interopRequireDefault(require("../constant"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var keyPrefix = "$"; // Protect against keys like “__proto__”.

function bindIndex(parent, group, enter, update, exit, data) {
  var i = 0,
      node,
      groupLength = group.length,
      dataLength = data.length; // Put any non-null nodes that fit into update.
  // Put any null nodes into enter.
  // Put any remaining data into enter.

  for (; i < dataLength; ++i) {
    if (node = group[i]) {
      node.__data__ = data[i];
      update[i] = node;
    } else {
      enter[i] = new _enter.EnterNode(parent, data[i]);
    }
  } // Put any non-null nodes that don’t fit into exit.


  for (; i < groupLength; ++i) {
    if (node = group[i]) {
      exit[i] = node;
    }
  }
}

function bindKey(parent, group, enter, update, exit, data, key) {
  var i,
      node,
      nodeByKeyValue = {},
      groupLength = group.length,
      dataLength = data.length,
      keyValues = new Array(groupLength),
      keyValue; // Compute the key for each node.
  // If multiple nodes have the same key, the duplicates are added to exit.

  for (i = 0; i < groupLength; ++i) {
    if (node = group[i]) {
      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);

      if (keyValue in nodeByKeyValue) {
        exit[i] = node;
      } else {
        nodeByKeyValue[keyValue] = node;
      }
    }
  } // Compute the key for each datum.
  // If there a node associated with this key, join and add it to update.
  // If there is not (or the key is a duplicate), add it to enter.


  for (i = 0; i < dataLength; ++i) {
    keyValue = keyPrefix + key.call(parent, data[i], i, data);

    if (node = nodeByKeyValue[keyValue]) {
      update[i] = node;
      node.__data__ = data[i];
      nodeByKeyValue[keyValue] = null;
    } else {
      enter[i] = new _enter.EnterNode(parent, data[i]);
    }
  } // Add any remaining nodes that were not bound to data to exit.


  for (i = 0; i < groupLength; ++i) {
    if ((node = group[i]) && nodeByKeyValue[keyValues[i]] === node) {
      exit[i] = node;
    }
  }
}

function _default(value, key) {
  if (!value) {
    data = new Array(this.size()), j = -1;
    this.each(function (d) {
      data[++j] = d;
    });
    return data;
  }

  var bind = key ? bindKey : bindIndex,
      parents = this._parents,
      groups = this._groups;
  if (typeof value !== "function") value = (0, _constant.default)(value);

  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {
    var parent = parents[j],
        group = groups[j],
        groupLength = group.length,
        data = value.call(parent, parent && parent.__data__, j, parents),
        dataLength = data.length,
        enterGroup = enter[j] = new Array(dataLength),
        updateGroup = update[j] = new Array(dataLength),
        exitGroup = exit[j] = new Array(groupLength);
    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key); // Now connect the enter nodes to their following update node, such that
    // appendChild can insert the materialized enter node before this node,
    // rather than at the end of the parent node.

    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {
      if (previous = enterGroup[i0]) {
        if (i0 >= i1) i1 = i0 + 1;

        while (!(next = updateGroup[i1]) && ++i1 < dataLength);

        previous._next = next || null;
      }
    }
  }

  update = new _index.Selection(update, parents);
  update._enter = enter;
  update._exit = exit;
  return update;
}
},{"./index":"../../node_modules/d3-selection/src/selection/index.js","./enter":"../../node_modules/d3-selection/src/selection/enter.js","../constant":"../../node_modules/d3-selection/src/constant.js"}],"../../node_modules/d3-selection/src/selection/exit.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _sparse = _interopRequireDefault(require("./sparse"));

var _index = require("./index");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  return new _index.Selection(this._exit || this._groups.map(_sparse.default), this._parents);
}
},{"./sparse":"../../node_modules/d3-selection/src/selection/sparse.js","./index":"../../node_modules/d3-selection/src/selection/index.js"}],"../../node_modules/d3-selection/src/selection/join.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(onenter, onupdate, onexit) {
  var enter = this.enter(),
      update = this,
      exit = this.exit();
  enter = typeof onenter === "function" ? onenter(enter) : enter.append(onenter + "");
  if (onupdate != null) update = onupdate(update);
  if (onexit == null) exit.remove();else onexit(exit);
  return enter && update ? enter.merge(update).order() : update;
}
},{}],"../../node_modules/d3-selection/src/selection/merge.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index");

function _default(selection) {
  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group0[i] || group1[i]) {
        merge[i] = node;
      }
    }
  }

  for (; j < m0; ++j) {
    merges[j] = groups0[j];
  }

  return new _index.Selection(merges, this._parents);
}
},{"./index":"../../node_modules/d3-selection/src/selection/index.js"}],"../../node_modules/d3-selection/src/selection/order.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {
    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {
      if (node = group[i]) {
        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);
        next = node;
      }
    }
  }

  return this;
}
},{}],"../../node_modules/d3-selection/src/selection/sort.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index");

function _default(compare) {
  if (!compare) compare = ascending;

  function compareNode(a, b) {
    return a && b ? compare(a.__data__, b.__data__) : !a - !b;
  }

  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        sortgroup[i] = node;
      }
    }

    sortgroup.sort(compareNode);
  }

  return new _index.Selection(sortgroups, this._parents).order();
}

function ascending(a, b) {
  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
}
},{"./index":"../../node_modules/d3-selection/src/selection/index.js"}],"../../node_modules/d3-selection/src/selection/call.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var callback = arguments[0];
  arguments[0] = this;
  callback.apply(null, arguments);
  return this;
}
},{}],"../../node_modules/d3-selection/src/selection/nodes.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var nodes = new Array(this.size()),
      i = -1;
  this.each(function () {
    nodes[++i] = this;
  });
  return nodes;
}
},{}],"../../node_modules/d3-selection/src/selection/node.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {
      var node = group[i];
      if (node) return node;
    }
  }

  return null;
}
},{}],"../../node_modules/d3-selection/src/selection/size.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var size = 0;
  this.each(function () {
    ++size;
  });
  return size;
}
},{}],"../../node_modules/d3-selection/src/selection/empty.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  return !this.node();
}
},{}],"../../node_modules/d3-selection/src/selection/each.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(callback) {
  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {
      if (node = group[i]) callback.call(node, node.__data__, i, group);
    }
  }

  return this;
}
},{}],"../../node_modules/d3-selection/src/selection/attr.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _namespace = _interopRequireDefault(require("../namespace"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function attrRemove(name) {
  return function () {
    this.removeAttribute(name);
  };
}

function attrRemoveNS(fullname) {
  return function () {
    this.removeAttributeNS(fullname.space, fullname.local);
  };
}

function attrConstant(name, value) {
  return function () {
    this.setAttribute(name, value);
  };
}

function attrConstantNS(fullname, value) {
  return function () {
    this.setAttributeNS(fullname.space, fullname.local, value);
  };
}

function attrFunction(name, value) {
  return function () {
    var v = value.apply(this, arguments);
    if (v == null) this.removeAttribute(name);else this.setAttribute(name, v);
  };
}

function attrFunctionNS(fullname, value) {
  return function () {
    var v = value.apply(this, arguments);
    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);else this.setAttributeNS(fullname.space, fullname.local, v);
  };
}

function _default(name, value) {
  var fullname = (0, _namespace.default)(name);

  if (arguments.length < 2) {
    var node = this.node();
    return fullname.local ? node.getAttributeNS(fullname.space, fullname.local) : node.getAttribute(fullname);
  }

  return this.each((value == null ? fullname.local ? attrRemoveNS : attrRemove : typeof value === "function" ? fullname.local ? attrFunctionNS : attrFunction : fullname.local ? attrConstantNS : attrConstant)(fullname, value));
}
},{"../namespace":"../../node_modules/d3-selection/src/namespace.js"}],"../../node_modules/d3-selection/src/window.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(node) {
  return node.ownerDocument && node.ownerDocument.defaultView || // node is a Node
  node.document && node // node is a Window
  || node.defaultView; // node is a Document
}
},{}],"../../node_modules/d3-selection/src/selection/style.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.styleValue = styleValue;

var _window = _interopRequireDefault(require("../window"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function styleRemove(name) {
  return function () {
    this.style.removeProperty(name);
  };
}

function styleConstant(name, value, priority) {
  return function () {
    this.style.setProperty(name, value, priority);
  };
}

function styleFunction(name, value, priority) {
  return function () {
    var v = value.apply(this, arguments);
    if (v == null) this.style.removeProperty(name);else this.style.setProperty(name, v, priority);
  };
}

function _default(name, value, priority) {
  return arguments.length > 1 ? this.each((value == null ? styleRemove : typeof value === "function" ? styleFunction : styleConstant)(name, value, priority == null ? "" : priority)) : styleValue(this.node(), name);
}

function styleValue(node, name) {
  return node.style.getPropertyValue(name) || (0, _window.default)(node).getComputedStyle(node, null).getPropertyValue(name);
}
},{"../window":"../../node_modules/d3-selection/src/window.js"}],"../../node_modules/d3-selection/src/selection/property.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function propertyRemove(name) {
  return function () {
    delete this[name];
  };
}

function propertyConstant(name, value) {
  return function () {
    this[name] = value;
  };
}

function propertyFunction(name, value) {
  return function () {
    var v = value.apply(this, arguments);
    if (v == null) delete this[name];else this[name] = v;
  };
}

function _default(name, value) {
  return arguments.length > 1 ? this.each((value == null ? propertyRemove : typeof value === "function" ? propertyFunction : propertyConstant)(name, value)) : this.node()[name];
}
},{}],"../../node_modules/d3-selection/src/selection/classed.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function classArray(string) {
  return string.trim().split(/^|\s+/);
}

function classList(node) {
  return node.classList || new ClassList(node);
}

function ClassList(node) {
  this._node = node;
  this._names = classArray(node.getAttribute("class") || "");
}

ClassList.prototype = {
  add: function (name) {
    var i = this._names.indexOf(name);

    if (i < 0) {
      this._names.push(name);

      this._node.setAttribute("class", this._names.join(" "));
    }
  },
  remove: function (name) {
    var i = this._names.indexOf(name);

    if (i >= 0) {
      this._names.splice(i, 1);

      this._node.setAttribute("class", this._names.join(" "));
    }
  },
  contains: function (name) {
    return this._names.indexOf(name) >= 0;
  }
};

function classedAdd(node, names) {
  var list = classList(node),
      i = -1,
      n = names.length;

  while (++i < n) list.add(names[i]);
}

function classedRemove(node, names) {
  var list = classList(node),
      i = -1,
      n = names.length;

  while (++i < n) list.remove(names[i]);
}

function classedTrue(names) {
  return function () {
    classedAdd(this, names);
  };
}

function classedFalse(names) {
  return function () {
    classedRemove(this, names);
  };
}

function classedFunction(names, value) {
  return function () {
    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);
  };
}

function _default(name, value) {
  var names = classArray(name + "");

  if (arguments.length < 2) {
    var list = classList(this.node()),
        i = -1,
        n = names.length;

    while (++i < n) if (!list.contains(names[i])) return false;

    return true;
  }

  return this.each((typeof value === "function" ? classedFunction : value ? classedTrue : classedFalse)(names, value));
}
},{}],"../../node_modules/d3-selection/src/selection/text.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function textRemove() {
  this.textContent = "";
}

function textConstant(value) {
  return function () {
    this.textContent = value;
  };
}

function textFunction(value) {
  return function () {
    var v = value.apply(this, arguments);
    this.textContent = v == null ? "" : v;
  };
}

function _default(value) {
  return arguments.length ? this.each(value == null ? textRemove : (typeof value === "function" ? textFunction : textConstant)(value)) : this.node().textContent;
}
},{}],"../../node_modules/d3-selection/src/selection/html.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function htmlRemove() {
  this.innerHTML = "";
}

function htmlConstant(value) {
  return function () {
    this.innerHTML = value;
  };
}

function htmlFunction(value) {
  return function () {
    var v = value.apply(this, arguments);
    this.innerHTML = v == null ? "" : v;
  };
}

function _default(value) {
  return arguments.length ? this.each(value == null ? htmlRemove : (typeof value === "function" ? htmlFunction : htmlConstant)(value)) : this.node().innerHTML;
}
},{}],"../../node_modules/d3-selection/src/selection/raise.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function raise() {
  if (this.nextSibling) this.parentNode.appendChild(this);
}

function _default() {
  return this.each(raise);
}
},{}],"../../node_modules/d3-selection/src/selection/lower.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function lower() {
  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);
}

function _default() {
  return this.each(lower);
}
},{}],"../../node_modules/d3-selection/src/selection/append.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _creator = _interopRequireDefault(require("../creator"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(name) {
  var create = typeof name === "function" ? name : (0, _creator.default)(name);
  return this.select(function () {
    return this.appendChild(create.apply(this, arguments));
  });
}
},{"../creator":"../../node_modules/d3-selection/src/creator.js"}],"../../node_modules/d3-selection/src/selection/insert.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _creator = _interopRequireDefault(require("../creator"));

var _selector = _interopRequireDefault(require("../selector"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function constantNull() {
  return null;
}

function _default(name, before) {
  var create = typeof name === "function" ? name : (0, _creator.default)(name),
      select = before == null ? constantNull : typeof before === "function" ? before : (0, _selector.default)(before);
  return this.select(function () {
    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);
  });
}
},{"../creator":"../../node_modules/d3-selection/src/creator.js","../selector":"../../node_modules/d3-selection/src/selector.js"}],"../../node_modules/d3-selection/src/selection/remove.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function remove() {
  var parent = this.parentNode;
  if (parent) parent.removeChild(this);
}

function _default() {
  return this.each(remove);
}
},{}],"../../node_modules/d3-selection/src/selection/clone.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function selection_cloneShallow() {
  var clone = this.cloneNode(false),
      parent = this.parentNode;
  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;
}

function selection_cloneDeep() {
  var clone = this.cloneNode(true),
      parent = this.parentNode;
  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;
}

function _default(deep) {
  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);
}
},{}],"../../node_modules/d3-selection/src/selection/datum.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(value) {
  return arguments.length ? this.property("__data__", value) : this.node().__data__;
}
},{}],"../../node_modules/d3-selection/src/selection/on.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.customEvent = customEvent;
exports.event = void 0;
var filterEvents = {};
var event = null;
exports.event = event;

if (typeof document !== "undefined") {
  var element = document.documentElement;

  if (!("onmouseenter" in element)) {
    filterEvents = {
      mouseenter: "mouseover",
      mouseleave: "mouseout"
    };
  }
}

function filterContextListener(listener, index, group) {
  listener = contextListener(listener, index, group);
  return function (event) {
    var related = event.relatedTarget;

    if (!related || related !== this && !(related.compareDocumentPosition(this) & 8)) {
      listener.call(this, event);
    }
  };
}

function contextListener(listener, index, group) {
  return function (event1) {
    var event0 = event; // Events can be reentrant (e.g., focus).

    exports.event = event = event1;

    try {
      listener.call(this, this.__data__, index, group);
    } finally {
      exports.event = event = event0;
    }
  };
}

function parseTypenames(typenames) {
  return typenames.trim().split(/^|\s+/).map(function (t) {
    var name = "",
        i = t.indexOf(".");
    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
    return {
      type: t,
      name: name
    };
  });
}

function onRemove(typename) {
  return function () {
    var on = this.__on;
    if (!on) return;

    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {
      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {
        this.removeEventListener(o.type, o.listener, o.capture);
      } else {
        on[++i] = o;
      }
    }

    if (++i) on.length = i;else delete this.__on;
  };
}

function onAdd(typename, value, capture) {
  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;
  return function (d, i, group) {
    var on = this.__on,
        o,
        listener = wrap(value, i, group);
    if (on) for (var j = 0, m = on.length; j < m; ++j) {
      if ((o = on[j]).type === typename.type && o.name === typename.name) {
        this.removeEventListener(o.type, o.listener, o.capture);
        this.addEventListener(o.type, o.listener = listener, o.capture = capture);
        o.value = value;
        return;
      }
    }
    this.addEventListener(typename.type, listener, capture);
    o = {
      type: typename.type,
      name: typename.name,
      value: value,
      listener: listener,
      capture: capture
    };
    if (!on) this.__on = [o];else on.push(o);
  };
}

function _default(typename, value, capture) {
  var typenames = parseTypenames(typename + ""),
      i,
      n = typenames.length,
      t;

  if (arguments.length < 2) {
    var on = this.node().__on;

    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {
      for (i = 0, o = on[j]; i < n; ++i) {
        if ((t = typenames[i]).type === o.type && t.name === o.name) {
          return o.value;
        }
      }
    }
    return;
  }

  on = value ? onAdd : onRemove;
  if (capture == null) capture = false;

  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));

  return this;
}

function customEvent(event1, listener, that, args) {
  var event0 = event;
  event1.sourceEvent = event;
  exports.event = event = event1;

  try {
    return listener.apply(that, args);
  } finally {
    exports.event = event = event0;
  }
}
},{}],"../../node_modules/d3-selection/src/selection/dispatch.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _window = _interopRequireDefault(require("../window"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function dispatchEvent(node, type, params) {
  var window = (0, _window.default)(node),
      event = window.CustomEvent;

  if (typeof event === "function") {
    event = new event(type, params);
  } else {
    event = window.document.createEvent("Event");
    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;else event.initEvent(type, false, false);
  }

  node.dispatchEvent(event);
}

function dispatchConstant(type, params) {
  return function () {
    return dispatchEvent(this, type, params);
  };
}

function dispatchFunction(type, params) {
  return function () {
    return dispatchEvent(this, type, params.apply(this, arguments));
  };
}

function _default(type, params) {
  return this.each((typeof params === "function" ? dispatchFunction : dispatchConstant)(type, params));
}
},{"../window":"../../node_modules/d3-selection/src/window.js"}],"../../node_modules/d3-selection/src/selection/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Selection = Selection;
exports.default = exports.root = void 0;

var _select = _interopRequireDefault(require("./select"));

var _selectAll = _interopRequireDefault(require("./selectAll"));

var _filter = _interopRequireDefault(require("./filter"));

var _data = _interopRequireDefault(require("./data"));

var _enter = _interopRequireDefault(require("./enter"));

var _exit = _interopRequireDefault(require("./exit"));

var _join = _interopRequireDefault(require("./join"));

var _merge = _interopRequireDefault(require("./merge"));

var _order = _interopRequireDefault(require("./order"));

var _sort = _interopRequireDefault(require("./sort"));

var _call = _interopRequireDefault(require("./call"));

var _nodes = _interopRequireDefault(require("./nodes"));

var _node = _interopRequireDefault(require("./node"));

var _size = _interopRequireDefault(require("./size"));

var _empty = _interopRequireDefault(require("./empty"));

var _each = _interopRequireDefault(require("./each"));

var _attr = _interopRequireDefault(require("./attr"));

var _style = _interopRequireDefault(require("./style"));

var _property = _interopRequireDefault(require("./property"));

var _classed = _interopRequireDefault(require("./classed"));

var _text = _interopRequireDefault(require("./text"));

var _html = _interopRequireDefault(require("./html"));

var _raise = _interopRequireDefault(require("./raise"));

var _lower = _interopRequireDefault(require("./lower"));

var _append = _interopRequireDefault(require("./append"));

var _insert = _interopRequireDefault(require("./insert"));

var _remove = _interopRequireDefault(require("./remove"));

var _clone = _interopRequireDefault(require("./clone"));

var _datum = _interopRequireDefault(require("./datum"));

var _on = _interopRequireDefault(require("./on"));

var _dispatch = _interopRequireDefault(require("./dispatch"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var root = [null];
exports.root = root;

function Selection(groups, parents) {
  this._groups = groups;
  this._parents = parents;
}

function selection() {
  return new Selection([[document.documentElement]], root);
}

Selection.prototype = selection.prototype = {
  constructor: Selection,
  select: _select.default,
  selectAll: _selectAll.default,
  filter: _filter.default,
  data: _data.default,
  enter: _enter.default,
  exit: _exit.default,
  join: _join.default,
  merge: _merge.default,
  order: _order.default,
  sort: _sort.default,
  call: _call.default,
  nodes: _nodes.default,
  node: _node.default,
  size: _size.default,
  empty: _empty.default,
  each: _each.default,
  attr: _attr.default,
  style: _style.default,
  property: _property.default,
  classed: _classed.default,
  text: _text.default,
  html: _html.default,
  raise: _raise.default,
  lower: _lower.default,
  append: _append.default,
  insert: _insert.default,
  remove: _remove.default,
  clone: _clone.default,
  datum: _datum.default,
  on: _on.default,
  dispatch: _dispatch.default
};
var _default = selection;
exports.default = _default;
},{"./select":"../../node_modules/d3-selection/src/selection/select.js","./selectAll":"../../node_modules/d3-selection/src/selection/selectAll.js","./filter":"../../node_modules/d3-selection/src/selection/filter.js","./data":"../../node_modules/d3-selection/src/selection/data.js","./enter":"../../node_modules/d3-selection/src/selection/enter.js","./exit":"../../node_modules/d3-selection/src/selection/exit.js","./join":"../../node_modules/d3-selection/src/selection/join.js","./merge":"../../node_modules/d3-selection/src/selection/merge.js","./order":"../../node_modules/d3-selection/src/selection/order.js","./sort":"../../node_modules/d3-selection/src/selection/sort.js","./call":"../../node_modules/d3-selection/src/selection/call.js","./nodes":"../../node_modules/d3-selection/src/selection/nodes.js","./node":"../../node_modules/d3-selection/src/selection/node.js","./size":"../../node_modules/d3-selection/src/selection/size.js","./empty":"../../node_modules/d3-selection/src/selection/empty.js","./each":"../../node_modules/d3-selection/src/selection/each.js","./attr":"../../node_modules/d3-selection/src/selection/attr.js","./style":"../../node_modules/d3-selection/src/selection/style.js","./property":"../../node_modules/d3-selection/src/selection/property.js","./classed":"../../node_modules/d3-selection/src/selection/classed.js","./text":"../../node_modules/d3-selection/src/selection/text.js","./html":"../../node_modules/d3-selection/src/selection/html.js","./raise":"../../node_modules/d3-selection/src/selection/raise.js","./lower":"../../node_modules/d3-selection/src/selection/lower.js","./append":"../../node_modules/d3-selection/src/selection/append.js","./insert":"../../node_modules/d3-selection/src/selection/insert.js","./remove":"../../node_modules/d3-selection/src/selection/remove.js","./clone":"../../node_modules/d3-selection/src/selection/clone.js","./datum":"../../node_modules/d3-selection/src/selection/datum.js","./on":"../../node_modules/d3-selection/src/selection/on.js","./dispatch":"../../node_modules/d3-selection/src/selection/dispatch.js"}],"../../node_modules/d3-selection/src/select.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./selection/index");

function _default(selector) {
  return typeof selector === "string" ? new _index.Selection([[document.querySelector(selector)]], [document.documentElement]) : new _index.Selection([[selector]], _index.root);
}
},{"./selection/index":"../../node_modules/d3-selection/src/selection/index.js"}],"../../node_modules/d3-selection/src/create.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _creator = _interopRequireDefault(require("./creator"));

var _select = _interopRequireDefault(require("./select"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(name) {
  return (0, _select.default)((0, _creator.default)(name).call(document.documentElement));
}
},{"./creator":"../../node_modules/d3-selection/src/creator.js","./select":"../../node_modules/d3-selection/src/select.js"}],"../../node_modules/d3-selection/src/local.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = local;
var nextId = 0;

function local() {
  return new Local();
}

function Local() {
  this._ = "@" + (++nextId).toString(36);
}

Local.prototype = local.prototype = {
  constructor: Local,
  get: function (node) {
    var id = this._;

    while (!(id in node)) if (!(node = node.parentNode)) return;

    return node[id];
  },
  set: function (node, value) {
    return node[this._] = value;
  },
  remove: function (node) {
    return this._ in node && delete node[this._];
  },
  toString: function () {
    return this._;
  }
};
},{}],"../../node_modules/d3-selection/src/sourceEvent.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _on = require("./selection/on");

function _default() {
  var current = _on.event,
      source;

  while (source = current.sourceEvent) current = source;

  return current;
}
},{"./selection/on":"../../node_modules/d3-selection/src/selection/on.js"}],"../../node_modules/d3-selection/src/point.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(node, event) {
  var svg = node.ownerSVGElement || node;

  if (svg.createSVGPoint) {
    var point = svg.createSVGPoint();
    point.x = event.clientX, point.y = event.clientY;
    point = point.matrixTransform(node.getScreenCTM().inverse());
    return [point.x, point.y];
  }

  var rect = node.getBoundingClientRect();
  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];
}
},{}],"../../node_modules/d3-selection/src/mouse.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _sourceEvent = _interopRequireDefault(require("./sourceEvent"));

var _point = _interopRequireDefault(require("./point"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(node) {
  var event = (0, _sourceEvent.default)();
  if (event.changedTouches) event = event.changedTouches[0];
  return (0, _point.default)(node, event);
}
},{"./sourceEvent":"../../node_modules/d3-selection/src/sourceEvent.js","./point":"../../node_modules/d3-selection/src/point.js"}],"../../node_modules/d3-selection/src/selectAll.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./selection/index");

function _default(selector) {
  return typeof selector === "string" ? new _index.Selection([document.querySelectorAll(selector)], [document.documentElement]) : new _index.Selection([selector == null ? [] : selector], _index.root);
}
},{"./selection/index":"../../node_modules/d3-selection/src/selection/index.js"}],"../../node_modules/d3-selection/src/touch.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _sourceEvent = _interopRequireDefault(require("./sourceEvent"));

var _point = _interopRequireDefault(require("./point"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(node, touches, identifier) {
  if (arguments.length < 3) identifier = touches, touches = (0, _sourceEvent.default)().changedTouches;

  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {
    if ((touch = touches[i]).identifier === identifier) {
      return (0, _point.default)(node, touch);
    }
  }

  return null;
}
},{"./sourceEvent":"../../node_modules/d3-selection/src/sourceEvent.js","./point":"../../node_modules/d3-selection/src/point.js"}],"../../node_modules/d3-selection/src/touches.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _sourceEvent = _interopRequireDefault(require("./sourceEvent"));

var _point = _interopRequireDefault(require("./point"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(node, touches) {
  if (touches == null) touches = (0, _sourceEvent.default)().touches;

  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {
    points[i] = (0, _point.default)(node, touches[i]);
  }

  return points;
}
},{"./sourceEvent":"../../node_modules/d3-selection/src/sourceEvent.js","./point":"../../node_modules/d3-selection/src/point.js"}],"../../node_modules/d3-selection/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "create", {
  enumerable: true,
  get: function () {
    return _create.default;
  }
});
Object.defineProperty(exports, "creator", {
  enumerable: true,
  get: function () {
    return _creator.default;
  }
});
Object.defineProperty(exports, "local", {
  enumerable: true,
  get: function () {
    return _local.default;
  }
});
Object.defineProperty(exports, "matcher", {
  enumerable: true,
  get: function () {
    return _matcher.default;
  }
});
Object.defineProperty(exports, "mouse", {
  enumerable: true,
  get: function () {
    return _mouse.default;
  }
});
Object.defineProperty(exports, "namespace", {
  enumerable: true,
  get: function () {
    return _namespace.default;
  }
});
Object.defineProperty(exports, "namespaces", {
  enumerable: true,
  get: function () {
    return _namespaces.default;
  }
});
Object.defineProperty(exports, "clientPoint", {
  enumerable: true,
  get: function () {
    return _point.default;
  }
});
Object.defineProperty(exports, "select", {
  enumerable: true,
  get: function () {
    return _select.default;
  }
});
Object.defineProperty(exports, "selectAll", {
  enumerable: true,
  get: function () {
    return _selectAll.default;
  }
});
Object.defineProperty(exports, "selection", {
  enumerable: true,
  get: function () {
    return _index.default;
  }
});
Object.defineProperty(exports, "selector", {
  enumerable: true,
  get: function () {
    return _selector.default;
  }
});
Object.defineProperty(exports, "selectorAll", {
  enumerable: true,
  get: function () {
    return _selectorAll.default;
  }
});
Object.defineProperty(exports, "style", {
  enumerable: true,
  get: function () {
    return _style.styleValue;
  }
});
Object.defineProperty(exports, "touch", {
  enumerable: true,
  get: function () {
    return _touch.default;
  }
});
Object.defineProperty(exports, "touches", {
  enumerable: true,
  get: function () {
    return _touches.default;
  }
});
Object.defineProperty(exports, "window", {
  enumerable: true,
  get: function () {
    return _window.default;
  }
});
Object.defineProperty(exports, "event", {
  enumerable: true,
  get: function () {
    return _on.event;
  }
});
Object.defineProperty(exports, "customEvent", {
  enumerable: true,
  get: function () {
    return _on.customEvent;
  }
});

var _create = _interopRequireDefault(require("./create"));

var _creator = _interopRequireDefault(require("./creator"));

var _local = _interopRequireDefault(require("./local"));

var _matcher = _interopRequireDefault(require("./matcher"));

var _mouse = _interopRequireDefault(require("./mouse"));

var _namespace = _interopRequireDefault(require("./namespace"));

var _namespaces = _interopRequireDefault(require("./namespaces"));

var _point = _interopRequireDefault(require("./point"));

var _select = _interopRequireDefault(require("./select"));

var _selectAll = _interopRequireDefault(require("./selectAll"));

var _index = _interopRequireDefault(require("./selection/index"));

var _selector = _interopRequireDefault(require("./selector"));

var _selectorAll = _interopRequireDefault(require("./selectorAll"));

var _style = require("./selection/style");

var _touch = _interopRequireDefault(require("./touch"));

var _touches = _interopRequireDefault(require("./touches"));

var _window = _interopRequireDefault(require("./window"));

var _on = require("./selection/on");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./create":"../../node_modules/d3-selection/src/create.js","./creator":"../../node_modules/d3-selection/src/creator.js","./local":"../../node_modules/d3-selection/src/local.js","./matcher":"../../node_modules/d3-selection/src/matcher.js","./mouse":"../../node_modules/d3-selection/src/mouse.js","./namespace":"../../node_modules/d3-selection/src/namespace.js","./namespaces":"../../node_modules/d3-selection/src/namespaces.js","./point":"../../node_modules/d3-selection/src/point.js","./select":"../../node_modules/d3-selection/src/select.js","./selectAll":"../../node_modules/d3-selection/src/selectAll.js","./selection/index":"../../node_modules/d3-selection/src/selection/index.js","./selector":"../../node_modules/d3-selection/src/selector.js","./selectorAll":"../../node_modules/d3-selection/src/selectorAll.js","./selection/style":"../../node_modules/d3-selection/src/selection/style.js","./touch":"../../node_modules/d3-selection/src/touch.js","./touches":"../../node_modules/d3-selection/src/touches.js","./window":"../../node_modules/d3-selection/src/window.js","./selection/on":"../../node_modules/d3-selection/src/selection/on.js"}],"../../node_modules/d3-drag/src/noevent.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.nopropagation = nopropagation;
exports.default = _default;

var _d3Selection = require("d3-selection");

function nopropagation() {
  _d3Selection.event.stopImmediatePropagation();
}

function _default() {
  _d3Selection.event.preventDefault();

  _d3Selection.event.stopImmediatePropagation();
}
},{"d3-selection":"../../node_modules/d3-selection/src/index.js"}],"../../node_modules/d3-drag/src/nodrag.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.yesdrag = yesdrag;

var _d3Selection = require("d3-selection");

var _noevent = _interopRequireDefault(require("./noevent.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(view) {
  var root = view.document.documentElement,
      selection = (0, _d3Selection.select)(view).on("dragstart.drag", _noevent.default, true);

  if ("onselectstart" in root) {
    selection.on("selectstart.drag", _noevent.default, true);
  } else {
    root.__noselect = root.style.MozUserSelect;
    root.style.MozUserSelect = "none";
  }
}

function yesdrag(view, noclick) {
  var root = view.document.documentElement,
      selection = (0, _d3Selection.select)(view).on("dragstart.drag", null);

  if (noclick) {
    selection.on("click.drag", _noevent.default, true);
    setTimeout(function () {
      selection.on("click.drag", null);
    }, 0);
  }

  if ("onselectstart" in root) {
    selection.on("selectstart.drag", null);
  } else {
    root.style.MozUserSelect = root.__noselect;
    delete root.__noselect;
  }
}
},{"d3-selection":"../../node_modules/d3-selection/src/index.js","./noevent.js":"../../node_modules/d3-drag/src/noevent.js"}],"../../node_modules/d3-drag/src/constant.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return function () {
    return x;
  };
}
},{}],"../../node_modules/d3-drag/src/event.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = DragEvent;

function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {
  this.target = target;
  this.type = type;
  this.subject = subject;
  this.identifier = id;
  this.active = active;
  this.x = x;
  this.y = y;
  this.dx = dx;
  this.dy = dy;
  this._ = dispatch;
}

DragEvent.prototype.on = function () {
  var value = this._.on.apply(this._, arguments);

  return value === this._ ? this : value;
};
},{}],"../../node_modules/d3-drag/src/drag.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Dispatch = require("d3-dispatch");

var _d3Selection = require("d3-selection");

var _nodrag = _interopRequireWildcard(require("./nodrag.js"));

var _noevent = _interopRequireWildcard(require("./noevent.js"));

var _constant = _interopRequireDefault(require("./constant.js"));

var _event = _interopRequireDefault(require("./event.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// Ignore right-click, since that should open the context menu.
function defaultFilter() {
  return !_d3Selection.event.ctrlKey && !_d3Selection.event.button;
}

function defaultContainer() {
  return this.parentNode;
}

function defaultSubject(d) {
  return d == null ? {
    x: _d3Selection.event.x,
    y: _d3Selection.event.y
  } : d;
}

function defaultTouchable() {
  return navigator.maxTouchPoints || "ontouchstart" in this;
}

function _default() {
  var filter = defaultFilter,
      container = defaultContainer,
      subject = defaultSubject,
      touchable = defaultTouchable,
      gestures = {},
      listeners = (0, _d3Dispatch.dispatch)("start", "drag", "end"),
      active = 0,
      mousedownx,
      mousedowny,
      mousemoving,
      touchending,
      clickDistance2 = 0;

  function drag(selection) {
    selection.on("mousedown.drag", mousedowned).filter(touchable).on("touchstart.drag", touchstarted).on("touchmove.drag", touchmoved).on("touchend.drag touchcancel.drag", touchended).style("touch-action", "none").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }

  function mousedowned() {
    if (touchending || !filter.apply(this, arguments)) return;
    var gesture = beforestart("mouse", container.apply(this, arguments), _d3Selection.mouse, this, arguments);
    if (!gesture) return;
    (0, _d3Selection.select)(_d3Selection.event.view).on("mousemove.drag", mousemoved, true).on("mouseup.drag", mouseupped, true);
    (0, _nodrag.default)(_d3Selection.event.view);
    (0, _noevent.nopropagation)();
    mousemoving = false;
    mousedownx = _d3Selection.event.clientX;
    mousedowny = _d3Selection.event.clientY;
    gesture("start");
  }

  function mousemoved() {
    (0, _noevent.default)();

    if (!mousemoving) {
      var dx = _d3Selection.event.clientX - mousedownx,
          dy = _d3Selection.event.clientY - mousedowny;
      mousemoving = dx * dx + dy * dy > clickDistance2;
    }

    gestures.mouse("drag");
  }

  function mouseupped() {
    (0, _d3Selection.select)(_d3Selection.event.view).on("mousemove.drag mouseup.drag", null);
    (0, _nodrag.yesdrag)(_d3Selection.event.view, mousemoving);
    (0, _noevent.default)();
    gestures.mouse("end");
  }

  function touchstarted() {
    if (!filter.apply(this, arguments)) return;
    var touches = _d3Selection.event.changedTouches,
        c = container.apply(this, arguments),
        n = touches.length,
        i,
        gesture;

    for (i = 0; i < n; ++i) {
      if (gesture = beforestart(touches[i].identifier, c, _d3Selection.touch, this, arguments)) {
        (0, _noevent.nopropagation)();
        gesture("start");
      }
    }
  }

  function touchmoved() {
    var touches = _d3Selection.event.changedTouches,
        n = touches.length,
        i,
        gesture;

    for (i = 0; i < n; ++i) {
      if (gesture = gestures[touches[i].identifier]) {
        (0, _noevent.default)();
        gesture("drag");
      }
    }
  }

  function touchended() {
    var touches = _d3Selection.event.changedTouches,
        n = touches.length,
        i,
        gesture;
    if (touchending) clearTimeout(touchending);
    touchending = setTimeout(function () {
      touchending = null;
    }, 500); // Ghost clicks are delayed!

    for (i = 0; i < n; ++i) {
      if (gesture = gestures[touches[i].identifier]) {
        (0, _noevent.nopropagation)();
        gesture("end");
      }
    }
  }

  function beforestart(id, container, point, that, args) {
    var p = point(container, id),
        s,
        dx,
        dy,
        sublisteners = listeners.copy();
    if (!(0, _d3Selection.customEvent)(new _event.default(drag, "beforestart", s, id, active, p[0], p[1], 0, 0, sublisteners), function () {
      if ((_d3Selection.event.subject = s = subject.apply(that, args)) == null) return false;
      dx = s.x - p[0] || 0;
      dy = s.y - p[1] || 0;
      return true;
    })) return;
    return function gesture(type) {
      var p0 = p,
          n;

      switch (type) {
        case "start":
          gestures[id] = gesture, n = active++;
          break;

        case "end":
          delete gestures[id], --active;
        // nobreak

        case "drag":
          p = point(container, id), n = active;
          break;
      }

      (0, _d3Selection.customEvent)(new _event.default(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);
    };
  }

  drag.filter = function (_) {
    return arguments.length ? (filter = typeof _ === "function" ? _ : (0, _constant.default)(!!_), drag) : filter;
  };

  drag.container = function (_) {
    return arguments.length ? (container = typeof _ === "function" ? _ : (0, _constant.default)(_), drag) : container;
  };

  drag.subject = function (_) {
    return arguments.length ? (subject = typeof _ === "function" ? _ : (0, _constant.default)(_), drag) : subject;
  };

  drag.touchable = function (_) {
    return arguments.length ? (touchable = typeof _ === "function" ? _ : (0, _constant.default)(!!_), drag) : touchable;
  };

  drag.on = function () {
    var value = listeners.on.apply(listeners, arguments);
    return value === listeners ? drag : value;
  };

  drag.clickDistance = function (_) {
    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);
  };

  return drag;
}
},{"d3-dispatch":"../../node_modules/d3-dispatch/src/index.js","d3-selection":"../../node_modules/d3-selection/src/index.js","./nodrag.js":"../../node_modules/d3-drag/src/nodrag.js","./noevent.js":"../../node_modules/d3-drag/src/noevent.js","./constant.js":"../../node_modules/d3-drag/src/constant.js","./event.js":"../../node_modules/d3-drag/src/event.js"}],"../../node_modules/d3-drag/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "drag", {
  enumerable: true,
  get: function () {
    return _drag.default;
  }
});
Object.defineProperty(exports, "dragDisable", {
  enumerable: true,
  get: function () {
    return _nodrag.default;
  }
});
Object.defineProperty(exports, "dragEnable", {
  enumerable: true,
  get: function () {
    return _nodrag.yesdrag;
  }
});

var _drag = _interopRequireDefault(require("./drag.js"));

var _nodrag = _interopRequireWildcard(require("./nodrag.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./drag.js":"../../node_modules/d3-drag/src/drag.js","./nodrag.js":"../../node_modules/d3-drag/src/nodrag.js"}],"../../node_modules/d3-color/src/define.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.extend = extend;

function _default(constructor, factory, prototype) {
  constructor.prototype = factory.prototype = prototype;
  prototype.constructor = constructor;
}

function extend(parent, definition) {
  var prototype = Object.create(parent.prototype);

  for (var key in definition) prototype[key] = definition[key];

  return prototype;
}
},{}],"../../node_modules/d3-color/src/color.js":[function(require,module,exports) {

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Color = Color;
exports.default = color;
exports.rgbConvert = rgbConvert;
exports.rgb = rgb;
exports.Rgb = Rgb;
exports.hslConvert = hslConvert;
exports.hsl = hsl;
exports.brighter = exports.darker = void 0;

var _define = _interopRequireWildcard(require("./define.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function Color() {}

var darker = 0.7;
exports.darker = darker;
var brighter = 1 / darker;
exports.brighter = brighter;
var reI = "\\s*([+-]?\\d+)\\s*",
    reN = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",
    reP = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",
    reHex = /^#([0-9a-f]{3,8})$/,
    reRgbInteger = new RegExp("^rgb\\(" + [reI, reI, reI] + "\\)$"),
    reRgbPercent = new RegExp("^rgb\\(" + [reP, reP, reP] + "\\)$"),
    reRgbaInteger = new RegExp("^rgba\\(" + [reI, reI, reI, reN] + "\\)$"),
    reRgbaPercent = new RegExp("^rgba\\(" + [reP, reP, reP, reN] + "\\)$"),
    reHslPercent = new RegExp("^hsl\\(" + [reN, reP, reP] + "\\)$"),
    reHslaPercent = new RegExp("^hsla\\(" + [reN, reP, reP, reN] + "\\)$");
var named = {
  aliceblue: 0xf0f8ff,
  antiquewhite: 0xfaebd7,
  aqua: 0x00ffff,
  aquamarine: 0x7fffd4,
  azure: 0xf0ffff,
  beige: 0xf5f5dc,
  bisque: 0xffe4c4,
  black: 0x000000,
  blanchedalmond: 0xffebcd,
  blue: 0x0000ff,
  blueviolet: 0x8a2be2,
  brown: 0xa52a2a,
  burlywood: 0xdeb887,
  cadetblue: 0x5f9ea0,
  chartreuse: 0x7fff00,
  chocolate: 0xd2691e,
  coral: 0xff7f50,
  cornflowerblue: 0x6495ed,
  cornsilk: 0xfff8dc,
  crimson: 0xdc143c,
  cyan: 0x00ffff,
  darkblue: 0x00008b,
  darkcyan: 0x008b8b,
  darkgoldenrod: 0xb8860b,
  darkgray: 0xa9a9a9,
  darkgreen: 0x006400,
  darkgrey: 0xa9a9a9,
  darkkhaki: 0xbdb76b,
  darkmagenta: 0x8b008b,
  darkolivegreen: 0x556b2f,
  darkorange: 0xff8c00,
  darkorchid: 0x9932cc,
  darkred: 0x8b0000,
  darksalmon: 0xe9967a,
  darkseagreen: 0x8fbc8f,
  darkslateblue: 0x483d8b,
  darkslategray: 0x2f4f4f,
  darkslategrey: 0x2f4f4f,
  darkturquoise: 0x00ced1,
  darkviolet: 0x9400d3,
  deeppink: 0xff1493,
  deepskyblue: 0x00bfff,
  dimgray: 0x696969,
  dimgrey: 0x696969,
  dodgerblue: 0x1e90ff,
  firebrick: 0xb22222,
  floralwhite: 0xfffaf0,
  forestgreen: 0x228b22,
  fuchsia: 0xff00ff,
  gainsboro: 0xdcdcdc,
  ghostwhite: 0xf8f8ff,
  gold: 0xffd700,
  goldenrod: 0xdaa520,
  gray: 0x808080,
  green: 0x008000,
  greenyellow: 0xadff2f,
  grey: 0x808080,
  honeydew: 0xf0fff0,
  hotpink: 0xff69b4,
  indianred: 0xcd5c5c,
  indigo: 0x4b0082,
  ivory: 0xfffff0,
  khaki: 0xf0e68c,
  lavender: 0xe6e6fa,
  lavenderblush: 0xfff0f5,
  lawngreen: 0x7cfc00,
  lemonchiffon: 0xfffacd,
  lightblue: 0xadd8e6,
  lightcoral: 0xf08080,
  lightcyan: 0xe0ffff,
  lightgoldenrodyellow: 0xfafad2,
  lightgray: 0xd3d3d3,
  lightgreen: 0x90ee90,
  lightgrey: 0xd3d3d3,
  lightpink: 0xffb6c1,
  lightsalmon: 0xffa07a,
  lightseagreen: 0x20b2aa,
  lightskyblue: 0x87cefa,
  lightslategray: 0x778899,
  lightslategrey: 0x778899,
  lightsteelblue: 0xb0c4de,
  lightyellow: 0xffffe0,
  lime: 0x00ff00,
  limegreen: 0x32cd32,
  linen: 0xfaf0e6,
  magenta: 0xff00ff,
  maroon: 0x800000,
  mediumaquamarine: 0x66cdaa,
  mediumblue: 0x0000cd,
  mediumorchid: 0xba55d3,
  mediumpurple: 0x9370db,
  mediumseagreen: 0x3cb371,
  mediumslateblue: 0x7b68ee,
  mediumspringgreen: 0x00fa9a,
  mediumturquoise: 0x48d1cc,
  mediumvioletred: 0xc71585,
  midnightblue: 0x191970,
  mintcream: 0xf5fffa,
  mistyrose: 0xffe4e1,
  moccasin: 0xffe4b5,
  navajowhite: 0xffdead,
  navy: 0x000080,
  oldlace: 0xfdf5e6,
  olive: 0x808000,
  olivedrab: 0x6b8e23,
  orange: 0xffa500,
  orangered: 0xff4500,
  orchid: 0xda70d6,
  palegoldenrod: 0xeee8aa,
  palegreen: 0x98fb98,
  paleturquoise: 0xafeeee,
  palevioletred: 0xdb7093,
  papayawhip: 0xffefd5,
  peachpuff: 0xffdab9,
  peru: 0xcd853f,
  pink: 0xffc0cb,
  plum: 0xdda0dd,
  powderblue: 0xb0e0e6,
  purple: 0x800080,
  rebeccapurple: 0x663399,
  red: 0xff0000,
  rosybrown: 0xbc8f8f,
  royalblue: 0x4169e1,
  saddlebrown: 0x8b4513,
  salmon: 0xfa8072,
  sandybrown: 0xf4a460,
  seagreen: 0x2e8b57,
  seashell: 0xfff5ee,
  sienna: 0xa0522d,
  silver: 0xc0c0c0,
  skyblue: 0x87ceeb,
  slateblue: 0x6a5acd,
  slategray: 0x708090,
  slategrey: 0x708090,
  snow: 0xfffafa,
  springgreen: 0x00ff7f,
  steelblue: 0x4682b4,
  tan: 0xd2b48c,
  teal: 0x008080,
  thistle: 0xd8bfd8,
  tomato: 0xff6347,
  turquoise: 0x40e0d0,
  violet: 0xee82ee,
  wheat: 0xf5deb3,
  white: 0xffffff,
  whitesmoke: 0xf5f5f5,
  yellow: 0xffff00,
  yellowgreen: 0x9acd32
};
(0, _define.default)(Color, color, {
  copy: function (channels) {
    return Object.assign(new this.constructor(), this, channels);
  },
  displayable: function () {
    return this.rgb().displayable();
  },
  hex: color_formatHex,
  // Deprecated! Use color.formatHex.
  formatHex: color_formatHex,
  formatHsl: color_formatHsl,
  formatRgb: color_formatRgb,
  toString: color_formatRgb
});

function color_formatHex() {
  return this.rgb().formatHex();
}

function color_formatHsl() {
  return hslConvert(this).formatHsl();
}

function color_formatRgb() {
  return this.rgb().formatRgb();
}

function color(format) {
  var m, l;
  format = (format + "").trim().toLowerCase();
  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000
  : l === 3 ? new Rgb(m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, (m & 0xf) << 4 | m & 0xf, 1) // #f00
  : l === 8 ? new Rgb(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000
  : l === 4 ? new Rgb(m >> 12 & 0xf | m >> 8 & 0xf0, m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, ((m & 0xf) << 4 | m & 0xf) / 0xff) // #f000
  : null // invalid hex
  ) : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)
  : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)
  : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)
  : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)
  : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)
  : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)
  : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins
  : format === "transparent" ? new Rgb(NaN, NaN, NaN, 0) : null;
}

function rgbn(n) {
  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);
}

function rgba(r, g, b, a) {
  if (a <= 0) r = g = b = NaN;
  return new Rgb(r, g, b, a);
}

function rgbConvert(o) {
  if (!(o instanceof Color)) o = color(o);
  if (!o) return new Rgb();
  o = o.rgb();
  return new Rgb(o.r, o.g, o.b, o.opacity);
}

function rgb(r, g, b, opacity) {
  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);
}

function Rgb(r, g, b, opacity) {
  this.r = +r;
  this.g = +g;
  this.b = +b;
  this.opacity = +opacity;
}

(0, _define.default)(Rgb, rgb, (0, _define.extend)(Color, {
  brighter: function (k) {
    k = k == null ? brighter : Math.pow(brighter, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  },
  darker: function (k) {
    k = k == null ? darker : Math.pow(darker, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  },
  rgb: function () {
    return this;
  },
  displayable: function () {
    return -0.5 <= this.r && this.r < 255.5 && -0.5 <= this.g && this.g < 255.5 && -0.5 <= this.b && this.b < 255.5 && 0 <= this.opacity && this.opacity <= 1;
  },
  hex: rgb_formatHex,
  // Deprecated! Use color.formatHex.
  formatHex: rgb_formatHex,
  formatRgb: rgb_formatRgb,
  toString: rgb_formatRgb
}));

function rgb_formatHex() {
  return "#" + hex(this.r) + hex(this.g) + hex(this.b);
}

function rgb_formatRgb() {
  var a = this.opacity;
  a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
  return (a === 1 ? "rgb(" : "rgba(") + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.b) || 0)) + (a === 1 ? ")" : ", " + a + ")");
}

function hex(value) {
  value = Math.max(0, Math.min(255, Math.round(value) || 0));
  return (value < 16 ? "0" : "") + value.toString(16);
}

function hsla(h, s, l, a) {
  if (a <= 0) h = s = l = NaN;else if (l <= 0 || l >= 1) h = s = NaN;else if (s <= 0) h = NaN;
  return new Hsl(h, s, l, a);
}

function hslConvert(o) {
  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof Color)) o = color(o);
  if (!o) return new Hsl();
  if (o instanceof Hsl) return o;
  o = o.rgb();
  var r = o.r / 255,
      g = o.g / 255,
      b = o.b / 255,
      min = Math.min(r, g, b),
      max = Math.max(r, g, b),
      h = NaN,
      s = max - min,
      l = (max + min) / 2;

  if (s) {
    if (r === max) h = (g - b) / s + (g < b) * 6;else if (g === max) h = (b - r) / s + 2;else h = (r - g) / s + 4;
    s /= l < 0.5 ? max + min : 2 - max - min;
    h *= 60;
  } else {
    s = l > 0 && l < 1 ? 0 : h;
  }

  return new Hsl(h, s, l, o.opacity);
}

function hsl(h, s, l, opacity) {
  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);
}

function Hsl(h, s, l, opacity) {
  this.h = +h;
  this.s = +s;
  this.l = +l;
  this.opacity = +opacity;
}

(0, _define.default)(Hsl, hsl, (0, _define.extend)(Color, {
  brighter: function (k) {
    k = k == null ? brighter : Math.pow(brighter, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  },
  darker: function (k) {
    k = k == null ? darker : Math.pow(darker, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  },
  rgb: function () {
    var h = this.h % 360 + (this.h < 0) * 360,
        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,
        l = this.l,
        m2 = l + (l < 0.5 ? l : 1 - l) * s,
        m1 = 2 * l - m2;
    return new Rgb(hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2), hsl2rgb(h, m1, m2), hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2), this.opacity);
  },
  displayable: function () {
    return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;
  },
  formatHsl: function () {
    var a = this.opacity;
    a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
    return (a === 1 ? "hsl(" : "hsla(") + (this.h || 0) + ", " + (this.s || 0) * 100 + "%, " + (this.l || 0) * 100 + "%" + (a === 1 ? ")" : ", " + a + ")");
  }
}));
/* From FvD 13.37, CSS Color Module Level 3 */

function hsl2rgb(h, m1, m2) {
  return (h < 60 ? m1 + (m2 - m1) * h / 60 : h < 180 ? m2 : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60 : m1) * 255;
}
},{"./define.js":"../../node_modules/d3-color/src/define.js"}],"../../node_modules/d3-color/src/math.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rad2deg = exports.deg2rad = void 0;
var deg2rad = Math.PI / 180;
exports.deg2rad = deg2rad;
var rad2deg = 180 / Math.PI;
exports.rad2deg = rad2deg;
},{}],"../../node_modules/d3-color/src/lab.js":[function(require,module,exports) {

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.gray = gray;
exports.default = lab;
exports.Lab = Lab;
exports.lch = lch;
exports.hcl = hcl;
exports.Hcl = Hcl;

var _define = _interopRequireWildcard(require("./define.js"));

var _color = require("./color.js");

var _math = require("./math.js");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

// https://observablehq.com/@mbostock/lab-and-rgb
var K = 18,
    Xn = 0.96422,
    Yn = 1,
    Zn = 0.82521,
    t0 = 4 / 29,
    t1 = 6 / 29,
    t2 = 3 * t1 * t1,
    t3 = t1 * t1 * t1;

function labConvert(o) {
  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);
  if (o instanceof Hcl) return hcl2lab(o);
  if (!(o instanceof _color.Rgb)) o = (0, _color.rgbConvert)(o);
  var r = rgb2lrgb(o.r),
      g = rgb2lrgb(o.g),
      b = rgb2lrgb(o.b),
      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn),
      x,
      z;
  if (r === g && g === b) x = z = y;else {
    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);
    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);
  }
  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);
}

function gray(l, opacity) {
  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);
}

function lab(l, a, b, opacity) {
  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);
}

function Lab(l, a, b, opacity) {
  this.l = +l;
  this.a = +a;
  this.b = +b;
  this.opacity = +opacity;
}

(0, _define.default)(Lab, lab, (0, _define.extend)(_color.Color, {
  brighter: function (k) {
    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);
  },
  darker: function (k) {
    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);
  },
  rgb: function () {
    var y = (this.l + 16) / 116,
        x = isNaN(this.a) ? y : y + this.a / 500,
        z = isNaN(this.b) ? y : y - this.b / 200;
    x = Xn * lab2xyz(x);
    y = Yn * lab2xyz(y);
    z = Zn * lab2xyz(z);
    return new _color.Rgb(lrgb2rgb(3.1338561 * x - 1.6168667 * y - 0.4906146 * z), lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z), lrgb2rgb(0.0719453 * x - 0.2289914 * y + 1.4052427 * z), this.opacity);
  }
}));

function xyz2lab(t) {
  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;
}

function lab2xyz(t) {
  return t > t1 ? t * t * t : t2 * (t - t0);
}

function lrgb2rgb(x) {
  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);
}

function rgb2lrgb(x) {
  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);
}

function hclConvert(o) {
  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);
  if (!(o instanceof Lab)) o = labConvert(o);
  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);

  var h = Math.atan2(o.b, o.a) * _math.rad2deg;

  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);
}

function lch(l, c, h, opacity) {
  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
}

function hcl(h, c, l, opacity) {
  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
}

function Hcl(h, c, l, opacity) {
  this.h = +h;
  this.c = +c;
  this.l = +l;
  this.opacity = +opacity;
}

function hcl2lab(o) {
  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);
  var h = o.h * _math.deg2rad;
  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);
}

(0, _define.default)(Hcl, hcl, (0, _define.extend)(_color.Color, {
  brighter: function (k) {
    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);
  },
  darker: function (k) {
    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);
  },
  rgb: function () {
    return hcl2lab(this).rgb();
  }
}));
},{"./define.js":"../../node_modules/d3-color/src/define.js","./color.js":"../../node_modules/d3-color/src/color.js","./math.js":"../../node_modules/d3-color/src/math.js"}],"../../node_modules/d3-color/src/cubehelix.js":[function(require,module,exports) {

"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = cubehelix;
exports.Cubehelix = Cubehelix;

var _define = _interopRequireWildcard(require("./define.js"));

var _color = require("./color.js");

var _math = require("./math.js");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var A = -0.14861,
    B = +1.78277,
    C = -0.29227,
    D = -0.90649,
    E = +1.97294,
    ED = E * D,
    EB = E * B,
    BC_DA = B * C - D * A;

function cubehelixConvert(o) {
  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof _color.Rgb)) o = (0, _color.rgbConvert)(o);
  var r = o.r / 255,
      g = o.g / 255,
      b = o.b / 255,
      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),
      bl = b - l,
      k = (E * (g - l) - C * bl) / D,
      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)),
      // NaN if l=0 or l=1
  h = s ? Math.atan2(k, bl) * _math.rad2deg - 120 : NaN;
  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);
}

function cubehelix(h, s, l, opacity) {
  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);
}

function Cubehelix(h, s, l, opacity) {
  this.h = +h;
  this.s = +s;
  this.l = +l;
  this.opacity = +opacity;
}

(0, _define.default)(Cubehelix, cubehelix, (0, _define.extend)(_color.Color, {
  brighter: function (k) {
    k = k == null ? _color.brighter : Math.pow(_color.brighter, k);
    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
  },
  darker: function (k) {
    k = k == null ? _color.darker : Math.pow(_color.darker, k);
    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
  },
  rgb: function () {
    var h = isNaN(this.h) ? 0 : (this.h + 120) * _math.deg2rad,
        l = +this.l,
        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),
        cosh = Math.cos(h),
        sinh = Math.sin(h);
    return new _color.Rgb(255 * (l + a * (A * cosh + B * sinh)), 255 * (l + a * (C * cosh + D * sinh)), 255 * (l + a * (E * cosh)), this.opacity);
  }
}));
},{"./define.js":"../../node_modules/d3-color/src/define.js","./color.js":"../../node_modules/d3-color/src/color.js","./math.js":"../../node_modules/d3-color/src/math.js"}],"../../node_modules/d3-color/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "color", {
  enumerable: true,
  get: function () {
    return _color.default;
  }
});
Object.defineProperty(exports, "rgb", {
  enumerable: true,
  get: function () {
    return _color.rgb;
  }
});
Object.defineProperty(exports, "hsl", {
  enumerable: true,
  get: function () {
    return _color.hsl;
  }
});
Object.defineProperty(exports, "lab", {
  enumerable: true,
  get: function () {
    return _lab.default;
  }
});
Object.defineProperty(exports, "hcl", {
  enumerable: true,
  get: function () {
    return _lab.hcl;
  }
});
Object.defineProperty(exports, "lch", {
  enumerable: true,
  get: function () {
    return _lab.lch;
  }
});
Object.defineProperty(exports, "gray", {
  enumerable: true,
  get: function () {
    return _lab.gray;
  }
});
Object.defineProperty(exports, "cubehelix", {
  enumerable: true,
  get: function () {
    return _cubehelix.default;
  }
});

var _color = _interopRequireWildcard(require("./color.js"));

var _lab = _interopRequireWildcard(require("./lab.js"));

var _cubehelix = _interopRequireDefault(require("./cubehelix.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./color.js":"../../node_modules/d3-color/src/color.js","./lab.js":"../../node_modules/d3-color/src/lab.js","./cubehelix.js":"../../node_modules/d3-color/src/cubehelix.js"}],"../../node_modules/d3-interpolate/src/basis.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.basis = basis;
exports.default = _default;

function basis(t1, v0, v1, v2, v3) {
  var t2 = t1 * t1,
      t3 = t2 * t1;
  return ((1 - 3 * t1 + 3 * t2 - t3) * v0 + (4 - 6 * t2 + 3 * t3) * v1 + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2 + t3 * v3) / 6;
}

function _default(values) {
  var n = values.length - 1;
  return function (t) {
    var i = t <= 0 ? t = 0 : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),
        v1 = values[i],
        v2 = values[i + 1],
        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,
        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;
    return basis((t - i / n) * n, v0, v1, v2, v3);
  };
}
},{}],"../../node_modules/d3-interpolate/src/basisClosed.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _basis = require("./basis.js");

function _default(values) {
  var n = values.length;
  return function (t) {
    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),
        v0 = values[(i + n - 1) % n],
        v1 = values[i % n],
        v2 = values[(i + 1) % n],
        v3 = values[(i + 2) % n];
    return (0, _basis.basis)((t - i / n) * n, v0, v1, v2, v3);
  };
}
},{"./basis.js":"../../node_modules/d3-interpolate/src/basis.js"}],"../../node_modules/d3-interpolate/src/constant.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return function () {
    return x;
  };
}
},{}],"../../node_modules/d3-interpolate/src/color.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hue = hue;
exports.gamma = gamma;
exports.default = nogamma;

var _constant = _interopRequireDefault(require("./constant.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function linear(a, d) {
  return function (t) {
    return a + t * d;
  };
}

function exponential(a, b, y) {
  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function (t) {
    return Math.pow(a + t * b, y);
  };
}

function hue(a, b) {
  var d = b - a;
  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : (0, _constant.default)(isNaN(a) ? b : a);
}

function gamma(y) {
  return (y = +y) === 1 ? nogamma : function (a, b) {
    return b - a ? exponential(a, b, y) : (0, _constant.default)(isNaN(a) ? b : a);
  };
}

function nogamma(a, b) {
  var d = b - a;
  return d ? linear(a, d) : (0, _constant.default)(isNaN(a) ? b : a);
}
},{"./constant.js":"../../node_modules/d3-interpolate/src/constant.js"}],"../../node_modules/d3-interpolate/src/rgb.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rgbBasisClosed = exports.rgbBasis = exports.default = void 0;

var _d3Color = require("d3-color");

var _basis = _interopRequireDefault(require("./basis.js"));

var _basisClosed = _interopRequireDefault(require("./basisClosed.js"));

var _color = _interopRequireWildcard(require("./color.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function rgbGamma(y) {
  var color = (0, _color.gamma)(y);

  function rgb(start, end) {
    var r = color((start = (0, _d3Color.rgb)(start)).r, (end = (0, _d3Color.rgb)(end)).r),
        g = color(start.g, end.g),
        b = color(start.b, end.b),
        opacity = (0, _color.default)(start.opacity, end.opacity);
    return function (t) {
      start.r = r(t);
      start.g = g(t);
      start.b = b(t);
      start.opacity = opacity(t);
      return start + "";
    };
  }

  rgb.gamma = rgbGamma;
  return rgb;
}(1);

exports.default = _default;

function rgbSpline(spline) {
  return function (colors) {
    var n = colors.length,
        r = new Array(n),
        g = new Array(n),
        b = new Array(n),
        i,
        color;

    for (i = 0; i < n; ++i) {
      color = (0, _d3Color.rgb)(colors[i]);
      r[i] = color.r || 0;
      g[i] = color.g || 0;
      b[i] = color.b || 0;
    }

    r = spline(r);
    g = spline(g);
    b = spline(b);
    color.opacity = 1;
    return function (t) {
      color.r = r(t);
      color.g = g(t);
      color.b = b(t);
      return color + "";
    };
  };
}

var rgbBasis = rgbSpline(_basis.default);
exports.rgbBasis = rgbBasis;
var rgbBasisClosed = rgbSpline(_basisClosed.default);
exports.rgbBasisClosed = rgbBasisClosed;
},{"d3-color":"../../node_modules/d3-color/src/index.js","./basis.js":"../../node_modules/d3-interpolate/src/basis.js","./basisClosed.js":"../../node_modules/d3-interpolate/src/basisClosed.js","./color.js":"../../node_modules/d3-interpolate/src/color.js"}],"../../node_modules/d3-interpolate/src/numberArray.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.isNumberArray = isNumberArray;

function _default(a, b) {
  if (!b) b = [];
  var n = a ? Math.min(b.length, a.length) : 0,
      c = b.slice(),
      i;
  return function (t) {
    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;

    return c;
  };
}

function isNumberArray(x) {
  return ArrayBuffer.isView(x) && !(x instanceof DataView);
}
},{}],"../../node_modules/d3-interpolate/src/array.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.genericArray = genericArray;

var _value = _interopRequireDefault(require("./value.js"));

var _numberArray = _interopRequireWildcard(require("./numberArray.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(a, b) {
  return ((0, _numberArray.isNumberArray)(b) ? _numberArray.default : genericArray)(a, b);
}

function genericArray(a, b) {
  var nb = b ? b.length : 0,
      na = a ? Math.min(nb, a.length) : 0,
      x = new Array(na),
      c = new Array(nb),
      i;

  for (i = 0; i < na; ++i) x[i] = (0, _value.default)(a[i], b[i]);

  for (; i < nb; ++i) c[i] = b[i];

  return function (t) {
    for (i = 0; i < na; ++i) c[i] = x[i](t);

    return c;
  };
}
},{"./value.js":"../../node_modules/d3-interpolate/src/value.js","./numberArray.js":"../../node_modules/d3-interpolate/src/numberArray.js"}],"../../node_modules/d3-interpolate/src/date.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  var d = new Date();
  return a = +a, b = +b, function (t) {
    return d.setTime(a * (1 - t) + b * t), d;
  };
}
},{}],"../../node_modules/d3-interpolate/src/number.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  return a = +a, b = +b, function (t) {
    return a * (1 - t) + b * t;
  };
}
},{}],"../../node_modules/d3-interpolate/src/object.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _value = _interopRequireDefault(require("./value.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(a, b) {
  var i = {},
      c = {},
      k;
  if (a === null || typeof a !== "object") a = {};
  if (b === null || typeof b !== "object") b = {};

  for (k in b) {
    if (k in a) {
      i[k] = (0, _value.default)(a[k], b[k]);
    } else {
      c[k] = b[k];
    }
  }

  return function (t) {
    for (k in i) c[k] = i[k](t);

    return c;
  };
}
},{"./value.js":"../../node_modules/d3-interpolate/src/value.js"}],"../../node_modules/d3-interpolate/src/string.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _number = _interopRequireDefault(require("./number.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,
    reB = new RegExp(reA.source, "g");

function zero(b) {
  return function () {
    return b;
  };
}

function one(b) {
  return function (t) {
    return b(t) + "";
  };
}

function _default(a, b) {
  var bi = reA.lastIndex = reB.lastIndex = 0,
      // scan index for next number in b
  am,
      // current match in a
  bm,
      // current match in b
  bs,
      // string preceding current number in b, if any
  i = -1,
      // index in s
  s = [],
      // string constants and placeholders
  q = []; // number interpolators
  // Coerce inputs to strings.

  a = a + "", b = b + ""; // Interpolate pairs of numbers in a & b.

  while ((am = reA.exec(a)) && (bm = reB.exec(b))) {
    if ((bs = bm.index) > bi) {
      // a string precedes the next number in b
      bs = b.slice(bi, bs);
      if (s[i]) s[i] += bs; // coalesce with previous string
      else s[++i] = bs;
    }

    if ((am = am[0]) === (bm = bm[0])) {
      // numbers in a & b match
      if (s[i]) s[i] += bm; // coalesce with previous string
      else s[++i] = bm;
    } else {
      // interpolate non-matching numbers
      s[++i] = null;
      q.push({
        i: i,
        x: (0, _number.default)(am, bm)
      });
    }

    bi = reB.lastIndex;
  } // Add remains of b.


  if (bi < b.length) {
    bs = b.slice(bi);
    if (s[i]) s[i] += bs; // coalesce with previous string
    else s[++i] = bs;
  } // Special optimization for only a single match.
  // Otherwise, interpolate each of the numbers and rejoin the string.


  return s.length < 2 ? q[0] ? one(q[0].x) : zero(b) : (b = q.length, function (t) {
    for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);

    return s.join("");
  });
}
},{"./number.js":"../../node_modules/d3-interpolate/src/number.js"}],"../../node_modules/d3-interpolate/src/value.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Color = require("d3-color");

var _rgb = _interopRequireDefault(require("./rgb.js"));

var _array = require("./array.js");

var _date = _interopRequireDefault(require("./date.js"));

var _number = _interopRequireDefault(require("./number.js"));

var _object = _interopRequireDefault(require("./object.js"));

var _string = _interopRequireDefault(require("./string.js"));

var _constant = _interopRequireDefault(require("./constant.js"));

var _numberArray = _interopRequireWildcard(require("./numberArray.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(a, b) {
  var t = typeof b,
      c;
  return b == null || t === "boolean" ? (0, _constant.default)(b) : (t === "number" ? _number.default : t === "string" ? (c = (0, _d3Color.color)(b)) ? (b = c, _rgb.default) : _string.default : b instanceof _d3Color.color ? _rgb.default : b instanceof Date ? _date.default : (0, _numberArray.isNumberArray)(b) ? _numberArray.default : Array.isArray(b) ? _array.genericArray : typeof b.valueOf !== "function" && typeof b.toString !== "function" || isNaN(b) ? _object.default : _number.default)(a, b);
}
},{"d3-color":"../../node_modules/d3-color/src/index.js","./rgb.js":"../../node_modules/d3-interpolate/src/rgb.js","./array.js":"../../node_modules/d3-interpolate/src/array.js","./date.js":"../../node_modules/d3-interpolate/src/date.js","./number.js":"../../node_modules/d3-interpolate/src/number.js","./object.js":"../../node_modules/d3-interpolate/src/object.js","./string.js":"../../node_modules/d3-interpolate/src/string.js","./constant.js":"../../node_modules/d3-interpolate/src/constant.js","./numberArray.js":"../../node_modules/d3-interpolate/src/numberArray.js"}],"../../node_modules/d3-interpolate/src/discrete.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(range) {
  var n = range.length;
  return function (t) {
    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
  };
}
},{}],"../../node_modules/d3-interpolate/src/hue.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _color = require("./color.js");

function _default(a, b) {
  var i = (0, _color.hue)(+a, +b);
  return function (t) {
    var x = i(t);
    return x - 360 * Math.floor(x / 360);
  };
}
},{"./color.js":"../../node_modules/d3-interpolate/src/color.js"}],"../../node_modules/d3-interpolate/src/round.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  return a = +a, b = +b, function (t) {
    return Math.round(a * (1 - t) + b * t);
  };
}
},{}],"../../node_modules/d3-interpolate/src/transform/decompose.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.identity = void 0;
var degrees = 180 / Math.PI;
var identity = {
  translateX: 0,
  translateY: 0,
  rotate: 0,
  skewX: 0,
  scaleX: 1,
  scaleY: 1
};
exports.identity = identity;

function _default(a, b, c, d, e, f) {
  var scaleX, scaleY, skewX;
  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;
  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;
  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;
  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;
  return {
    translateX: e,
    translateY: f,
    rotate: Math.atan2(b, a) * degrees,
    skewX: Math.atan(skewX) * degrees,
    scaleX: scaleX,
    scaleY: scaleY
  };
}
},{}],"../../node_modules/d3-interpolate/src/transform/parse.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.parseCss = parseCss;
exports.parseSvg = parseSvg;

var _decompose = _interopRequireWildcard(require("./decompose.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var cssNode, cssRoot, cssView, svgNode;

function parseCss(value) {
  if (value === "none") return _decompose.identity;
  if (!cssNode) cssNode = document.createElement("DIV"), cssRoot = document.documentElement, cssView = document.defaultView;
  cssNode.style.transform = value;
  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue("transform");
  cssRoot.removeChild(cssNode);
  value = value.slice(7, -1).split(",");
  return (0, _decompose.default)(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);
}

function parseSvg(value) {
  if (value == null) return _decompose.identity;
  if (!svgNode) svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g");
  svgNode.setAttribute("transform", value);
  if (!(value = svgNode.transform.baseVal.consolidate())) return _decompose.identity;
  value = value.matrix;
  return (0, _decompose.default)(value.a, value.b, value.c, value.d, value.e, value.f);
}
},{"./decompose.js":"../../node_modules/d3-interpolate/src/transform/decompose.js"}],"../../node_modules/d3-interpolate/src/transform/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.interpolateTransformSvg = exports.interpolateTransformCss = void 0;

var _number = _interopRequireDefault(require("../number.js"));

var _parse = require("./parse.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function interpolateTransform(parse, pxComma, pxParen, degParen) {
  function pop(s) {
    return s.length ? s.pop() + " " : "";
  }

  function translate(xa, ya, xb, yb, s, q) {
    if (xa !== xb || ya !== yb) {
      var i = s.push("translate(", null, pxComma, null, pxParen);
      q.push({
        i: i - 4,
        x: (0, _number.default)(xa, xb)
      }, {
        i: i - 2,
        x: (0, _number.default)(ya, yb)
      });
    } else if (xb || yb) {
      s.push("translate(" + xb + pxComma + yb + pxParen);
    }
  }

  function rotate(a, b, s, q) {
    if (a !== b) {
      if (a - b > 180) b += 360;else if (b - a > 180) a += 360; // shortest path

      q.push({
        i: s.push(pop(s) + "rotate(", null, degParen) - 2,
        x: (0, _number.default)(a, b)
      });
    } else if (b) {
      s.push(pop(s) + "rotate(" + b + degParen);
    }
  }

  function skewX(a, b, s, q) {
    if (a !== b) {
      q.push({
        i: s.push(pop(s) + "skewX(", null, degParen) - 2,
        x: (0, _number.default)(a, b)
      });
    } else if (b) {
      s.push(pop(s) + "skewX(" + b + degParen);
    }
  }

  function scale(xa, ya, xb, yb, s, q) {
    if (xa !== xb || ya !== yb) {
      var i = s.push(pop(s) + "scale(", null, ",", null, ")");
      q.push({
        i: i - 4,
        x: (0, _number.default)(xa, xb)
      }, {
        i: i - 2,
        x: (0, _number.default)(ya, yb)
      });
    } else if (xb !== 1 || yb !== 1) {
      s.push(pop(s) + "scale(" + xb + "," + yb + ")");
    }
  }

  return function (a, b) {
    var s = [],
        // string constants and placeholders
    q = []; // number interpolators

    a = parse(a), b = parse(b);
    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);
    rotate(a.rotate, b.rotate, s, q);
    skewX(a.skewX, b.skewX, s, q);
    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);
    a = b = null; // gc

    return function (t) {
      var i = -1,
          n = q.length,
          o;

      while (++i < n) s[(o = q[i]).i] = o.x(t);

      return s.join("");
    };
  };
}

var interpolateTransformCss = interpolateTransform(_parse.parseCss, "px, ", "px)", "deg)");
exports.interpolateTransformCss = interpolateTransformCss;
var interpolateTransformSvg = interpolateTransform(_parse.parseSvg, ", ", ")", ")");
exports.interpolateTransformSvg = interpolateTransformSvg;
},{"../number.js":"../../node_modules/d3-interpolate/src/number.js","./parse.js":"../../node_modules/d3-interpolate/src/transform/parse.js"}],"../../node_modules/d3-interpolate/src/zoom.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
var rho = Math.SQRT2,
    rho2 = 2,
    rho4 = 4,
    epsilon2 = 1e-12;

function cosh(x) {
  return ((x = Math.exp(x)) + 1 / x) / 2;
}

function sinh(x) {
  return ((x = Math.exp(x)) - 1 / x) / 2;
}

function tanh(x) {
  return ((x = Math.exp(2 * x)) - 1) / (x + 1);
} // p0 = [ux0, uy0, w0]
// p1 = [ux1, uy1, w1]


function _default(p0, p1) {
  var ux0 = p0[0],
      uy0 = p0[1],
      w0 = p0[2],
      ux1 = p1[0],
      uy1 = p1[1],
      w1 = p1[2],
      dx = ux1 - ux0,
      dy = uy1 - uy0,
      d2 = dx * dx + dy * dy,
      i,
      S; // Special case for u0 ≅ u1.

  if (d2 < epsilon2) {
    S = Math.log(w1 / w0) / rho;

    i = function (t) {
      return [ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(rho * t * S)];
    };
  } // General case.
  else {
      var d1 = Math.sqrt(d2),
          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),
          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),
          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),
          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
      S = (r1 - r0) / rho;

      i = function (t) {
        var s = t * S,
            coshr0 = cosh(r0),
            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));
        return [ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / cosh(rho * s + r0)];
      };
    }

  i.duration = S * 1000;
  return i;
}
},{}],"../../node_modules/d3-interpolate/src/hsl.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hslLong = exports.default = void 0;

var _d3Color = require("d3-color");

var _color = _interopRequireWildcard(require("./color.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function hsl(hue) {
  return function (start, end) {
    var h = hue((start = (0, _d3Color.hsl)(start)).h, (end = (0, _d3Color.hsl)(end)).h),
        s = (0, _color.default)(start.s, end.s),
        l = (0, _color.default)(start.l, end.l),
        opacity = (0, _color.default)(start.opacity, end.opacity);
    return function (t) {
      start.h = h(t);
      start.s = s(t);
      start.l = l(t);
      start.opacity = opacity(t);
      return start + "";
    };
  };
}

var _default = hsl(_color.hue);

exports.default = _default;
var hslLong = hsl(_color.default);
exports.hslLong = hslLong;
},{"d3-color":"../../node_modules/d3-color/src/index.js","./color.js":"../../node_modules/d3-interpolate/src/color.js"}],"../../node_modules/d3-interpolate/src/lab.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = lab;

var _d3Color = require("d3-color");

var _color = _interopRequireDefault(require("./color.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function lab(start, end) {
  var l = (0, _color.default)((start = (0, _d3Color.lab)(start)).l, (end = (0, _d3Color.lab)(end)).l),
      a = (0, _color.default)(start.a, end.a),
      b = (0, _color.default)(start.b, end.b),
      opacity = (0, _color.default)(start.opacity, end.opacity);
  return function (t) {
    start.l = l(t);
    start.a = a(t);
    start.b = b(t);
    start.opacity = opacity(t);
    return start + "";
  };
}
},{"d3-color":"../../node_modules/d3-color/src/index.js","./color.js":"../../node_modules/d3-interpolate/src/color.js"}],"../../node_modules/d3-interpolate/src/hcl.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hclLong = exports.default = void 0;

var _d3Color = require("d3-color");

var _color = _interopRequireWildcard(require("./color.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function hcl(hue) {
  return function (start, end) {
    var h = hue((start = (0, _d3Color.hcl)(start)).h, (end = (0, _d3Color.hcl)(end)).h),
        c = (0, _color.default)(start.c, end.c),
        l = (0, _color.default)(start.l, end.l),
        opacity = (0, _color.default)(start.opacity, end.opacity);
    return function (t) {
      start.h = h(t);
      start.c = c(t);
      start.l = l(t);
      start.opacity = opacity(t);
      return start + "";
    };
  };
}

var _default = hcl(_color.hue);

exports.default = _default;
var hclLong = hcl(_color.default);
exports.hclLong = hclLong;
},{"d3-color":"../../node_modules/d3-color/src/index.js","./color.js":"../../node_modules/d3-interpolate/src/color.js"}],"../../node_modules/d3-interpolate/src/cubehelix.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cubehelixLong = exports.default = void 0;

var _d3Color = require("d3-color");

var _color = _interopRequireWildcard(require("./color.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function cubehelix(hue) {
  return function cubehelixGamma(y) {
    y = +y;

    function cubehelix(start, end) {
      var h = hue((start = (0, _d3Color.cubehelix)(start)).h, (end = (0, _d3Color.cubehelix)(end)).h),
          s = (0, _color.default)(start.s, end.s),
          l = (0, _color.default)(start.l, end.l),
          opacity = (0, _color.default)(start.opacity, end.opacity);
      return function (t) {
        start.h = h(t);
        start.s = s(t);
        start.l = l(Math.pow(t, y));
        start.opacity = opacity(t);
        return start + "";
      };
    }

    cubehelix.gamma = cubehelixGamma;
    return cubehelix;
  }(1);
}

var _default = cubehelix(_color.hue);

exports.default = _default;
var cubehelixLong = cubehelix(_color.default);
exports.cubehelixLong = cubehelixLong;
},{"d3-color":"../../node_modules/d3-color/src/index.js","./color.js":"../../node_modules/d3-interpolate/src/color.js"}],"../../node_modules/d3-interpolate/src/piecewise.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = piecewise;

function piecewise(interpolate, values) {
  var i = 0,
      n = values.length - 1,
      v = values[0],
      I = new Array(n < 0 ? 0 : n);

  while (i < n) I[i] = interpolate(v, v = values[++i]);

  return function (t) {
    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));
    return I[i](t - i);
  };
}
},{}],"../../node_modules/d3-interpolate/src/quantize.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(interpolator, n) {
  var samples = new Array(n);

  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));

  return samples;
}
},{}],"../../node_modules/d3-interpolate/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "interpolate", {
  enumerable: true,
  get: function () {
    return _value.default;
  }
});
Object.defineProperty(exports, "interpolateArray", {
  enumerable: true,
  get: function () {
    return _array.default;
  }
});
Object.defineProperty(exports, "interpolateBasis", {
  enumerable: true,
  get: function () {
    return _basis.default;
  }
});
Object.defineProperty(exports, "interpolateBasisClosed", {
  enumerable: true,
  get: function () {
    return _basisClosed.default;
  }
});
Object.defineProperty(exports, "interpolateDate", {
  enumerable: true,
  get: function () {
    return _date.default;
  }
});
Object.defineProperty(exports, "interpolateDiscrete", {
  enumerable: true,
  get: function () {
    return _discrete.default;
  }
});
Object.defineProperty(exports, "interpolateHue", {
  enumerable: true,
  get: function () {
    return _hue.default;
  }
});
Object.defineProperty(exports, "interpolateNumber", {
  enumerable: true,
  get: function () {
    return _number.default;
  }
});
Object.defineProperty(exports, "interpolateNumberArray", {
  enumerable: true,
  get: function () {
    return _numberArray.default;
  }
});
Object.defineProperty(exports, "interpolateObject", {
  enumerable: true,
  get: function () {
    return _object.default;
  }
});
Object.defineProperty(exports, "interpolateRound", {
  enumerable: true,
  get: function () {
    return _round.default;
  }
});
Object.defineProperty(exports, "interpolateString", {
  enumerable: true,
  get: function () {
    return _string.default;
  }
});
Object.defineProperty(exports, "interpolateTransformCss", {
  enumerable: true,
  get: function () {
    return _index.interpolateTransformCss;
  }
});
Object.defineProperty(exports, "interpolateTransformSvg", {
  enumerable: true,
  get: function () {
    return _index.interpolateTransformSvg;
  }
});
Object.defineProperty(exports, "interpolateZoom", {
  enumerable: true,
  get: function () {
    return _zoom.default;
  }
});
Object.defineProperty(exports, "interpolateRgb", {
  enumerable: true,
  get: function () {
    return _rgb.default;
  }
});
Object.defineProperty(exports, "interpolateRgbBasis", {
  enumerable: true,
  get: function () {
    return _rgb.rgbBasis;
  }
});
Object.defineProperty(exports, "interpolateRgbBasisClosed", {
  enumerable: true,
  get: function () {
    return _rgb.rgbBasisClosed;
  }
});
Object.defineProperty(exports, "interpolateHsl", {
  enumerable: true,
  get: function () {
    return _hsl.default;
  }
});
Object.defineProperty(exports, "interpolateHslLong", {
  enumerable: true,
  get: function () {
    return _hsl.hslLong;
  }
});
Object.defineProperty(exports, "interpolateLab", {
  enumerable: true,
  get: function () {
    return _lab.default;
  }
});
Object.defineProperty(exports, "interpolateHcl", {
  enumerable: true,
  get: function () {
    return _hcl.default;
  }
});
Object.defineProperty(exports, "interpolateHclLong", {
  enumerable: true,
  get: function () {
    return _hcl.hclLong;
  }
});
Object.defineProperty(exports, "interpolateCubehelix", {
  enumerable: true,
  get: function () {
    return _cubehelix.default;
  }
});
Object.defineProperty(exports, "interpolateCubehelixLong", {
  enumerable: true,
  get: function () {
    return _cubehelix.cubehelixLong;
  }
});
Object.defineProperty(exports, "piecewise", {
  enumerable: true,
  get: function () {
    return _piecewise.default;
  }
});
Object.defineProperty(exports, "quantize", {
  enumerable: true,
  get: function () {
    return _quantize.default;
  }
});

var _value = _interopRequireDefault(require("./value.js"));

var _array = _interopRequireDefault(require("./array.js"));

var _basis = _interopRequireDefault(require("./basis.js"));

var _basisClosed = _interopRequireDefault(require("./basisClosed.js"));

var _date = _interopRequireDefault(require("./date.js"));

var _discrete = _interopRequireDefault(require("./discrete.js"));

var _hue = _interopRequireDefault(require("./hue.js"));

var _number = _interopRequireDefault(require("./number.js"));

var _numberArray = _interopRequireDefault(require("./numberArray.js"));

var _object = _interopRequireDefault(require("./object.js"));

var _round = _interopRequireDefault(require("./round.js"));

var _string = _interopRequireDefault(require("./string.js"));

var _index = require("./transform/index.js");

var _zoom = _interopRequireDefault(require("./zoom.js"));

var _rgb = _interopRequireWildcard(require("./rgb.js"));

var _hsl = _interopRequireWildcard(require("./hsl.js"));

var _lab = _interopRequireDefault(require("./lab.js"));

var _hcl = _interopRequireWildcard(require("./hcl.js"));

var _cubehelix = _interopRequireWildcard(require("./cubehelix.js"));

var _piecewise = _interopRequireDefault(require("./piecewise.js"));

var _quantize = _interopRequireDefault(require("./quantize.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./value.js":"../../node_modules/d3-interpolate/src/value.js","./array.js":"../../node_modules/d3-interpolate/src/array.js","./basis.js":"../../node_modules/d3-interpolate/src/basis.js","./basisClosed.js":"../../node_modules/d3-interpolate/src/basisClosed.js","./date.js":"../../node_modules/d3-interpolate/src/date.js","./discrete.js":"../../node_modules/d3-interpolate/src/discrete.js","./hue.js":"../../node_modules/d3-interpolate/src/hue.js","./number.js":"../../node_modules/d3-interpolate/src/number.js","./numberArray.js":"../../node_modules/d3-interpolate/src/numberArray.js","./object.js":"../../node_modules/d3-interpolate/src/object.js","./round.js":"../../node_modules/d3-interpolate/src/round.js","./string.js":"../../node_modules/d3-interpolate/src/string.js","./transform/index.js":"../../node_modules/d3-interpolate/src/transform/index.js","./zoom.js":"../../node_modules/d3-interpolate/src/zoom.js","./rgb.js":"../../node_modules/d3-interpolate/src/rgb.js","./hsl.js":"../../node_modules/d3-interpolate/src/hsl.js","./lab.js":"../../node_modules/d3-interpolate/src/lab.js","./hcl.js":"../../node_modules/d3-interpolate/src/hcl.js","./cubehelix.js":"../../node_modules/d3-interpolate/src/cubehelix.js","./piecewise.js":"../../node_modules/d3-interpolate/src/piecewise.js","./quantize.js":"../../node_modules/d3-interpolate/src/quantize.js"}],"../../node_modules/d3-timer/src/timer.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.now = now;
exports.Timer = Timer;
exports.timer = timer;
exports.timerFlush = timerFlush;
var frame = 0,
    // is an animation frame pending?
timeout = 0,
    // is a timeout pending?
interval = 0,
    // are any timers active?
pokeDelay = 1000,
    // how frequently we check for clock skew
taskHead,
    taskTail,
    clockLast = 0,
    clockNow = 0,
    clockSkew = 0,
    clock = typeof performance === "object" && performance.now ? performance : Date,
    setFrame = typeof window === "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function (f) {
  setTimeout(f, 17);
};

function now() {
  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);
}

function clearNow() {
  clockNow = 0;
}

function Timer() {
  this._call = this._time = this._next = null;
}

Timer.prototype = timer.prototype = {
  constructor: Timer,
  restart: function (callback, delay, time) {
    if (typeof callback !== "function") throw new TypeError("callback is not a function");
    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);

    if (!this._next && taskTail !== this) {
      if (taskTail) taskTail._next = this;else taskHead = this;
      taskTail = this;
    }

    this._call = callback;
    this._time = time;
    sleep();
  },
  stop: function () {
    if (this._call) {
      this._call = null;
      this._time = Infinity;
      sleep();
    }
  }
};

function timer(callback, delay, time) {
  var t = new Timer();
  t.restart(callback, delay, time);
  return t;
}

function timerFlush() {
  now(); // Get the current time, if not already set.

  ++frame; // Pretend we’ve set an alarm, if we haven’t already.

  var t = taskHead,
      e;

  while (t) {
    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);
    t = t._next;
  }

  --frame;
}

function wake() {
  clockNow = (clockLast = clock.now()) + clockSkew;
  frame = timeout = 0;

  try {
    timerFlush();
  } finally {
    frame = 0;
    nap();
    clockNow = 0;
  }
}

function poke() {
  var now = clock.now(),
      delay = now - clockLast;
  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;
}

function nap() {
  var t0,
      t1 = taskHead,
      t2,
      time = Infinity;

  while (t1) {
    if (t1._call) {
      if (time > t1._time) time = t1._time;
      t0 = t1, t1 = t1._next;
    } else {
      t2 = t1._next, t1._next = null;
      t1 = t0 ? t0._next = t2 : taskHead = t2;
    }
  }

  taskTail = t0;
  sleep(time);
}

function sleep(time) {
  if (frame) return; // Soonest alarm already set, or will be.

  if (timeout) timeout = clearTimeout(timeout);
  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.

  if (delay > 24) {
    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);
    if (interval) interval = clearInterval(interval);
  } else {
    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);
    frame = 1, setFrame(wake);
  }
}
},{}],"../../node_modules/d3-timer/src/timeout.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _timer = require("./timer.js");

function _default(callback, delay, time) {
  var t = new _timer.Timer();
  delay = delay == null ? 0 : +delay;
  t.restart(function (elapsed) {
    t.stop();
    callback(elapsed + delay);
  }, delay, time);
  return t;
}
},{"./timer.js":"../../node_modules/d3-timer/src/timer.js"}],"../../node_modules/d3-timer/src/interval.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _timer = require("./timer.js");

function _default(callback, delay, time) {
  var t = new _timer.Timer(),
      total = delay;
  if (delay == null) return t.restart(callback, delay, time), t;
  delay = +delay, time = time == null ? (0, _timer.now)() : +time;
  t.restart(function tick(elapsed) {
    elapsed += total;
    t.restart(tick, total += delay, time);
    callback(elapsed);
  }, delay, time);
  return t;
}
},{"./timer.js":"../../node_modules/d3-timer/src/timer.js"}],"../../node_modules/d3-timer/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "now", {
  enumerable: true,
  get: function () {
    return _timer.now;
  }
});
Object.defineProperty(exports, "timer", {
  enumerable: true,
  get: function () {
    return _timer.timer;
  }
});
Object.defineProperty(exports, "timerFlush", {
  enumerable: true,
  get: function () {
    return _timer.timerFlush;
  }
});
Object.defineProperty(exports, "timeout", {
  enumerable: true,
  get: function () {
    return _timeout.default;
  }
});
Object.defineProperty(exports, "interval", {
  enumerable: true,
  get: function () {
    return _interval.default;
  }
});

var _timer = require("./timer.js");

var _timeout = _interopRequireDefault(require("./timeout.js"));

var _interval = _interopRequireDefault(require("./interval.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./timer.js":"../../node_modules/d3-timer/src/timer.js","./timeout.js":"../../node_modules/d3-timer/src/timeout.js","./interval.js":"../../node_modules/d3-timer/src/interval.js"}],"../../node_modules/d3-transition/src/transition/schedule.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.init = init;
exports.set = set;
exports.get = get;
exports.ENDED = exports.ENDING = exports.RUNNING = exports.STARTED = exports.STARTING = exports.SCHEDULED = exports.CREATED = void 0;

var _d3Dispatch = require("d3-dispatch");

var _d3Timer = require("d3-timer");

var emptyOn = (0, _d3Dispatch.dispatch)("start", "end", "cancel", "interrupt");
var emptyTween = [];
var CREATED = 0;
exports.CREATED = CREATED;
var SCHEDULED = 1;
exports.SCHEDULED = SCHEDULED;
var STARTING = 2;
exports.STARTING = STARTING;
var STARTED = 3;
exports.STARTED = STARTED;
var RUNNING = 4;
exports.RUNNING = RUNNING;
var ENDING = 5;
exports.ENDING = ENDING;
var ENDED = 6;
exports.ENDED = ENDED;

function _default(node, name, id, index, group, timing) {
  var schedules = node.__transition;
  if (!schedules) node.__transition = {};else if (id in schedules) return;
  create(node, id, {
    name: name,
    index: index,
    // For context during callback.
    group: group,
    // For context during callback.
    on: emptyOn,
    tween: emptyTween,
    time: timing.time,
    delay: timing.delay,
    duration: timing.duration,
    ease: timing.ease,
    timer: null,
    state: CREATED
  });
}

function init(node, id) {
  var schedule = get(node, id);
  if (schedule.state > CREATED) throw new Error("too late; already scheduled");
  return schedule;
}

function set(node, id) {
  var schedule = get(node, id);
  if (schedule.state > STARTED) throw new Error("too late; already running");
  return schedule;
}

function get(node, id) {
  var schedule = node.__transition;
  if (!schedule || !(schedule = schedule[id])) throw new Error("transition not found");
  return schedule;
}

function create(node, id, self) {
  var schedules = node.__transition,
      tween; // Initialize the self timer when the transition is created.
  // Note the actual delay is not known until the first callback!

  schedules[id] = self;
  self.timer = (0, _d3Timer.timer)(schedule, 0, self.time);

  function schedule(elapsed) {
    self.state = SCHEDULED;
    self.timer.restart(start, self.delay, self.time); // If the elapsed delay is less than our first sleep, start immediately.

    if (self.delay <= elapsed) start(elapsed - self.delay);
  }

  function start(elapsed) {
    var i, j, n, o; // If the state is not SCHEDULED, then we previously errored on start.

    if (self.state !== SCHEDULED) return stop();

    for (i in schedules) {
      o = schedules[i];
      if (o.name !== self.name) continue; // While this element already has a starting transition during this frame,
      // defer starting an interrupting transition until that transition has a
      // chance to tick (and possibly end); see d3/d3-transition#54!

      if (o.state === STARTED) return (0, _d3Timer.timeout)(start); // Interrupt the active transition, if any.

      if (o.state === RUNNING) {
        o.state = ENDED;
        o.timer.stop();
        o.on.call("interrupt", node, node.__data__, o.index, o.group);
        delete schedules[i];
      } // Cancel any pre-empted transitions.
      else if (+i < id) {
          o.state = ENDED;
          o.timer.stop();
          o.on.call("cancel", node, node.__data__, o.index, o.group);
          delete schedules[i];
        }
    } // Defer the first tick to end of the current frame; see d3/d3#1576.
    // Note the transition may be canceled after start and before the first tick!
    // Note this must be scheduled before the start event; see d3/d3-transition#16!
    // Assuming this is successful, subsequent callbacks go straight to tick.


    (0, _d3Timer.timeout)(function () {
      if (self.state === STARTED) {
        self.state = RUNNING;
        self.timer.restart(tick, self.delay, self.time);
        tick(elapsed);
      }
    }); // Dispatch the start event.
    // Note this must be done before the tween are initialized.

    self.state = STARTING;
    self.on.call("start", node, node.__data__, self.index, self.group);
    if (self.state !== STARTING) return; // interrupted

    self.state = STARTED; // Initialize the tween, deleting null tween.

    tween = new Array(n = self.tween.length);

    for (i = 0, j = -1; i < n; ++i) {
      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {
        tween[++j] = o;
      }
    }

    tween.length = j + 1;
  }

  function tick(elapsed) {
    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),
        i = -1,
        n = tween.length;

    while (++i < n) {
      tween[i].call(node, t);
    } // Dispatch the end event.


    if (self.state === ENDING) {
      self.on.call("end", node, node.__data__, self.index, self.group);
      stop();
    }
  }

  function stop() {
    self.state = ENDED;
    self.timer.stop();
    delete schedules[id];

    for (var i in schedules) return; // eslint-disable-line no-unused-vars


    delete node.__transition;
  }
}
},{"d3-dispatch":"../../node_modules/d3-dispatch/src/index.js","d3-timer":"../../node_modules/d3-timer/src/index.js"}],"../../node_modules/d3-transition/src/interrupt.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _schedule = require("./transition/schedule.js");

function _default(node, name) {
  var schedules = node.__transition,
      schedule,
      active,
      empty = true,
      i;
  if (!schedules) return;
  name = name == null ? null : name + "";

  for (i in schedules) {
    if ((schedule = schedules[i]).name !== name) {
      empty = false;
      continue;
    }

    active = schedule.state > _schedule.STARTING && schedule.state < _schedule.ENDING;
    schedule.state = _schedule.ENDED;
    schedule.timer.stop();
    schedule.on.call(active ? "interrupt" : "cancel", node, node.__data__, schedule.index, schedule.group);
    delete schedules[i];
  }

  if (empty) delete node.__transition;
}
},{"./transition/schedule.js":"../../node_modules/d3-transition/src/transition/schedule.js"}],"../../node_modules/d3-transition/src/selection/interrupt.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _interrupt = _interopRequireDefault(require("../interrupt.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(name) {
  return this.each(function () {
    (0, _interrupt.default)(this, name);
  });
}
},{"../interrupt.js":"../../node_modules/d3-transition/src/interrupt.js"}],"../../node_modules/d3-transition/src/transition/tween.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.tweenValue = tweenValue;

var _schedule = require("./schedule.js");

function tweenRemove(id, name) {
  var tween0, tween1;
  return function () {
    var schedule = (0, _schedule.set)(this, id),
        tween = schedule.tween; // If this node shared tween with the previous node,
    // just assign the updated shared tween and we’re done!
    // Otherwise, copy-on-write.

    if (tween !== tween0) {
      tween1 = tween0 = tween;

      for (var i = 0, n = tween1.length; i < n; ++i) {
        if (tween1[i].name === name) {
          tween1 = tween1.slice();
          tween1.splice(i, 1);
          break;
        }
      }
    }

    schedule.tween = tween1;
  };
}

function tweenFunction(id, name, value) {
  var tween0, tween1;
  if (typeof value !== "function") throw new Error();
  return function () {
    var schedule = (0, _schedule.set)(this, id),
        tween = schedule.tween; // If this node shared tween with the previous node,
    // just assign the updated shared tween and we’re done!
    // Otherwise, copy-on-write.

    if (tween !== tween0) {
      tween1 = (tween0 = tween).slice();

      for (var t = {
        name: name,
        value: value
      }, i = 0, n = tween1.length; i < n; ++i) {
        if (tween1[i].name === name) {
          tween1[i] = t;
          break;
        }
      }

      if (i === n) tween1.push(t);
    }

    schedule.tween = tween1;
  };
}

function _default(name, value) {
  var id = this._id;
  name += "";

  if (arguments.length < 2) {
    var tween = (0, _schedule.get)(this.node(), id).tween;

    for (var i = 0, n = tween.length, t; i < n; ++i) {
      if ((t = tween[i]).name === name) {
        return t.value;
      }
    }

    return null;
  }

  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));
}

function tweenValue(transition, name, value) {
  var id = transition._id;
  transition.each(function () {
    var schedule = (0, _schedule.set)(this, id);
    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);
  });
  return function (node) {
    return (0, _schedule.get)(node, id).value[name];
  };
}
},{"./schedule.js":"../../node_modules/d3-transition/src/transition/schedule.js"}],"../../node_modules/d3-transition/src/transition/interpolate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Color = require("d3-color");

var _d3Interpolate = require("d3-interpolate");

function _default(a, b) {
  var c;
  return (typeof b === "number" ? _d3Interpolate.interpolateNumber : b instanceof _d3Color.color ? _d3Interpolate.interpolateRgb : (c = (0, _d3Color.color)(b)) ? (b = c, _d3Interpolate.interpolateRgb) : _d3Interpolate.interpolateString)(a, b);
}
},{"d3-color":"../../node_modules/d3-color/src/index.js","d3-interpolate":"../../node_modules/d3-interpolate/src/index.js"}],"../../node_modules/d3-transition/src/transition/attr.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Interpolate = require("d3-interpolate");

var _d3Selection = require("d3-selection");

var _tween = require("./tween.js");

var _interpolate = _interopRequireDefault(require("./interpolate.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function attrRemove(name) {
  return function () {
    this.removeAttribute(name);
  };
}

function attrRemoveNS(fullname) {
  return function () {
    this.removeAttributeNS(fullname.space, fullname.local);
  };
}

function attrConstant(name, interpolate, value1) {
  var string00,
      string1 = value1 + "",
      interpolate0;
  return function () {
    var string0 = this.getAttribute(name);
    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
  };
}

function attrConstantNS(fullname, interpolate, value1) {
  var string00,
      string1 = value1 + "",
      interpolate0;
  return function () {
    var string0 = this.getAttributeNS(fullname.space, fullname.local);
    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
  };
}

function attrFunction(name, interpolate, value) {
  var string00, string10, interpolate0;
  return function () {
    var string0,
        value1 = value(this),
        string1;
    if (value1 == null) return void this.removeAttribute(name);
    string0 = this.getAttribute(name);
    string1 = value1 + "";
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}

function attrFunctionNS(fullname, interpolate, value) {
  var string00, string10, interpolate0;
  return function () {
    var string0,
        value1 = value(this),
        string1;
    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);
    string0 = this.getAttributeNS(fullname.space, fullname.local);
    string1 = value1 + "";
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}

function _default(name, value) {
  var fullname = (0, _d3Selection.namespace)(name),
      i = fullname === "transform" ? _d3Interpolate.interpolateTransformSvg : _interpolate.default;
  return this.attrTween(name, typeof value === "function" ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, (0, _tween.tweenValue)(this, "attr." + name, value)) : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname) : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));
}
},{"d3-interpolate":"../../node_modules/d3-interpolate/src/index.js","d3-selection":"../../node_modules/d3-selection/src/index.js","./tween.js":"../../node_modules/d3-transition/src/transition/tween.js","./interpolate.js":"../../node_modules/d3-transition/src/transition/interpolate.js"}],"../../node_modules/d3-transition/src/transition/attrTween.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Selection = require("d3-selection");

function attrInterpolate(name, i) {
  return function (t) {
    this.setAttribute(name, i.call(this, t));
  };
}

function attrInterpolateNS(fullname, i) {
  return function (t) {
    this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));
  };
}

function attrTweenNS(fullname, value) {
  var t0, i0;

  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);
    return t0;
  }

  tween._value = value;
  return tween;
}

function attrTween(name, value) {
  var t0, i0;

  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);
    return t0;
  }

  tween._value = value;
  return tween;
}

function _default(name, value) {
  var key = "attr." + name;
  if (arguments.length < 2) return (key = this.tween(key)) && key._value;
  if (value == null) return this.tween(key, null);
  if (typeof value !== "function") throw new Error();
  var fullname = (0, _d3Selection.namespace)(name);
  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));
}
},{"d3-selection":"../../node_modules/d3-selection/src/index.js"}],"../../node_modules/d3-transition/src/transition/delay.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _schedule = require("./schedule.js");

function delayFunction(id, value) {
  return function () {
    (0, _schedule.init)(this, id).delay = +value.apply(this, arguments);
  };
}

function delayConstant(id, value) {
  return value = +value, function () {
    (0, _schedule.init)(this, id).delay = value;
  };
}

function _default(value) {
  var id = this._id;
  return arguments.length ? this.each((typeof value === "function" ? delayFunction : delayConstant)(id, value)) : (0, _schedule.get)(this.node(), id).delay;
}
},{"./schedule.js":"../../node_modules/d3-transition/src/transition/schedule.js"}],"../../node_modules/d3-transition/src/transition/duration.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _schedule = require("./schedule.js");

function durationFunction(id, value) {
  return function () {
    (0, _schedule.set)(this, id).duration = +value.apply(this, arguments);
  };
}

function durationConstant(id, value) {
  return value = +value, function () {
    (0, _schedule.set)(this, id).duration = value;
  };
}

function _default(value) {
  var id = this._id;
  return arguments.length ? this.each((typeof value === "function" ? durationFunction : durationConstant)(id, value)) : (0, _schedule.get)(this.node(), id).duration;
}
},{"./schedule.js":"../../node_modules/d3-transition/src/transition/schedule.js"}],"../../node_modules/d3-transition/src/transition/ease.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _schedule = require("./schedule.js");

function easeConstant(id, value) {
  if (typeof value !== "function") throw new Error();
  return function () {
    (0, _schedule.set)(this, id).ease = value;
  };
}

function _default(value) {
  var id = this._id;
  return arguments.length ? this.each(easeConstant(id, value)) : (0, _schedule.get)(this.node(), id).ease;
}
},{"./schedule.js":"../../node_modules/d3-transition/src/transition/schedule.js"}],"../../node_modules/d3-transition/src/transition/filter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Selection = require("d3-selection");

var _index = require("./index.js");

function _default(match) {
  if (typeof match !== "function") match = (0, _d3Selection.matcher)(match);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
        subgroup.push(node);
      }
    }
  }

  return new _index.Transition(subgroups, this._parents, this._name, this._id);
}
},{"d3-selection":"../../node_modules/d3-selection/src/index.js","./index.js":"../../node_modules/d3-transition/src/transition/index.js"}],"../../node_modules/d3-transition/src/transition/merge.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index.js");

function _default(transition) {
  if (transition._id !== this._id) throw new Error();

  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group0[i] || group1[i]) {
        merge[i] = node;
      }
    }
  }

  for (; j < m0; ++j) {
    merges[j] = groups0[j];
  }

  return new _index.Transition(merges, this._parents, this._name, this._id);
}
},{"./index.js":"../../node_modules/d3-transition/src/transition/index.js"}],"../../node_modules/d3-transition/src/transition/on.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _schedule = require("./schedule.js");

function start(name) {
  return (name + "").trim().split(/^|\s+/).every(function (t) {
    var i = t.indexOf(".");
    if (i >= 0) t = t.slice(0, i);
    return !t || t === "start";
  });
}

function onFunction(id, name, listener) {
  var on0,
      on1,
      sit = start(name) ? _schedule.init : _schedule.set;
  return function () {
    var schedule = sit(this, id),
        on = schedule.on; // If this node shared a dispatch with the previous node,
    // just assign the updated shared dispatch and we’re done!
    // Otherwise, copy-on-write.

    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);
    schedule.on = on1;
  };
}

function _default(name, listener) {
  var id = this._id;
  return arguments.length < 2 ? (0, _schedule.get)(this.node(), id).on.on(name) : this.each(onFunction(id, name, listener));
}
},{"./schedule.js":"../../node_modules/d3-transition/src/transition/schedule.js"}],"../../node_modules/d3-transition/src/transition/remove.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function removeFunction(id) {
  return function () {
    var parent = this.parentNode;

    for (var i in this.__transition) if (+i !== id) return;

    if (parent) parent.removeChild(this);
  };
}

function _default() {
  return this.on("end.remove", removeFunction(this._id));
}
},{}],"../../node_modules/d3-transition/src/transition/select.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Selection = require("d3-selection");

var _index = require("./index.js");

var _schedule = _interopRequireWildcard(require("./schedule.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _default(select) {
  var name = this._name,
      id = this._id;
  if (typeof select !== "function") select = (0, _d3Selection.selector)(select);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
        if ("__data__" in node) subnode.__data__ = node.__data__;
        subgroup[i] = subnode;
        (0, _schedule.default)(subgroup[i], name, id, i, subgroup, (0, _schedule.get)(node, id));
      }
    }
  }

  return new _index.Transition(subgroups, this._parents, name, id);
}
},{"d3-selection":"../../node_modules/d3-selection/src/index.js","./index.js":"../../node_modules/d3-transition/src/transition/index.js","./schedule.js":"../../node_modules/d3-transition/src/transition/schedule.js"}],"../../node_modules/d3-transition/src/transition/selectAll.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Selection = require("d3-selection");

var _index = require("./index.js");

var _schedule = _interopRequireWildcard(require("./schedule.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _default(select) {
  var name = this._name,
      id = this._id;
  if (typeof select !== "function") select = (0, _d3Selection.selectorAll)(select);

  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        for (var children = select.call(node, node.__data__, i, group), child, inherit = (0, _schedule.get)(node, id), k = 0, l = children.length; k < l; ++k) {
          if (child = children[k]) {
            (0, _schedule.default)(child, name, id, k, children, inherit);
          }
        }

        subgroups.push(children);
        parents.push(node);
      }
    }
  }

  return new _index.Transition(subgroups, parents, name, id);
}
},{"d3-selection":"../../node_modules/d3-selection/src/index.js","./index.js":"../../node_modules/d3-transition/src/transition/index.js","./schedule.js":"../../node_modules/d3-transition/src/transition/schedule.js"}],"../../node_modules/d3-transition/src/transition/selection.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Selection = require("d3-selection");

var Selection = _d3Selection.selection.prototype.constructor;

function _default() {
  return new Selection(this._groups, this._parents);
}
},{"d3-selection":"../../node_modules/d3-selection/src/index.js"}],"../../node_modules/d3-transition/src/transition/style.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Interpolate = require("d3-interpolate");

var _d3Selection = require("d3-selection");

var _schedule = require("./schedule.js");

var _tween = require("./tween.js");

var _interpolate = _interopRequireDefault(require("./interpolate.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function styleNull(name, interpolate) {
  var string00, string10, interpolate0;
  return function () {
    var string0 = (0, _d3Selection.style)(this, name),
        string1 = (this.style.removeProperty(name), (0, _d3Selection.style)(this, name));
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : interpolate0 = interpolate(string00 = string0, string10 = string1);
  };
}

function styleRemove(name) {
  return function () {
    this.style.removeProperty(name);
  };
}

function styleConstant(name, interpolate, value1) {
  var string00,
      string1 = value1 + "",
      interpolate0;
  return function () {
    var string0 = (0, _d3Selection.style)(this, name);
    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
  };
}

function styleFunction(name, interpolate, value) {
  var string00, string10, interpolate0;
  return function () {
    var string0 = (0, _d3Selection.style)(this, name),
        value1 = value(this),
        string1 = value1 + "";
    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), (0, _d3Selection.style)(this, name));
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}

function styleMaybeRemove(id, name) {
  var on0,
      on1,
      listener0,
      key = "style." + name,
      event = "end." + key,
      remove;
  return function () {
    var schedule = (0, _schedule.set)(this, id),
        on = schedule.on,
        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined; // If this node shared a dispatch with the previous node,
    // just assign the updated shared dispatch and we’re done!
    // Otherwise, copy-on-write.

    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);
    schedule.on = on1;
  };
}

function _default(name, value, priority) {
  var i = (name += "") === "transform" ? _d3Interpolate.interpolateTransformCss : _interpolate.default;
  return value == null ? this.styleTween(name, styleNull(name, i)).on("end.style." + name, styleRemove(name)) : typeof value === "function" ? this.styleTween(name, styleFunction(name, i, (0, _tween.tweenValue)(this, "style." + name, value))).each(styleMaybeRemove(this._id, name)) : this.styleTween(name, styleConstant(name, i, value), priority).on("end.style." + name, null);
}
},{"d3-interpolate":"../../node_modules/d3-interpolate/src/index.js","d3-selection":"../../node_modules/d3-selection/src/index.js","./schedule.js":"../../node_modules/d3-transition/src/transition/schedule.js","./tween.js":"../../node_modules/d3-transition/src/transition/tween.js","./interpolate.js":"../../node_modules/d3-transition/src/transition/interpolate.js"}],"../../node_modules/d3-transition/src/transition/styleTween.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function styleInterpolate(name, i, priority) {
  return function (t) {
    this.style.setProperty(name, i.call(this, t), priority);
  };
}

function styleTween(name, value, priority) {
  var t, i0;

  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);
    return t;
  }

  tween._value = value;
  return tween;
}

function _default(name, value, priority) {
  var key = "style." + (name += "");
  if (arguments.length < 2) return (key = this.tween(key)) && key._value;
  if (value == null) return this.tween(key, null);
  if (typeof value !== "function") throw new Error();
  return this.tween(key, styleTween(name, value, priority == null ? "" : priority));
}
},{}],"../../node_modules/d3-transition/src/transition/text.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _tween = require("./tween.js");

function textConstant(value) {
  return function () {
    this.textContent = value;
  };
}

function textFunction(value) {
  return function () {
    var value1 = value(this);
    this.textContent = value1 == null ? "" : value1;
  };
}

function _default(value) {
  return this.tween("text", typeof value === "function" ? textFunction((0, _tween.tweenValue)(this, "text", value)) : textConstant(value == null ? "" : value + ""));
}
},{"./tween.js":"../../node_modules/d3-transition/src/transition/tween.js"}],"../../node_modules/d3-transition/src/transition/textTween.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function textInterpolate(i) {
  return function (t) {
    this.textContent = i.call(this, t);
  };
}

function textTween(value) {
  var t0, i0;

  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t0 = (i0 = i) && textInterpolate(i);
    return t0;
  }

  tween._value = value;
  return tween;
}

function _default(value) {
  var key = "text";
  if (arguments.length < 1) return (key = this.tween(key)) && key._value;
  if (value == null) return this.tween(key, null);
  if (typeof value !== "function") throw new Error();
  return this.tween(key, textTween(value));
}
},{}],"../../node_modules/d3-transition/src/transition/transition.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./index.js");

var _schedule = _interopRequireWildcard(require("./schedule.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _default() {
  var name = this._name,
      id0 = this._id,
      id1 = (0, _index.newId)();

  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        var inherit = (0, _schedule.get)(node, id0);
        (0, _schedule.default)(node, name, id1, i, group, {
          time: inherit.time + inherit.delay + inherit.duration,
          delay: 0,
          duration: inherit.duration,
          ease: inherit.ease
        });
      }
    }
  }

  return new _index.Transition(groups, this._parents, name, id1);
}
},{"./index.js":"../../node_modules/d3-transition/src/transition/index.js","./schedule.js":"../../node_modules/d3-transition/src/transition/schedule.js"}],"../../node_modules/d3-transition/src/transition/end.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _schedule = require("./schedule.js");

function _default() {
  var on0,
      on1,
      that = this,
      id = that._id,
      size = that.size();
  return new Promise(function (resolve, reject) {
    var cancel = {
      value: reject
    },
        end = {
      value: function () {
        if (--size === 0) resolve();
      }
    };
    that.each(function () {
      var schedule = (0, _schedule.set)(this, id),
          on = schedule.on; // If this node shared a dispatch with the previous node,
      // just assign the updated shared dispatch and we’re done!
      // Otherwise, copy-on-write.

      if (on !== on0) {
        on1 = (on0 = on).copy();

        on1._.cancel.push(cancel);

        on1._.interrupt.push(cancel);

        on1._.end.push(end);
      }

      schedule.on = on1;
    });
  });
}
},{"./schedule.js":"../../node_modules/d3-transition/src/transition/schedule.js"}],"../../node_modules/d3-transition/src/transition/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Transition = Transition;
exports.default = transition;
exports.newId = newId;

var _d3Selection = require("d3-selection");

var _attr = _interopRequireDefault(require("./attr.js"));

var _attrTween = _interopRequireDefault(require("./attrTween.js"));

var _delay = _interopRequireDefault(require("./delay.js"));

var _duration = _interopRequireDefault(require("./duration.js"));

var _ease = _interopRequireDefault(require("./ease.js"));

var _filter = _interopRequireDefault(require("./filter.js"));

var _merge = _interopRequireDefault(require("./merge.js"));

var _on = _interopRequireDefault(require("./on.js"));

var _remove = _interopRequireDefault(require("./remove.js"));

var _select = _interopRequireDefault(require("./select.js"));

var _selectAll = _interopRequireDefault(require("./selectAll.js"));

var _selection = _interopRequireDefault(require("./selection.js"));

var _style = _interopRequireDefault(require("./style.js"));

var _styleTween = _interopRequireDefault(require("./styleTween.js"));

var _text = _interopRequireDefault(require("./text.js"));

var _textTween = _interopRequireDefault(require("./textTween.js"));

var _transition = _interopRequireDefault(require("./transition.js"));

var _tween = _interopRequireDefault(require("./tween.js"));

var _end = _interopRequireDefault(require("./end.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var id = 0;

function Transition(groups, parents, name, id) {
  this._groups = groups;
  this._parents = parents;
  this._name = name;
  this._id = id;
}

function transition(name) {
  return (0, _d3Selection.selection)().transition(name);
}

function newId() {
  return ++id;
}

var selection_prototype = _d3Selection.selection.prototype;
Transition.prototype = transition.prototype = {
  constructor: Transition,
  select: _select.default,
  selectAll: _selectAll.default,
  filter: _filter.default,
  merge: _merge.default,
  selection: _selection.default,
  transition: _transition.default,
  call: selection_prototype.call,
  nodes: selection_prototype.nodes,
  node: selection_prototype.node,
  size: selection_prototype.size,
  empty: selection_prototype.empty,
  each: selection_prototype.each,
  on: _on.default,
  attr: _attr.default,
  attrTween: _attrTween.default,
  style: _style.default,
  styleTween: _styleTween.default,
  text: _text.default,
  textTween: _textTween.default,
  remove: _remove.default,
  tween: _tween.default,
  delay: _delay.default,
  duration: _duration.default,
  ease: _ease.default,
  end: _end.default
};
},{"d3-selection":"../../node_modules/d3-selection/src/index.js","./attr.js":"../../node_modules/d3-transition/src/transition/attr.js","./attrTween.js":"../../node_modules/d3-transition/src/transition/attrTween.js","./delay.js":"../../node_modules/d3-transition/src/transition/delay.js","./duration.js":"../../node_modules/d3-transition/src/transition/duration.js","./ease.js":"../../node_modules/d3-transition/src/transition/ease.js","./filter.js":"../../node_modules/d3-transition/src/transition/filter.js","./merge.js":"../../node_modules/d3-transition/src/transition/merge.js","./on.js":"../../node_modules/d3-transition/src/transition/on.js","./remove.js":"../../node_modules/d3-transition/src/transition/remove.js","./select.js":"../../node_modules/d3-transition/src/transition/select.js","./selectAll.js":"../../node_modules/d3-transition/src/transition/selectAll.js","./selection.js":"../../node_modules/d3-transition/src/transition/selection.js","./style.js":"../../node_modules/d3-transition/src/transition/style.js","./styleTween.js":"../../node_modules/d3-transition/src/transition/styleTween.js","./text.js":"../../node_modules/d3-transition/src/transition/text.js","./textTween.js":"../../node_modules/d3-transition/src/transition/textTween.js","./transition.js":"../../node_modules/d3-transition/src/transition/transition.js","./tween.js":"../../node_modules/d3-transition/src/transition/tween.js","./end.js":"../../node_modules/d3-transition/src/transition/end.js"}],"../../node_modules/d3-ease/src/linear.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.linear = linear;

function linear(t) {
  return +t;
}
},{}],"../../node_modules/d3-ease/src/quad.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.quadIn = quadIn;
exports.quadOut = quadOut;
exports.quadInOut = quadInOut;

function quadIn(t) {
  return t * t;
}

function quadOut(t) {
  return t * (2 - t);
}

function quadInOut(t) {
  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;
}
},{}],"../../node_modules/d3-ease/src/cubic.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cubicIn = cubicIn;
exports.cubicOut = cubicOut;
exports.cubicInOut = cubicInOut;

function cubicIn(t) {
  return t * t * t;
}

function cubicOut(t) {
  return --t * t * t + 1;
}

function cubicInOut(t) {
  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;
}
},{}],"../../node_modules/d3-ease/src/poly.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.polyInOut = exports.polyOut = exports.polyIn = void 0;
var exponent = 3;

var polyIn = function custom(e) {
  e = +e;

  function polyIn(t) {
    return Math.pow(t, e);
  }

  polyIn.exponent = custom;
  return polyIn;
}(exponent);

exports.polyIn = polyIn;

var polyOut = function custom(e) {
  e = +e;

  function polyOut(t) {
    return 1 - Math.pow(1 - t, e);
  }

  polyOut.exponent = custom;
  return polyOut;
}(exponent);

exports.polyOut = polyOut;

var polyInOut = function custom(e) {
  e = +e;

  function polyInOut(t) {
    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;
  }

  polyInOut.exponent = custom;
  return polyInOut;
}(exponent);

exports.polyInOut = polyInOut;
},{}],"../../node_modules/d3-ease/src/sin.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sinIn = sinIn;
exports.sinOut = sinOut;
exports.sinInOut = sinInOut;
var pi = Math.PI,
    halfPi = pi / 2;

function sinIn(t) {
  return 1 - Math.cos(t * halfPi);
}

function sinOut(t) {
  return Math.sin(t * halfPi);
}

function sinInOut(t) {
  return (1 - Math.cos(pi * t)) / 2;
}
},{}],"../../node_modules/d3-ease/src/exp.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.expIn = expIn;
exports.expOut = expOut;
exports.expInOut = expInOut;

function expIn(t) {
  return Math.pow(2, 10 * t - 10);
}

function expOut(t) {
  return 1 - Math.pow(2, -10 * t);
}

function expInOut(t) {
  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;
}
},{}],"../../node_modules/d3-ease/src/circle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.circleIn = circleIn;
exports.circleOut = circleOut;
exports.circleInOut = circleInOut;

function circleIn(t) {
  return 1 - Math.sqrt(1 - t * t);
}

function circleOut(t) {
  return Math.sqrt(1 - --t * t);
}

function circleInOut(t) {
  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;
}
},{}],"../../node_modules/d3-ease/src/bounce.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bounceIn = bounceIn;
exports.bounceOut = bounceOut;
exports.bounceInOut = bounceInOut;
var b1 = 4 / 11,
    b2 = 6 / 11,
    b3 = 8 / 11,
    b4 = 3 / 4,
    b5 = 9 / 11,
    b6 = 10 / 11,
    b7 = 15 / 16,
    b8 = 21 / 22,
    b9 = 63 / 64,
    b0 = 1 / b1 / b1;

function bounceIn(t) {
  return 1 - bounceOut(1 - t);
}

function bounceOut(t) {
  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;
}

function bounceInOut(t) {
  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;
}
},{}],"../../node_modules/d3-ease/src/back.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.backInOut = exports.backOut = exports.backIn = void 0;
var overshoot = 1.70158;

var backIn = function custom(s) {
  s = +s;

  function backIn(t) {
    return t * t * ((s + 1) * t - s);
  }

  backIn.overshoot = custom;
  return backIn;
}(overshoot);

exports.backIn = backIn;

var backOut = function custom(s) {
  s = +s;

  function backOut(t) {
    return --t * t * ((s + 1) * t + s) + 1;
  }

  backOut.overshoot = custom;
  return backOut;
}(overshoot);

exports.backOut = backOut;

var backInOut = function custom(s) {
  s = +s;

  function backInOut(t) {
    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;
  }

  backInOut.overshoot = custom;
  return backInOut;
}(overshoot);

exports.backInOut = backInOut;
},{}],"../../node_modules/d3-ease/src/elastic.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.elasticInOut = exports.elasticOut = exports.elasticIn = void 0;
var tau = 2 * Math.PI,
    amplitude = 1,
    period = 0.3;

var elasticIn = function custom(a, p) {
  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);

  function elasticIn(t) {
    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);
  }

  elasticIn.amplitude = function (a) {
    return custom(a, p * tau);
  };

  elasticIn.period = function (p) {
    return custom(a, p);
  };

  return elasticIn;
}(amplitude, period);

exports.elasticIn = elasticIn;

var elasticOut = function custom(a, p) {
  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);

  function elasticOut(t) {
    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);
  }

  elasticOut.amplitude = function (a) {
    return custom(a, p * tau);
  };

  elasticOut.period = function (p) {
    return custom(a, p);
  };

  return elasticOut;
}(amplitude, period);

exports.elasticOut = elasticOut;

var elasticInOut = function custom(a, p) {
  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);

  function elasticInOut(t) {
    return ((t = t * 2 - 1) < 0 ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p) : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;
  }

  elasticInOut.amplitude = function (a) {
    return custom(a, p * tau);
  };

  elasticInOut.period = function (p) {
    return custom(a, p);
  };

  return elasticInOut;
}(amplitude, period);

exports.elasticInOut = elasticInOut;
},{}],"../../node_modules/d3-ease/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "easeLinear", {
  enumerable: true,
  get: function () {
    return _linear.linear;
  }
});
Object.defineProperty(exports, "easeQuad", {
  enumerable: true,
  get: function () {
    return _quad.quadInOut;
  }
});
Object.defineProperty(exports, "easeQuadIn", {
  enumerable: true,
  get: function () {
    return _quad.quadIn;
  }
});
Object.defineProperty(exports, "easeQuadOut", {
  enumerable: true,
  get: function () {
    return _quad.quadOut;
  }
});
Object.defineProperty(exports, "easeQuadInOut", {
  enumerable: true,
  get: function () {
    return _quad.quadInOut;
  }
});
Object.defineProperty(exports, "easeCubic", {
  enumerable: true,
  get: function () {
    return _cubic.cubicInOut;
  }
});
Object.defineProperty(exports, "easeCubicIn", {
  enumerable: true,
  get: function () {
    return _cubic.cubicIn;
  }
});
Object.defineProperty(exports, "easeCubicOut", {
  enumerable: true,
  get: function () {
    return _cubic.cubicOut;
  }
});
Object.defineProperty(exports, "easeCubicInOut", {
  enumerable: true,
  get: function () {
    return _cubic.cubicInOut;
  }
});
Object.defineProperty(exports, "easePoly", {
  enumerable: true,
  get: function () {
    return _poly.polyInOut;
  }
});
Object.defineProperty(exports, "easePolyIn", {
  enumerable: true,
  get: function () {
    return _poly.polyIn;
  }
});
Object.defineProperty(exports, "easePolyOut", {
  enumerable: true,
  get: function () {
    return _poly.polyOut;
  }
});
Object.defineProperty(exports, "easePolyInOut", {
  enumerable: true,
  get: function () {
    return _poly.polyInOut;
  }
});
Object.defineProperty(exports, "easeSin", {
  enumerable: true,
  get: function () {
    return _sin.sinInOut;
  }
});
Object.defineProperty(exports, "easeSinIn", {
  enumerable: true,
  get: function () {
    return _sin.sinIn;
  }
});
Object.defineProperty(exports, "easeSinOut", {
  enumerable: true,
  get: function () {
    return _sin.sinOut;
  }
});
Object.defineProperty(exports, "easeSinInOut", {
  enumerable: true,
  get: function () {
    return _sin.sinInOut;
  }
});
Object.defineProperty(exports, "easeExp", {
  enumerable: true,
  get: function () {
    return _exp.expInOut;
  }
});
Object.defineProperty(exports, "easeExpIn", {
  enumerable: true,
  get: function () {
    return _exp.expIn;
  }
});
Object.defineProperty(exports, "easeExpOut", {
  enumerable: true,
  get: function () {
    return _exp.expOut;
  }
});
Object.defineProperty(exports, "easeExpInOut", {
  enumerable: true,
  get: function () {
    return _exp.expInOut;
  }
});
Object.defineProperty(exports, "easeCircle", {
  enumerable: true,
  get: function () {
    return _circle.circleInOut;
  }
});
Object.defineProperty(exports, "easeCircleIn", {
  enumerable: true,
  get: function () {
    return _circle.circleIn;
  }
});
Object.defineProperty(exports, "easeCircleOut", {
  enumerable: true,
  get: function () {
    return _circle.circleOut;
  }
});
Object.defineProperty(exports, "easeCircleInOut", {
  enumerable: true,
  get: function () {
    return _circle.circleInOut;
  }
});
Object.defineProperty(exports, "easeBounce", {
  enumerable: true,
  get: function () {
    return _bounce.bounceOut;
  }
});
Object.defineProperty(exports, "easeBounceIn", {
  enumerable: true,
  get: function () {
    return _bounce.bounceIn;
  }
});
Object.defineProperty(exports, "easeBounceOut", {
  enumerable: true,
  get: function () {
    return _bounce.bounceOut;
  }
});
Object.defineProperty(exports, "easeBounceInOut", {
  enumerable: true,
  get: function () {
    return _bounce.bounceInOut;
  }
});
Object.defineProperty(exports, "easeBack", {
  enumerable: true,
  get: function () {
    return _back.backInOut;
  }
});
Object.defineProperty(exports, "easeBackIn", {
  enumerable: true,
  get: function () {
    return _back.backIn;
  }
});
Object.defineProperty(exports, "easeBackOut", {
  enumerable: true,
  get: function () {
    return _back.backOut;
  }
});
Object.defineProperty(exports, "easeBackInOut", {
  enumerable: true,
  get: function () {
    return _back.backInOut;
  }
});
Object.defineProperty(exports, "easeElastic", {
  enumerable: true,
  get: function () {
    return _elastic.elasticOut;
  }
});
Object.defineProperty(exports, "easeElasticIn", {
  enumerable: true,
  get: function () {
    return _elastic.elasticIn;
  }
});
Object.defineProperty(exports, "easeElasticOut", {
  enumerable: true,
  get: function () {
    return _elastic.elasticOut;
  }
});
Object.defineProperty(exports, "easeElasticInOut", {
  enumerable: true,
  get: function () {
    return _elastic.elasticInOut;
  }
});

var _linear = require("./linear.js");

var _quad = require("./quad.js");

var _cubic = require("./cubic.js");

var _poly = require("./poly.js");

var _sin = require("./sin.js");

var _exp = require("./exp.js");

var _circle = require("./circle.js");

var _bounce = require("./bounce.js");

var _back = require("./back.js");

var _elastic = require("./elastic.js");
},{"./linear.js":"../../node_modules/d3-ease/src/linear.js","./quad.js":"../../node_modules/d3-ease/src/quad.js","./cubic.js":"../../node_modules/d3-ease/src/cubic.js","./poly.js":"../../node_modules/d3-ease/src/poly.js","./sin.js":"../../node_modules/d3-ease/src/sin.js","./exp.js":"../../node_modules/d3-ease/src/exp.js","./circle.js":"../../node_modules/d3-ease/src/circle.js","./bounce.js":"../../node_modules/d3-ease/src/bounce.js","./back.js":"../../node_modules/d3-ease/src/back.js","./elastic.js":"../../node_modules/d3-ease/src/elastic.js"}],"../../node_modules/d3-transition/src/selection/transition.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("../transition/index.js");

var _schedule = _interopRequireDefault(require("../transition/schedule.js"));

var _d3Ease = require("d3-ease");

var _d3Timer = require("d3-timer");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultTiming = {
  time: null,
  // Set on use.
  delay: 0,
  duration: 250,
  ease: _d3Ease.easeCubicInOut
};

function inherit(node, id) {
  var timing;

  while (!(timing = node.__transition) || !(timing = timing[id])) {
    if (!(node = node.parentNode)) {
      return defaultTiming.time = (0, _d3Timer.now)(), defaultTiming;
    }
  }

  return timing;
}

function _default(name) {
  var id, timing;

  if (name instanceof _index.Transition) {
    id = name._id, name = name._name;
  } else {
    id = (0, _index.newId)(), (timing = defaultTiming).time = (0, _d3Timer.now)(), name = name == null ? null : name + "";
  }

  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        (0, _schedule.default)(node, name, id, i, group, timing || inherit(node, id));
      }
    }
  }

  return new _index.Transition(groups, this._parents, name, id);
}
},{"../transition/index.js":"../../node_modules/d3-transition/src/transition/index.js","../transition/schedule.js":"../../node_modules/d3-transition/src/transition/schedule.js","d3-ease":"../../node_modules/d3-ease/src/index.js","d3-timer":"../../node_modules/d3-timer/src/index.js"}],"../../node_modules/d3-transition/src/selection/index.js":[function(require,module,exports) {
"use strict";

var _d3Selection = require("d3-selection");

var _interrupt = _interopRequireDefault(require("./interrupt.js"));

var _transition = _interopRequireDefault(require("./transition.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_d3Selection.selection.prototype.interrupt = _interrupt.default;
_d3Selection.selection.prototype.transition = _transition.default;
},{"d3-selection":"../../node_modules/d3-selection/src/index.js","./interrupt.js":"../../node_modules/d3-transition/src/selection/interrupt.js","./transition.js":"../../node_modules/d3-transition/src/selection/transition.js"}],"../../node_modules/d3-transition/src/active.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./transition/index.js");

var _schedule = require("./transition/schedule.js");

var root = [null];

function _default(node, name) {
  var schedules = node.__transition,
      schedule,
      i;

  if (schedules) {
    name = name == null ? null : name + "";

    for (i in schedules) {
      if ((schedule = schedules[i]).state > _schedule.SCHEDULED && schedule.name === name) {
        return new _index.Transition([[node]], root, name, +i);
      }
    }
  }

  return null;
}
},{"./transition/index.js":"../../node_modules/d3-transition/src/transition/index.js","./transition/schedule.js":"../../node_modules/d3-transition/src/transition/schedule.js"}],"../../node_modules/d3-transition/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "transition", {
  enumerable: true,
  get: function () {
    return _index2.default;
  }
});
Object.defineProperty(exports, "active", {
  enumerable: true,
  get: function () {
    return _active.default;
  }
});
Object.defineProperty(exports, "interrupt", {
  enumerable: true,
  get: function () {
    return _interrupt.default;
  }
});

require("./selection/index.js");

var _index2 = _interopRequireDefault(require("./transition/index.js"));

var _active = _interopRequireDefault(require("./active.js"));

var _interrupt = _interopRequireDefault(require("./interrupt.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./selection/index.js":"../../node_modules/d3-transition/src/selection/index.js","./transition/index.js":"../../node_modules/d3-transition/src/transition/index.js","./active.js":"../../node_modules/d3-transition/src/active.js","./interrupt.js":"../../node_modules/d3-transition/src/interrupt.js"}],"../../node_modules/d3-brush/src/constant.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return function () {
    return x;
  };
}
},{}],"../../node_modules/d3-brush/src/event.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(target, type, selection) {
  this.target = target;
  this.type = type;
  this.selection = selection;
}
},{}],"../../node_modules/d3-brush/src/noevent.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.nopropagation = nopropagation;
exports.default = _default;

var _d3Selection = require("d3-selection");

function nopropagation() {
  _d3Selection.event.stopImmediatePropagation();
}

function _default() {
  _d3Selection.event.preventDefault();

  _d3Selection.event.stopImmediatePropagation();
}
},{"d3-selection":"../../node_modules/d3-selection/src/index.js"}],"../../node_modules/d3-brush/src/brush.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.brushSelection = brushSelection;
exports.brushX = brushX;
exports.brushY = brushY;
exports.default = _default;

var _d3Dispatch = require("d3-dispatch");

var _d3Drag = require("d3-drag");

var _d3Interpolate = require("d3-interpolate");

var _d3Selection = require("d3-selection");

var _d3Transition = require("d3-transition");

var _constant = _interopRequireDefault(require("./constant.js"));

var _event = _interopRequireDefault(require("./event.js"));

var _noevent = _interopRequireWildcard(require("./noevent.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var MODE_DRAG = {
  name: "drag"
},
    MODE_SPACE = {
  name: "space"
},
    MODE_HANDLE = {
  name: "handle"
},
    MODE_CENTER = {
  name: "center"
};

function number1(e) {
  return [+e[0], +e[1]];
}

function number2(e) {
  return [number1(e[0]), number1(e[1])];
}

function toucher(identifier) {
  return function (target) {
    return (0, _d3Selection.touch)(target, _d3Selection.event.touches, identifier);
  };
}

var X = {
  name: "x",
  handles: ["w", "e"].map(type),
  input: function (x, e) {
    return x == null ? null : [[+x[0], e[0][1]], [+x[1], e[1][1]]];
  },
  output: function (xy) {
    return xy && [xy[0][0], xy[1][0]];
  }
};
var Y = {
  name: "y",
  handles: ["n", "s"].map(type),
  input: function (y, e) {
    return y == null ? null : [[e[0][0], +y[0]], [e[1][0], +y[1]]];
  },
  output: function (xy) {
    return xy && [xy[0][1], xy[1][1]];
  }
};
var XY = {
  name: "xy",
  handles: ["n", "w", "e", "s", "nw", "ne", "sw", "se"].map(type),
  input: function (xy) {
    return xy == null ? null : number2(xy);
  },
  output: function (xy) {
    return xy;
  }
};
var cursors = {
  overlay: "crosshair",
  selection: "move",
  n: "ns-resize",
  e: "ew-resize",
  s: "ns-resize",
  w: "ew-resize",
  nw: "nwse-resize",
  ne: "nesw-resize",
  se: "nwse-resize",
  sw: "nesw-resize"
};
var flipX = {
  e: "w",
  w: "e",
  nw: "ne",
  ne: "nw",
  se: "sw",
  sw: "se"
};
var flipY = {
  n: "s",
  s: "n",
  nw: "sw",
  ne: "se",
  se: "ne",
  sw: "nw"
};
var signsX = {
  overlay: +1,
  selection: +1,
  n: null,
  e: +1,
  s: null,
  w: -1,
  nw: -1,
  ne: +1,
  se: +1,
  sw: -1
};
var signsY = {
  overlay: +1,
  selection: +1,
  n: -1,
  e: null,
  s: +1,
  w: null,
  nw: -1,
  ne: -1,
  se: +1,
  sw: +1
};

function type(t) {
  return {
    type: t
  };
} // Ignore right-click, since that should open the context menu.


function defaultFilter() {
  return !_d3Selection.event.ctrlKey && !_d3Selection.event.button;
}

function defaultExtent() {
  var svg = this.ownerSVGElement || this;

  if (svg.hasAttribute("viewBox")) {
    svg = svg.viewBox.baseVal;
    return [[svg.x, svg.y], [svg.x + svg.width, svg.y + svg.height]];
  }

  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];
}

function defaultTouchable() {
  return navigator.maxTouchPoints || "ontouchstart" in this;
} // Like d3.local, but with the name “__brush” rather than auto-generated.


function local(node) {
  while (!node.__brush) if (!(node = node.parentNode)) return;

  return node.__brush;
}

function empty(extent) {
  return extent[0][0] === extent[1][0] || extent[0][1] === extent[1][1];
}

function brushSelection(node) {
  var state = node.__brush;
  return state ? state.dim.output(state.selection) : null;
}

function brushX() {
  return brush(X);
}

function brushY() {
  return brush(Y);
}

function _default() {
  return brush(XY);
}

function brush(dim) {
  var extent = defaultExtent,
      filter = defaultFilter,
      touchable = defaultTouchable,
      keys = true,
      listeners = (0, _d3Dispatch.dispatch)("start", "brush", "end"),
      handleSize = 6,
      touchending;

  function brush(group) {
    var overlay = group.property("__brush", initialize).selectAll(".overlay").data([type("overlay")]);
    overlay.enter().append("rect").attr("class", "overlay").attr("pointer-events", "all").attr("cursor", cursors.overlay).merge(overlay).each(function () {
      var extent = local(this).extent;
      (0, _d3Selection.select)(this).attr("x", extent[0][0]).attr("y", extent[0][1]).attr("width", extent[1][0] - extent[0][0]).attr("height", extent[1][1] - extent[0][1]);
    });
    group.selectAll(".selection").data([type("selection")]).enter().append("rect").attr("class", "selection").attr("cursor", cursors.selection).attr("fill", "#777").attr("fill-opacity", 0.3).attr("stroke", "#fff").attr("shape-rendering", "crispEdges");
    var handle = group.selectAll(".handle").data(dim.handles, function (d) {
      return d.type;
    });
    handle.exit().remove();
    handle.enter().append("rect").attr("class", function (d) {
      return "handle handle--" + d.type;
    }).attr("cursor", function (d) {
      return cursors[d.type];
    });
    group.each(redraw).attr("fill", "none").attr("pointer-events", "all").on("mousedown.brush", started).filter(touchable).on("touchstart.brush", started).on("touchmove.brush", touchmoved).on("touchend.brush touchcancel.brush", touchended).style("touch-action", "none").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }

  brush.move = function (group, selection) {
    if (group.selection) {
      group.on("start.brush", function () {
        emitter(this, arguments).beforestart().start();
      }).on("interrupt.brush end.brush", function () {
        emitter(this, arguments).end();
      }).tween("brush", function () {
        var that = this,
            state = that.__brush,
            emit = emitter(that, arguments),
            selection0 = state.selection,
            selection1 = dim.input(typeof selection === "function" ? selection.apply(this, arguments) : selection, state.extent),
            i = (0, _d3Interpolate.interpolate)(selection0, selection1);

        function tween(t) {
          state.selection = t === 1 && selection1 === null ? null : i(t);
          redraw.call(that);
          emit.brush();
        }

        return selection0 !== null && selection1 !== null ? tween : tween(1);
      });
    } else {
      group.each(function () {
        var that = this,
            args = arguments,
            state = that.__brush,
            selection1 = dim.input(typeof selection === "function" ? selection.apply(that, args) : selection, state.extent),
            emit = emitter(that, args).beforestart();
        (0, _d3Transition.interrupt)(that);
        state.selection = selection1 === null ? null : selection1;
        redraw.call(that);
        emit.start().brush().end();
      });
    }
  };

  brush.clear = function (group) {
    brush.move(group, null);
  };

  function redraw() {
    var group = (0, _d3Selection.select)(this),
        selection = local(this).selection;

    if (selection) {
      group.selectAll(".selection").style("display", null).attr("x", selection[0][0]).attr("y", selection[0][1]).attr("width", selection[1][0] - selection[0][0]).attr("height", selection[1][1] - selection[0][1]);
      group.selectAll(".handle").style("display", null).attr("x", function (d) {
        return d.type[d.type.length - 1] === "e" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2;
      }).attr("y", function (d) {
        return d.type[0] === "s" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2;
      }).attr("width", function (d) {
        return d.type === "n" || d.type === "s" ? selection[1][0] - selection[0][0] + handleSize : handleSize;
      }).attr("height", function (d) {
        return d.type === "e" || d.type === "w" ? selection[1][1] - selection[0][1] + handleSize : handleSize;
      });
    } else {
      group.selectAll(".selection,.handle").style("display", "none").attr("x", null).attr("y", null).attr("width", null).attr("height", null);
    }
  }

  function emitter(that, args, clean) {
    return !clean && that.__brush.emitter || new Emitter(that, args);
  }

  function Emitter(that, args) {
    this.that = that;
    this.args = args;
    this.state = that.__brush;
    this.active = 0;
  }

  Emitter.prototype = {
    beforestart: function () {
      if (++this.active === 1) this.state.emitter = this, this.starting = true;
      return this;
    },
    start: function () {
      if (this.starting) this.starting = false, this.emit("start");else this.emit("brush");
      return this;
    },
    brush: function () {
      this.emit("brush");
      return this;
    },
    end: function () {
      if (--this.active === 0) delete this.state.emitter, this.emit("end");
      return this;
    },
    emit: function (type) {
      (0, _d3Selection.customEvent)(new _event.default(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);
    }
  };

  function started() {
    if (touchending && !_d3Selection.event.touches) return;
    if (!filter.apply(this, arguments)) return;
    var that = this,
        type = _d3Selection.event.target.__data__.type,
        mode = (keys && _d3Selection.event.metaKey ? type = "overlay" : type) === "selection" ? MODE_DRAG : keys && _d3Selection.event.altKey ? MODE_CENTER : MODE_HANDLE,
        signX = dim === Y ? null : signsX[type],
        signY = dim === X ? null : signsY[type],
        state = local(that),
        extent = state.extent,
        selection = state.selection,
        W = extent[0][0],
        w0,
        w1,
        N = extent[0][1],
        n0,
        n1,
        E = extent[1][0],
        e0,
        e1,
        S = extent[1][1],
        s0,
        s1,
        dx = 0,
        dy = 0,
        moving,
        shifting = signX && signY && keys && _d3Selection.event.shiftKey,
        lockX,
        lockY,
        pointer = _d3Selection.event.touches ? toucher(_d3Selection.event.changedTouches[0].identifier) : _d3Selection.mouse,
        point0 = pointer(that),
        point = point0,
        emit = emitter(that, arguments, true).beforestart();

    if (type === "overlay") {
      if (selection) moving = true;
      state.selection = selection = [[w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]], [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]];
    } else {
      w0 = selection[0][0];
      n0 = selection[0][1];
      e0 = selection[1][0];
      s0 = selection[1][1];
    }

    w1 = w0;
    n1 = n0;
    e1 = e0;
    s1 = s0;
    var group = (0, _d3Selection.select)(that).attr("pointer-events", "none");
    var overlay = group.selectAll(".overlay").attr("cursor", cursors[type]);

    if (_d3Selection.event.touches) {
      emit.moved = moved;
      emit.ended = ended;
    } else {
      var view = (0, _d3Selection.select)(_d3Selection.event.view).on("mousemove.brush", moved, true).on("mouseup.brush", ended, true);
      if (keys) view.on("keydown.brush", keydowned, true).on("keyup.brush", keyupped, true);
      (0, _d3Drag.dragDisable)(_d3Selection.event.view);
    }

    (0, _noevent.nopropagation)();
    (0, _d3Transition.interrupt)(that);
    redraw.call(that);
    emit.start();

    function moved() {
      var point1 = pointer(that);

      if (shifting && !lockX && !lockY) {
        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;else lockX = true;
      }

      point = point1;
      moving = true;
      (0, _noevent.default)();
      move();
    }

    function move() {
      var t;
      dx = point[0] - point0[0];
      dy = point[1] - point0[1];

      switch (mode) {
        case MODE_SPACE:
        case MODE_DRAG:
          {
            if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;
            if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;
            break;
          }

        case MODE_HANDLE:
          {
            if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;
            if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;
            break;
          }

        case MODE_CENTER:
          {
            if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));
            if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));
            break;
          }
      }

      if (e1 < w1) {
        signX *= -1;
        t = w0, w0 = e0, e0 = t;
        t = w1, w1 = e1, e1 = t;
        if (type in flipX) overlay.attr("cursor", cursors[type = flipX[type]]);
      }

      if (s1 < n1) {
        signY *= -1;
        t = n0, n0 = s0, s0 = t;
        t = n1, n1 = s1, s1 = t;
        if (type in flipY) overlay.attr("cursor", cursors[type = flipY[type]]);
      }

      if (state.selection) selection = state.selection; // May be set by brush.move!

      if (lockX) w1 = selection[0][0], e1 = selection[1][0];
      if (lockY) n1 = selection[0][1], s1 = selection[1][1];

      if (selection[0][0] !== w1 || selection[0][1] !== n1 || selection[1][0] !== e1 || selection[1][1] !== s1) {
        state.selection = [[w1, n1], [e1, s1]];
        redraw.call(that);
        emit.brush();
      }
    }

    function ended() {
      (0, _noevent.nopropagation)();

      if (_d3Selection.event.touches) {
        if (_d3Selection.event.touches.length) return;
        if (touchending) clearTimeout(touchending);
        touchending = setTimeout(function () {
          touchending = null;
        }, 500); // Ghost clicks are delayed!
      } else {
        (0, _d3Drag.dragEnable)(_d3Selection.event.view, moving);
        view.on("keydown.brush keyup.brush mousemove.brush mouseup.brush", null);
      }

      group.attr("pointer-events", "all");
      overlay.attr("cursor", cursors.overlay);
      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!

      if (empty(selection)) state.selection = null, redraw.call(that);
      emit.end();
    }

    function keydowned() {
      switch (_d3Selection.event.keyCode) {
        case 16:
          {
            // SHIFT
            shifting = signX && signY;
            break;
          }

        case 18:
          {
            // ALT
            if (mode === MODE_HANDLE) {
              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;
              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;
              mode = MODE_CENTER;
              move();
            }

            break;
          }

        case 32:
          {
            // SPACE; takes priority over ALT
            if (mode === MODE_HANDLE || mode === MODE_CENTER) {
              if (signX < 0) e0 = e1 - dx;else if (signX > 0) w0 = w1 - dx;
              if (signY < 0) s0 = s1 - dy;else if (signY > 0) n0 = n1 - dy;
              mode = MODE_SPACE;
              overlay.attr("cursor", cursors.selection);
              move();
            }

            break;
          }

        default:
          return;
      }

      (0, _noevent.default)();
    }

    function keyupped() {
      switch (_d3Selection.event.keyCode) {
        case 16:
          {
            // SHIFT
            if (shifting) {
              lockX = lockY = shifting = false;
              move();
            }

            break;
          }

        case 18:
          {
            // ALT
            if (mode === MODE_CENTER) {
              if (signX < 0) e0 = e1;else if (signX > 0) w0 = w1;
              if (signY < 0) s0 = s1;else if (signY > 0) n0 = n1;
              mode = MODE_HANDLE;
              move();
            }

            break;
          }

        case 32:
          {
            // SPACE
            if (mode === MODE_SPACE) {
              if (_d3Selection.event.altKey) {
                if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;
                if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;
                mode = MODE_CENTER;
              } else {
                if (signX < 0) e0 = e1;else if (signX > 0) w0 = w1;
                if (signY < 0) s0 = s1;else if (signY > 0) n0 = n1;
                mode = MODE_HANDLE;
              }

              overlay.attr("cursor", cursors[type]);
              move();
            }

            break;
          }

        default:
          return;
      }

      (0, _noevent.default)();
    }
  }

  function touchmoved() {
    emitter(this, arguments).moved();
  }

  function touchended() {
    emitter(this, arguments).ended();
  }

  function initialize() {
    var state = this.__brush || {
      selection: null
    };
    state.extent = number2(extent.apply(this, arguments));
    state.dim = dim;
    return state;
  }

  brush.extent = function (_) {
    return arguments.length ? (extent = typeof _ === "function" ? _ : (0, _constant.default)(number2(_)), brush) : extent;
  };

  brush.filter = function (_) {
    return arguments.length ? (filter = typeof _ === "function" ? _ : (0, _constant.default)(!!_), brush) : filter;
  };

  brush.touchable = function (_) {
    return arguments.length ? (touchable = typeof _ === "function" ? _ : (0, _constant.default)(!!_), brush) : touchable;
  };

  brush.handleSize = function (_) {
    return arguments.length ? (handleSize = +_, brush) : handleSize;
  };

  brush.keyModifiers = function (_) {
    return arguments.length ? (keys = !!_, brush) : keys;
  };

  brush.on = function () {
    var value = listeners.on.apply(listeners, arguments);
    return value === listeners ? brush : value;
  };

  return brush;
}
},{"d3-dispatch":"../../node_modules/d3-dispatch/src/index.js","d3-drag":"../../node_modules/d3-drag/src/index.js","d3-interpolate":"../../node_modules/d3-interpolate/src/index.js","d3-selection":"../../node_modules/d3-selection/src/index.js","d3-transition":"../../node_modules/d3-transition/src/index.js","./constant.js":"../../node_modules/d3-brush/src/constant.js","./event.js":"../../node_modules/d3-brush/src/event.js","./noevent.js":"../../node_modules/d3-brush/src/noevent.js"}],"../../node_modules/d3-brush/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "brush", {
  enumerable: true,
  get: function () {
    return _brush.default;
  }
});
Object.defineProperty(exports, "brushX", {
  enumerable: true,
  get: function () {
    return _brush.brushX;
  }
});
Object.defineProperty(exports, "brushY", {
  enumerable: true,
  get: function () {
    return _brush.brushY;
  }
});
Object.defineProperty(exports, "brushSelection", {
  enumerable: true,
  get: function () {
    return _brush.brushSelection;
  }
});

var _brush = _interopRequireWildcard(require("./brush.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./brush.js":"../../node_modules/d3-brush/src/brush.js"}],"../../node_modules/d3-chord/src/math.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.max = exports.tau = exports.halfPi = exports.pi = exports.sin = exports.cos = void 0;
var cos = Math.cos;
exports.cos = cos;
var sin = Math.sin;
exports.sin = sin;
var pi = Math.PI;
exports.pi = pi;
var halfPi = pi / 2;
exports.halfPi = halfPi;
var tau = pi * 2;
exports.tau = tau;
var max = Math.max;
exports.max = max;
},{}],"../../node_modules/d3-chord/src/chord.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Array = require("d3-array");

var _math = require("./math");

function compareValue(compare) {
  return function (a, b) {
    return compare(a.source.value + a.target.value, b.source.value + b.target.value);
  };
}

function _default() {
  var padAngle = 0,
      sortGroups = null,
      sortSubgroups = null,
      sortChords = null;

  function chord(matrix) {
    var n = matrix.length,
        groupSums = [],
        groupIndex = (0, _d3Array.range)(n),
        subgroupIndex = [],
        chords = [],
        groups = chords.groups = new Array(n),
        subgroups = new Array(n * n),
        k,
        x,
        x0,
        dx,
        i,
        j; // Compute the sum.

    k = 0, i = -1;

    while (++i < n) {
      x = 0, j = -1;

      while (++j < n) {
        x += matrix[i][j];
      }

      groupSums.push(x);
      subgroupIndex.push((0, _d3Array.range)(n));
      k += x;
    } // Sort groups…


    if (sortGroups) groupIndex.sort(function (a, b) {
      return sortGroups(groupSums[a], groupSums[b]);
    }); // Sort subgroups…

    if (sortSubgroups) subgroupIndex.forEach(function (d, i) {
      d.sort(function (a, b) {
        return sortSubgroups(matrix[i][a], matrix[i][b]);
      });
    }); // Convert the sum to scaling factor for [0, 2pi].
    // TODO Allow start and end angle to be specified?
    // TODO Allow padding to be specified as percentage?

    k = (0, _math.max)(0, _math.tau - padAngle * n) / k;
    dx = k ? padAngle : _math.tau / n; // Compute the start and end angle for each group and subgroup.
    // Note: Opera has a bug reordering object literal properties!

    x = 0, i = -1;

    while (++i < n) {
      x0 = x, j = -1;

      while (++j < n) {
        var di = groupIndex[i],
            dj = subgroupIndex[di][j],
            v = matrix[di][dj],
            a0 = x,
            a1 = x += v * k;
        subgroups[dj * n + di] = {
          index: di,
          subindex: dj,
          startAngle: a0,
          endAngle: a1,
          value: v
        };
      }

      groups[di] = {
        index: di,
        startAngle: x0,
        endAngle: x,
        value: groupSums[di]
      };
      x += dx;
    } // Generate chords for each (non-empty) subgroup-subgroup link.


    i = -1;

    while (++i < n) {
      j = i - 1;

      while (++j < n) {
        var source = subgroups[j * n + i],
            target = subgroups[i * n + j];

        if (source.value || target.value) {
          chords.push(source.value < target.value ? {
            source: target,
            target: source
          } : {
            source: source,
            target: target
          });
        }
      }
    }

    return sortChords ? chords.sort(sortChords) : chords;
  }

  chord.padAngle = function (_) {
    return arguments.length ? (padAngle = (0, _math.max)(0, _), chord) : padAngle;
  };

  chord.sortGroups = function (_) {
    return arguments.length ? (sortGroups = _, chord) : sortGroups;
  };

  chord.sortSubgroups = function (_) {
    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;
  };

  chord.sortChords = function (_) {
    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;
  };

  return chord;
}
},{"d3-array":"../../node_modules/d3-array/src/index.js","./math":"../../node_modules/d3-chord/src/math.js"}],"../../node_modules/d3-chord/src/array.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.slice = void 0;
var slice = Array.prototype.slice;
exports.slice = slice;
},{}],"../../node_modules/d3-chord/src/constant.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return function () {
    return x;
  };
}
},{}],"../../node_modules/d3-path/src/path.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var pi = Math.PI,
    tau = 2 * pi,
    epsilon = 1e-6,
    tauEpsilon = tau - epsilon;

function Path() {
  this._x0 = this._y0 = // start of current subpath
  this._x1 = this._y1 = null; // end of current subpath

  this._ = "";
}

function path() {
  return new Path();
}

Path.prototype = path.prototype = {
  constructor: Path,
  moveTo: function (x, y) {
    this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y);
  },
  closePath: function () {
    if (this._x1 !== null) {
      this._x1 = this._x0, this._y1 = this._y0;
      this._ += "Z";
    }
  },
  lineTo: function (x, y) {
    this._ += "L" + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  quadraticCurveTo: function (x1, y1, x, y) {
    this._ += "Q" + +x1 + "," + +y1 + "," + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  bezierCurveTo: function (x1, y1, x2, y2, x, y) {
    this._ += "C" + +x1 + "," + +y1 + "," + +x2 + "," + +y2 + "," + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  arcTo: function (x1, y1, x2, y2, r) {
    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;
    var x0 = this._x1,
        y0 = this._y1,
        x21 = x2 - x1,
        y21 = y2 - y1,
        x01 = x0 - x1,
        y01 = y0 - y1,
        l01_2 = x01 * x01 + y01 * y01; // Is the radius negative? Error.

    if (r < 0) throw new Error("negative radius: " + r); // Is this path empty? Move to (x1,y1).

    if (this._x1 === null) {
      this._ += "M" + (this._x1 = x1) + "," + (this._y1 = y1);
    } // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.
    else if (!(l01_2 > epsilon)) ; // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?
      // Equivalently, is (x1,y1) coincident with (x2,y2)?
      // Or, is the radius zero? Line to (x1,y1).
      else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {
          this._ += "L" + (this._x1 = x1) + "," + (this._y1 = y1);
        } // Otherwise, draw an arc!
        else {
            var x20 = x2 - x0,
                y20 = y2 - y0,
                l21_2 = x21 * x21 + y21 * y21,
                l20_2 = x20 * x20 + y20 * y20,
                l21 = Math.sqrt(l21_2),
                l01 = Math.sqrt(l01_2),
                l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),
                t01 = l / l01,
                t21 = l / l21; // If the start tangent is not coincident with (x0,y0), line to.

            if (Math.abs(t01 - 1) > epsilon) {
              this._ += "L" + (x1 + t01 * x01) + "," + (y1 + t01 * y01);
            }

            this._ += "A" + r + "," + r + ",0,0," + +(y01 * x20 > x01 * y20) + "," + (this._x1 = x1 + t21 * x21) + "," + (this._y1 = y1 + t21 * y21);
          }
  },
  arc: function (x, y, r, a0, a1, ccw) {
    x = +x, y = +y, r = +r, ccw = !!ccw;
    var dx = r * Math.cos(a0),
        dy = r * Math.sin(a0),
        x0 = x + dx,
        y0 = y + dy,
        cw = 1 ^ ccw,
        da = ccw ? a0 - a1 : a1 - a0; // Is the radius negative? Error.

    if (r < 0) throw new Error("negative radius: " + r); // Is this path empty? Move to (x0,y0).

    if (this._x1 === null) {
      this._ += "M" + x0 + "," + y0;
    } // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).
    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {
        this._ += "L" + x0 + "," + y0;
      } // Is this arc empty? We’re done.


    if (!r) return; // Does the angle go the wrong way? Flip the direction.

    if (da < 0) da = da % tau + tau; // Is this a complete circle? Draw two arcs to complete the circle.

    if (da > tauEpsilon) {
      this._ += "A" + r + "," + r + ",0,1," + cw + "," + (x - dx) + "," + (y - dy) + "A" + r + "," + r + ",0,1," + cw + "," + (this._x1 = x0) + "," + (this._y1 = y0);
    } // Is this arc non-empty? Draw an arc!
    else if (da > epsilon) {
        this._ += "A" + r + "," + r + ",0," + +(da >= pi) + "," + cw + "," + (this._x1 = x + r * Math.cos(a1)) + "," + (this._y1 = y + r * Math.sin(a1));
      }
  },
  rect: function (x, y, w, h) {
    this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y) + "h" + +w + "v" + +h + "h" + -w + "Z";
  },
  toString: function () {
    return this._;
  }
};
var _default = path;
exports.default = _default;
},{}],"../../node_modules/d3-path/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "path", {
  enumerable: true,
  get: function () {
    return _path.default;
  }
});

var _path = _interopRequireDefault(require("./path.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./path.js":"../../node_modules/d3-path/src/path.js"}],"../../node_modules/d3-chord/src/ribbon.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _array = require("./array");

var _constant = _interopRequireDefault(require("./constant"));

var _math = require("./math");

var _d3Path = require("d3-path");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function defaultSource(d) {
  return d.source;
}

function defaultTarget(d) {
  return d.target;
}

function defaultRadius(d) {
  return d.radius;
}

function defaultStartAngle(d) {
  return d.startAngle;
}

function defaultEndAngle(d) {
  return d.endAngle;
}

function _default() {
  var source = defaultSource,
      target = defaultTarget,
      radius = defaultRadius,
      startAngle = defaultStartAngle,
      endAngle = defaultEndAngle,
      context = null;

  function ribbon() {
    var buffer,
        argv = _array.slice.call(arguments),
        s = source.apply(this, argv),
        t = target.apply(this, argv),
        sr = +radius.apply(this, (argv[0] = s, argv)),
        sa0 = startAngle.apply(this, argv) - _math.halfPi,
        sa1 = endAngle.apply(this, argv) - _math.halfPi,
        sx0 = sr * (0, _math.cos)(sa0),
        sy0 = sr * (0, _math.sin)(sa0),
        tr = +radius.apply(this, (argv[0] = t, argv)),
        ta0 = startAngle.apply(this, argv) - _math.halfPi,
        ta1 = endAngle.apply(this, argv) - _math.halfPi;

    if (!context) context = buffer = (0, _d3Path.path)();
    context.moveTo(sx0, sy0);
    context.arc(0, 0, sr, sa0, sa1);

    if (sa0 !== ta0 || sa1 !== ta1) {
      // TODO sr !== tr?
      context.quadraticCurveTo(0, 0, tr * (0, _math.cos)(ta0), tr * (0, _math.sin)(ta0));
      context.arc(0, 0, tr, ta0, ta1);
    }

    context.quadraticCurveTo(0, 0, sx0, sy0);
    context.closePath();
    if (buffer) return context = null, buffer + "" || null;
  }

  ribbon.radius = function (_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : (0, _constant.default)(+_), ribbon) : radius;
  };

  ribbon.startAngle = function (_) {
    return arguments.length ? (startAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), ribbon) : startAngle;
  };

  ribbon.endAngle = function (_) {
    return arguments.length ? (endAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), ribbon) : endAngle;
  };

  ribbon.source = function (_) {
    return arguments.length ? (source = _, ribbon) : source;
  };

  ribbon.target = function (_) {
    return arguments.length ? (target = _, ribbon) : target;
  };

  ribbon.context = function (_) {
    return arguments.length ? (context = _ == null ? null : _, ribbon) : context;
  };

  return ribbon;
}
},{"./array":"../../node_modules/d3-chord/src/array.js","./constant":"../../node_modules/d3-chord/src/constant.js","./math":"../../node_modules/d3-chord/src/math.js","d3-path":"../../node_modules/d3-path/src/index.js"}],"../../node_modules/d3-chord/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "chord", {
  enumerable: true,
  get: function () {
    return _chord.default;
  }
});
Object.defineProperty(exports, "ribbon", {
  enumerable: true,
  get: function () {
    return _ribbon.default;
  }
});

var _chord = _interopRequireDefault(require("./chord"));

var _ribbon = _interopRequireDefault(require("./ribbon"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./chord":"../../node_modules/d3-chord/src/chord.js","./ribbon":"../../node_modules/d3-chord/src/ribbon.js"}],"../../node_modules/d3-collection/src/map.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.prefix = void 0;
var prefix = "$";
exports.prefix = prefix;

function Map() {}

Map.prototype = map.prototype = {
  constructor: Map,
  has: function (key) {
    return prefix + key in this;
  },
  get: function (key) {
    return this[prefix + key];
  },
  set: function (key, value) {
    this[prefix + key] = value;
    return this;
  },
  remove: function (key) {
    var property = prefix + key;
    return property in this && delete this[property];
  },
  clear: function () {
    for (var property in this) if (property[0] === prefix) delete this[property];
  },
  keys: function () {
    var keys = [];

    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));

    return keys;
  },
  values: function () {
    var values = [];

    for (var property in this) if (property[0] === prefix) values.push(this[property]);

    return values;
  },
  entries: function () {
    var entries = [];

    for (var property in this) if (property[0] === prefix) entries.push({
      key: property.slice(1),
      value: this[property]
    });

    return entries;
  },
  size: function () {
    var size = 0;

    for (var property in this) if (property[0] === prefix) ++size;

    return size;
  },
  empty: function () {
    for (var property in this) if (property[0] === prefix) return false;

    return true;
  },
  each: function (f) {
    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);
  }
};

function map(object, f) {
  var map = new Map(); // Copy constructor.

  if (object instanceof Map) object.each(function (value, key) {
    map.set(key, value);
  }); // Index array by numeric index or specified key function.
  else if (Array.isArray(object)) {
      var i = -1,
          n = object.length,
          o;
      if (f == null) while (++i < n) map.set(i, object[i]);else while (++i < n) map.set(f(o = object[i], i, object), o);
    } // Convert object to map.
    else if (object) for (var key in object) map.set(key, object[key]);
  return map;
}

var _default = map;
exports.default = _default;
},{}],"../../node_modules/d3-collection/src/nest.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _map = _interopRequireDefault(require("./map"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var keys = [],
      sortKeys = [],
      sortValues,
      rollup,
      nest;

  function apply(array, depth, createResult, setResult) {
    if (depth >= keys.length) {
      if (sortValues != null) array.sort(sortValues);
      return rollup != null ? rollup(array) : array;
    }

    var i = -1,
        n = array.length,
        key = keys[depth++],
        keyValue,
        value,
        valuesByKey = (0, _map.default)(),
        values,
        result = createResult();

    while (++i < n) {
      if (values = valuesByKey.get(keyValue = key(value = array[i]) + "")) {
        values.push(value);
      } else {
        valuesByKey.set(keyValue, [value]);
      }
    }

    valuesByKey.each(function (values, key) {
      setResult(result, key, apply(values, depth, createResult, setResult));
    });
    return result;
  }

  function entries(map, depth) {
    if (++depth > keys.length) return map;
    var array,
        sortKey = sortKeys[depth - 1];
    if (rollup != null && depth >= keys.length) array = map.entries();else array = [], map.each(function (v, k) {
      array.push({
        key: k,
        values: entries(v, depth)
      });
    });
    return sortKey != null ? array.sort(function (a, b) {
      return sortKey(a.key, b.key);
    }) : array;
  }

  return nest = {
    object: function (array) {
      return apply(array, 0, createObject, setObject);
    },
    map: function (array) {
      return apply(array, 0, createMap, setMap);
    },
    entries: function (array) {
      return entries(apply(array, 0, createMap, setMap), 0);
    },
    key: function (d) {
      keys.push(d);
      return nest;
    },
    sortKeys: function (order) {
      sortKeys[keys.length - 1] = order;
      return nest;
    },
    sortValues: function (order) {
      sortValues = order;
      return nest;
    },
    rollup: function (f) {
      rollup = f;
      return nest;
    }
  };
}

function createObject() {
  return {};
}

function setObject(object, key, value) {
  object[key] = value;
}

function createMap() {
  return (0, _map.default)();
}

function setMap(map, key, value) {
  map.set(key, value);
}
},{"./map":"../../node_modules/d3-collection/src/map.js"}],"../../node_modules/d3-collection/src/set.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _map = _interopRequireWildcard(require("./map"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function Set() {}

var proto = _map.default.prototype;
Set.prototype = set.prototype = {
  constructor: Set,
  has: proto.has,
  add: function (value) {
    value += "";
    this[_map.prefix + value] = value;
    return this;
  },
  remove: proto.remove,
  clear: proto.clear,
  values: proto.keys,
  size: proto.size,
  empty: proto.empty,
  each: proto.each
};

function set(object, f) {
  var set = new Set(); // Copy constructor.

  if (object instanceof Set) object.each(function (value) {
    set.add(value);
  }); // Otherwise, assume it’s an array.
  else if (object) {
      var i = -1,
          n = object.length;
      if (f == null) while (++i < n) set.add(object[i]);else while (++i < n) set.add(f(object[i], i, object));
    }
  return set;
}

var _default = set;
exports.default = _default;
},{"./map":"../../node_modules/d3-collection/src/map.js"}],"../../node_modules/d3-collection/src/keys.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(map) {
  var keys = [];

  for (var key in map) keys.push(key);

  return keys;
}
},{}],"../../node_modules/d3-collection/src/values.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(map) {
  var values = [];

  for (var key in map) values.push(map[key]);

  return values;
}
},{}],"../../node_modules/d3-collection/src/entries.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(map) {
  var entries = [];

  for (var key in map) entries.push({
    key: key,
    value: map[key]
  });

  return entries;
}
},{}],"../../node_modules/d3-collection/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "nest", {
  enumerable: true,
  get: function () {
    return _nest.default;
  }
});
Object.defineProperty(exports, "set", {
  enumerable: true,
  get: function () {
    return _set.default;
  }
});
Object.defineProperty(exports, "map", {
  enumerable: true,
  get: function () {
    return _map.default;
  }
});
Object.defineProperty(exports, "keys", {
  enumerable: true,
  get: function () {
    return _keys.default;
  }
});
Object.defineProperty(exports, "values", {
  enumerable: true,
  get: function () {
    return _values.default;
  }
});
Object.defineProperty(exports, "entries", {
  enumerable: true,
  get: function () {
    return _entries.default;
  }
});

var _nest = _interopRequireDefault(require("./nest"));

var _set = _interopRequireDefault(require("./set"));

var _map = _interopRequireDefault(require("./map"));

var _keys = _interopRequireDefault(require("./keys"));

var _values = _interopRequireDefault(require("./values"));

var _entries = _interopRequireDefault(require("./entries"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./nest":"../../node_modules/d3-collection/src/nest.js","./set":"../../node_modules/d3-collection/src/set.js","./map":"../../node_modules/d3-collection/src/map.js","./keys":"../../node_modules/d3-collection/src/keys.js","./values":"../../node_modules/d3-collection/src/values.js","./entries":"../../node_modules/d3-collection/src/entries.js"}],"../../node_modules/d3-contour/src/array.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.slice = void 0;
var array = Array.prototype;
var slice = array.slice;
exports.slice = slice;
},{}],"../../node_modules/d3-contour/src/ascending.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  return a - b;
}
},{}],"../../node_modules/d3-contour/src/area.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(ring) {
  var i = 0,
      n = ring.length,
      area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];

  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];

  return area;
}
},{}],"../../node_modules/d3-contour/src/constant.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return function () {
    return x;
  };
}
},{}],"../../node_modules/d3-contour/src/contains.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(ring, hole) {
  var i = -1,
      n = hole.length,
      c;

  while (++i < n) if (c = ringContains(ring, hole[i])) return c;

  return 0;
}

function ringContains(ring, point) {
  var x = point[0],
      y = point[1],
      contains = -1;

  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {
    var pi = ring[i],
        xi = pi[0],
        yi = pi[1],
        pj = ring[j],
        xj = pj[0],
        yj = pj[1];
    if (segmentContains(pi, pj, point)) return 0;
    if (yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi) contains = -contains;
  }

  return contains;
}

function segmentContains(a, b, c) {
  var i;
  return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);
}

function collinear(a, b, c) {
  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);
}

function within(p, q, r) {
  return p <= q && q <= r || r <= q && q <= p;
}
},{}],"../../node_modules/d3-contour/src/noop.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {}
},{}],"../../node_modules/d3-contour/src/contours.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Array = require("d3-array");

var _array = require("./array");

var _ascending = _interopRequireDefault(require("./ascending"));

var _area = _interopRequireDefault(require("./area"));

var _constant = _interopRequireDefault(require("./constant"));

var _contains = _interopRequireDefault(require("./contains"));

var _noop = _interopRequireDefault(require("./noop"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var cases = [[], [[[1.0, 1.5], [0.5, 1.0]]], [[[1.5, 1.0], [1.0, 1.5]]], [[[1.5, 1.0], [0.5, 1.0]]], [[[1.0, 0.5], [1.5, 1.0]]], [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]], [[[1.0, 0.5], [1.0, 1.5]]], [[[1.0, 0.5], [0.5, 1.0]]], [[[0.5, 1.0], [1.0, 0.5]]], [[[1.0, 1.5], [1.0, 0.5]]], [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]], [[[1.5, 1.0], [1.0, 0.5]]], [[[0.5, 1.0], [1.5, 1.0]]], [[[1.0, 1.5], [1.5, 1.0]]], [[[0.5, 1.0], [1.0, 1.5]]], []];

function _default() {
  var dx = 1,
      dy = 1,
      threshold = _d3Array.thresholdSturges,
      smooth = smoothLinear;

  function contours(values) {
    var tz = threshold(values); // Convert number of thresholds into uniform thresholds.

    if (!Array.isArray(tz)) {
      var domain = (0, _d3Array.extent)(values),
          start = domain[0],
          stop = domain[1];
      tz = (0, _d3Array.tickStep)(start, stop, tz);
      tz = (0, _d3Array.range)(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);
    } else {
      tz = tz.slice().sort(_ascending.default);
    }

    return tz.map(function (value) {
      return contour(values, value);
    });
  } // Accumulate, smooth contour rings, assign holes to exterior rings.
  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js


  function contour(values, value) {
    var polygons = [],
        holes = [];
    isorings(values, value, function (ring) {
      smooth(ring, values, value);
      if ((0, _area.default)(ring) > 0) polygons.push([ring]);else holes.push(ring);
    });
    holes.forEach(function (hole) {
      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {
        if ((0, _contains.default)((polygon = polygons[i])[0], hole) !== -1) {
          polygon.push(hole);
          return;
        }
      }
    });
    return {
      type: "MultiPolygon",
      value: value,
      coordinates: polygons
    };
  } // Marching squares with isolines stitched into rings.
  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js


  function isorings(values, value, callback) {
    var fragmentByStart = new Array(),
        fragmentByEnd = new Array(),
        x,
        y,
        t0,
        t1,
        t2,
        t3; // Special case for the first row (y = -1, t2 = t3 = 0).

    x = y = -1;
    t1 = values[0] >= value;
    cases[t1 << 1].forEach(stitch);

    while (++x < dx - 1) {
      t0 = t1, t1 = values[x + 1] >= value;
      cases[t0 | t1 << 1].forEach(stitch);
    }

    cases[t1 << 0].forEach(stitch); // General case for the intermediate rows.

    while (++y < dy - 1) {
      x = -1;
      t1 = values[y * dx + dx] >= value;
      t2 = values[y * dx] >= value;
      cases[t1 << 1 | t2 << 2].forEach(stitch);

      while (++x < dx - 1) {
        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;
        t3 = t2, t2 = values[y * dx + x + 1] >= value;
        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);
      }

      cases[t1 | t2 << 3].forEach(stitch);
    } // Special case for the last row (y = dy - 1, t0 = t1 = 0).


    x = -1;
    t2 = values[y * dx] >= value;
    cases[t2 << 2].forEach(stitch);

    while (++x < dx - 1) {
      t3 = t2, t2 = values[y * dx + x + 1] >= value;
      cases[t2 << 2 | t3 << 3].forEach(stitch);
    }

    cases[t2 << 3].forEach(stitch);

    function stitch(line) {
      var start = [line[0][0] + x, line[0][1] + y],
          end = [line[1][0] + x, line[1][1] + y],
          startIndex = index(start),
          endIndex = index(end),
          f,
          g;

      if (f = fragmentByEnd[startIndex]) {
        if (g = fragmentByStart[endIndex]) {
          delete fragmentByEnd[f.end];
          delete fragmentByStart[g.start];

          if (f === g) {
            f.ring.push(end);
            callback(f.ring);
          } else {
            fragmentByStart[f.start] = fragmentByEnd[g.end] = {
              start: f.start,
              end: g.end,
              ring: f.ring.concat(g.ring)
            };
          }
        } else {
          delete fragmentByEnd[f.end];
          f.ring.push(end);
          fragmentByEnd[f.end = endIndex] = f;
        }
      } else if (f = fragmentByStart[endIndex]) {
        if (g = fragmentByEnd[startIndex]) {
          delete fragmentByStart[f.start];
          delete fragmentByEnd[g.end];

          if (f === g) {
            f.ring.push(end);
            callback(f.ring);
          } else {
            fragmentByStart[g.start] = fragmentByEnd[f.end] = {
              start: g.start,
              end: f.end,
              ring: g.ring.concat(f.ring)
            };
          }
        } else {
          delete fragmentByStart[f.start];
          f.ring.unshift(start);
          fragmentByStart[f.start = startIndex] = f;
        }
      } else {
        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {
          start: startIndex,
          end: endIndex,
          ring: [start, end]
        };
      }
    }
  }

  function index(point) {
    return point[0] * 2 + point[1] * (dx + 1) * 4;
  }

  function smoothLinear(ring, values, value) {
    ring.forEach(function (point) {
      var x = point[0],
          y = point[1],
          xt = x | 0,
          yt = y | 0,
          v0,
          v1 = values[yt * dx + xt];

      if (x > 0 && x < dx && xt === x) {
        v0 = values[yt * dx + xt - 1];
        point[0] = x + (value - v0) / (v1 - v0) - 0.5;
      }

      if (y > 0 && y < dy && yt === y) {
        v0 = values[(yt - 1) * dx + xt];
        point[1] = y + (value - v0) / (v1 - v0) - 0.5;
      }
    });
  }

  contours.contour = contour;

  contours.size = function (_) {
    if (!arguments.length) return [dx, dy];

    var _0 = Math.ceil(_[0]),
        _1 = Math.ceil(_[1]);

    if (!(_0 > 0) || !(_1 > 0)) throw new Error("invalid size");
    return dx = _0, dy = _1, contours;
  };

  contours.thresholds = function (_) {
    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? (0, _constant.default)(_array.slice.call(_)) : (0, _constant.default)(_), contours) : threshold;
  };

  contours.smooth = function (_) {
    return arguments.length ? (smooth = _ ? smoothLinear : _noop.default, contours) : smooth === smoothLinear;
  };

  return contours;
}
},{"d3-array":"../../node_modules/d3-array/src/index.js","./array":"../../node_modules/d3-contour/src/array.js","./ascending":"../../node_modules/d3-contour/src/ascending.js","./area":"../../node_modules/d3-contour/src/area.js","./constant":"../../node_modules/d3-contour/src/constant.js","./contains":"../../node_modules/d3-contour/src/contains.js","./noop":"../../node_modules/d3-contour/src/noop.js"}],"../../node_modules/d3-contour/src/blur.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.blurX = blurX;
exports.blurY = blurY;

// TODO Optimize edge cases.
// TODO Optimize index calculation.
// TODO Optimize arguments.
function blurX(source, target, r) {
  var n = source.width,
      m = source.height,
      w = (r << 1) + 1;

  for (var j = 0; j < m; ++j) {
    for (var i = 0, sr = 0; i < n + r; ++i) {
      if (i < n) {
        sr += source.data[i + j * n];
      }

      if (i >= r) {
        if (i >= w) {
          sr -= source.data[i - w + j * n];
        }

        target.data[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);
      }
    }
  }
} // TODO Optimize edge cases.
// TODO Optimize index calculation.
// TODO Optimize arguments.


function blurY(source, target, r) {
  var n = source.width,
      m = source.height,
      w = (r << 1) + 1;

  for (var i = 0; i < n; ++i) {
    for (var j = 0, sr = 0; j < m + r; ++j) {
      if (j < m) {
        sr += source.data[i + j * n];
      }

      if (j >= r) {
        if (j >= w) {
          sr -= source.data[i + (j - w) * n];
        }

        target.data[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);
      }
    }
  }
}
},{}],"../../node_modules/d3-contour/src/density.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Array = require("d3-array");

var _array = require("./array");

var _blur = require("./blur");

var _constant = _interopRequireDefault(require("./constant"));

var _contours = _interopRequireDefault(require("./contours"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function defaultX(d) {
  return d[0];
}

function defaultY(d) {
  return d[1];
}

function defaultWeight() {
  return 1;
}

function _default() {
  var x = defaultX,
      y = defaultY,
      weight = defaultWeight,
      dx = 960,
      dy = 500,
      r = 20,
      // blur radius
  k = 2,
      // log2(grid cell size)
  o = r * 3,
      // grid offset, to pad for blur
  n = dx + o * 2 >> k,
      // grid width
  m = dy + o * 2 >> k,
      // grid height
  threshold = (0, _constant.default)(20);

  function density(data) {
    var values0 = new Float32Array(n * m),
        values1 = new Float32Array(n * m);
    data.forEach(function (d, i, data) {
      var xi = +x(d, i, data) + o >> k,
          yi = +y(d, i, data) + o >> k,
          wi = +weight(d, i, data);

      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {
        values0[xi + yi * n] += wi;
      }
    }); // TODO Optimize.

    (0, _blur.blurX)({
      width: n,
      height: m,
      data: values0
    }, {
      width: n,
      height: m,
      data: values1
    }, r >> k);
    (0, _blur.blurY)({
      width: n,
      height: m,
      data: values1
    }, {
      width: n,
      height: m,
      data: values0
    }, r >> k);
    (0, _blur.blurX)({
      width: n,
      height: m,
      data: values0
    }, {
      width: n,
      height: m,
      data: values1
    }, r >> k);
    (0, _blur.blurY)({
      width: n,
      height: m,
      data: values1
    }, {
      width: n,
      height: m,
      data: values0
    }, r >> k);
    (0, _blur.blurX)({
      width: n,
      height: m,
      data: values0
    }, {
      width: n,
      height: m,
      data: values1
    }, r >> k);
    (0, _blur.blurY)({
      width: n,
      height: m,
      data: values1
    }, {
      width: n,
      height: m,
      data: values0
    }, r >> k);
    var tz = threshold(values0); // Convert number of thresholds into uniform thresholds.

    if (!Array.isArray(tz)) {
      var stop = (0, _d3Array.max)(values0);
      tz = (0, _d3Array.tickStep)(0, stop, tz);
      tz = (0, _d3Array.range)(0, Math.floor(stop / tz) * tz, tz);
      tz.shift();
    }

    return (0, _contours.default)().thresholds(tz).size([n, m])(values0).map(transform);
  }

  function transform(geometry) {
    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.

    geometry.coordinates.forEach(transformPolygon);
    return geometry;
  }

  function transformPolygon(coordinates) {
    coordinates.forEach(transformRing);
  }

  function transformRing(coordinates) {
    coordinates.forEach(transformPoint);
  } // TODO Optimize.


  function transformPoint(coordinates) {
    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;
    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;
  }

  function resize() {
    o = r * 3;
    n = dx + o * 2 >> k;
    m = dy + o * 2 >> k;
    return density;
  }

  density.x = function (_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : (0, _constant.default)(+_), density) : x;
  };

  density.y = function (_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : (0, _constant.default)(+_), density) : y;
  };

  density.weight = function (_) {
    return arguments.length ? (weight = typeof _ === "function" ? _ : (0, _constant.default)(+_), density) : weight;
  };

  density.size = function (_) {
    if (!arguments.length) return [dx, dy];

    var _0 = Math.ceil(_[0]),
        _1 = Math.ceil(_[1]);

    if (!(_0 >= 0) && !(_0 >= 0)) throw new Error("invalid size");
    return dx = _0, dy = _1, resize();
  };

  density.cellSize = function (_) {
    if (!arguments.length) return 1 << k;
    if (!((_ = +_) >= 1)) throw new Error("invalid cell size");
    return k = Math.floor(Math.log(_) / Math.LN2), resize();
  };

  density.thresholds = function (_) {
    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? (0, _constant.default)(_array.slice.call(_)) : (0, _constant.default)(_), density) : threshold;
  };

  density.bandwidth = function (_) {
    if (!arguments.length) return Math.sqrt(r * (r + 1));
    if (!((_ = +_) >= 0)) throw new Error("invalid bandwidth");
    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();
  };

  return density;
}
},{"d3-array":"../../node_modules/d3-array/src/index.js","./array":"../../node_modules/d3-contour/src/array.js","./blur":"../../node_modules/d3-contour/src/blur.js","./constant":"../../node_modules/d3-contour/src/constant.js","./contours":"../../node_modules/d3-contour/src/contours.js"}],"../../node_modules/d3-contour/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "contours", {
  enumerable: true,
  get: function () {
    return _contours.default;
  }
});
Object.defineProperty(exports, "contourDensity", {
  enumerable: true,
  get: function () {
    return _density.default;
  }
});

var _contours = _interopRequireDefault(require("./contours"));

var _density = _interopRequireDefault(require("./density"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./contours":"../../node_modules/d3-contour/src/contours.js","./density":"../../node_modules/d3-contour/src/density.js"}],"../../node_modules/d3-dsv/src/dsv.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
var EOL = {},
    EOF = {},
    QUOTE = 34,
    NEWLINE = 10,
    RETURN = 13;

function objectConverter(columns) {
  return new Function("d", "return {" + columns.map(function (name, i) {
    return JSON.stringify(name) + ": d[" + i + "] || \"\"";
  }).join(",") + "}");
}

function customConverter(columns, f) {
  var object = objectConverter(columns);
  return function (row, i) {
    return f(object(row), i, columns);
  };
} // Compute unique columns in order of discovery.


function inferColumns(rows) {
  var columnSet = Object.create(null),
      columns = [];
  rows.forEach(function (row) {
    for (var column in row) {
      if (!(column in columnSet)) {
        columns.push(columnSet[column] = column);
      }
    }
  });
  return columns;
}

function pad(value, width) {
  var s = value + "",
      length = s.length;
  return length < width ? new Array(width - length + 1).join(0) + s : s;
}

function formatYear(year) {
  return year < 0 ? "-" + pad(-year, 6) : year > 9999 ? "+" + pad(year, 6) : pad(year, 4);
}

function formatDate(date) {
  var hours = date.getUTCHours(),
      minutes = date.getUTCMinutes(),
      seconds = date.getUTCSeconds(),
      milliseconds = date.getUTCMilliseconds();
  return isNaN(date) ? "Invalid Date" : formatYear(date.getUTCFullYear(), 4) + "-" + pad(date.getUTCMonth() + 1, 2) + "-" + pad(date.getUTCDate(), 2) + (milliseconds ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + ":" + pad(seconds, 2) + "." + pad(milliseconds, 3) + "Z" : seconds ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + ":" + pad(seconds, 2) + "Z" : minutes || hours ? "T" + pad(hours, 2) + ":" + pad(minutes, 2) + "Z" : "");
}

function _default(delimiter) {
  var reFormat = new RegExp("[\"" + delimiter + "\n\r]"),
      DELIMITER = delimiter.charCodeAt(0);

  function parse(text, f) {
    var convert,
        columns,
        rows = parseRows(text, function (row, i) {
      if (convert) return convert(row, i - 1);
      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);
    });
    rows.columns = columns || [];
    return rows;
  }

  function parseRows(text, f) {
    var rows = [],
        // output rows
    N = text.length,
        I = 0,
        // current character index
    n = 0,
        // current line number
    t,
        // current token
    eof = N <= 0,
        // current token followed by EOF?
    eol = false; // current token followed by EOL?
    // Strip the trailing newline.

    if (text.charCodeAt(N - 1) === NEWLINE) --N;
    if (text.charCodeAt(N - 1) === RETURN) --N;

    function token() {
      if (eof) return EOF;
      if (eol) return eol = false, EOL; // Unescape quotes.

      var i,
          j = I,
          c;

      if (text.charCodeAt(j) === QUOTE) {
        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);

        if ((i = I) >= N) eof = true;else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;else if (c === RETURN) {
          eol = true;
          if (text.charCodeAt(I) === NEWLINE) ++I;
        }
        return text.slice(j + 1, i - 1).replace(/""/g, "\"");
      } // Find next delimiter or newline.


      while (I < N) {
        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;else if (c === RETURN) {
          eol = true;
          if (text.charCodeAt(I) === NEWLINE) ++I;
        } else if (c !== DELIMITER) continue;
        return text.slice(j, i);
      } // Return last token before EOF.


      return eof = true, text.slice(j, N);
    }

    while ((t = token()) !== EOF) {
      var row = [];

      while (t !== EOL && t !== EOF) row.push(t), t = token();

      if (f && (row = f(row, n++)) == null) continue;
      rows.push(row);
    }

    return rows;
  }

  function preformatBody(rows, columns) {
    return rows.map(function (row) {
      return columns.map(function (column) {
        return formatValue(row[column]);
      }).join(delimiter);
    });
  }

  function format(rows, columns) {
    if (columns == null) columns = inferColumns(rows);
    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join("\n");
  }

  function formatBody(rows, columns) {
    if (columns == null) columns = inferColumns(rows);
    return preformatBody(rows, columns).join("\n");
  }

  function formatRows(rows) {
    return rows.map(formatRow).join("\n");
  }

  function formatRow(row) {
    return row.map(formatValue).join(delimiter);
  }

  function formatValue(value) {
    return value == null ? "" : value instanceof Date ? formatDate(value) : reFormat.test(value += "") ? "\"" + value.replace(/"/g, "\"\"") + "\"" : value;
  }

  return {
    parse: parse,
    parseRows: parseRows,
    format: format,
    formatBody: formatBody,
    formatRows: formatRows,
    formatRow: formatRow,
    formatValue: formatValue
  };
}
},{}],"../../node_modules/d3-dsv/src/csv.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.csvFormatValue = exports.csvFormatRow = exports.csvFormatRows = exports.csvFormatBody = exports.csvFormat = exports.csvParseRows = exports.csvParse = void 0;

var _dsv = _interopRequireDefault(require("./dsv.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var csv = (0, _dsv.default)(",");
var csvParse = csv.parse;
exports.csvParse = csvParse;
var csvParseRows = csv.parseRows;
exports.csvParseRows = csvParseRows;
var csvFormat = csv.format;
exports.csvFormat = csvFormat;
var csvFormatBody = csv.formatBody;
exports.csvFormatBody = csvFormatBody;
var csvFormatRows = csv.formatRows;
exports.csvFormatRows = csvFormatRows;
var csvFormatRow = csv.formatRow;
exports.csvFormatRow = csvFormatRow;
var csvFormatValue = csv.formatValue;
exports.csvFormatValue = csvFormatValue;
},{"./dsv.js":"../../node_modules/d3-dsv/src/dsv.js"}],"../../node_modules/d3-dsv/src/tsv.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tsvFormatValue = exports.tsvFormatRow = exports.tsvFormatRows = exports.tsvFormatBody = exports.tsvFormat = exports.tsvParseRows = exports.tsvParse = void 0;

var _dsv = _interopRequireDefault(require("./dsv.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var tsv = (0, _dsv.default)("\t");
var tsvParse = tsv.parse;
exports.tsvParse = tsvParse;
var tsvParseRows = tsv.parseRows;
exports.tsvParseRows = tsvParseRows;
var tsvFormat = tsv.format;
exports.tsvFormat = tsvFormat;
var tsvFormatBody = tsv.formatBody;
exports.tsvFormatBody = tsvFormatBody;
var tsvFormatRows = tsv.formatRows;
exports.tsvFormatRows = tsvFormatRows;
var tsvFormatRow = tsv.formatRow;
exports.tsvFormatRow = tsvFormatRow;
var tsvFormatValue = tsv.formatValue;
exports.tsvFormatValue = tsvFormatValue;
},{"./dsv.js":"../../node_modules/d3-dsv/src/dsv.js"}],"../../node_modules/d3-dsv/src/autoType.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = autoType;

function autoType(object) {
  for (var key in object) {
    var value = object[key].trim(),
        number,
        m;
    if (!value) value = null;else if (value === "true") value = true;else if (value === "false") value = false;else if (value === "NaN") value = NaN;else if (!isNaN(number = +value)) value = number;else if (m = value.match(/^([-+]\d{2})?\d{4}(-\d{2}(-\d{2})?)?(T\d{2}:\d{2}(:\d{2}(\.\d{3})?)?(Z|[-+]\d{2}:\d{2})?)?$/)) {
      if (fixtz && !!m[4] && !m[7]) value = value.replace(/-/g, "/").replace(/T/, " ");
      value = new Date(value);
    } else continue;
    object[key] = value;
  }

  return object;
} // https://github.com/d3/d3-dsv/issues/45


var fixtz = new Date("2019-01-01T00:00").getHours() || new Date("2019-07-01T00:00").getHours();
},{}],"../../node_modules/d3-dsv/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "dsvFormat", {
  enumerable: true,
  get: function () {
    return _dsv.default;
  }
});
Object.defineProperty(exports, "csvParse", {
  enumerable: true,
  get: function () {
    return _csv.csvParse;
  }
});
Object.defineProperty(exports, "csvParseRows", {
  enumerable: true,
  get: function () {
    return _csv.csvParseRows;
  }
});
Object.defineProperty(exports, "csvFormat", {
  enumerable: true,
  get: function () {
    return _csv.csvFormat;
  }
});
Object.defineProperty(exports, "csvFormatBody", {
  enumerable: true,
  get: function () {
    return _csv.csvFormatBody;
  }
});
Object.defineProperty(exports, "csvFormatRows", {
  enumerable: true,
  get: function () {
    return _csv.csvFormatRows;
  }
});
Object.defineProperty(exports, "csvFormatRow", {
  enumerable: true,
  get: function () {
    return _csv.csvFormatRow;
  }
});
Object.defineProperty(exports, "csvFormatValue", {
  enumerable: true,
  get: function () {
    return _csv.csvFormatValue;
  }
});
Object.defineProperty(exports, "tsvParse", {
  enumerable: true,
  get: function () {
    return _tsv.tsvParse;
  }
});
Object.defineProperty(exports, "tsvParseRows", {
  enumerable: true,
  get: function () {
    return _tsv.tsvParseRows;
  }
});
Object.defineProperty(exports, "tsvFormat", {
  enumerable: true,
  get: function () {
    return _tsv.tsvFormat;
  }
});
Object.defineProperty(exports, "tsvFormatBody", {
  enumerable: true,
  get: function () {
    return _tsv.tsvFormatBody;
  }
});
Object.defineProperty(exports, "tsvFormatRows", {
  enumerable: true,
  get: function () {
    return _tsv.tsvFormatRows;
  }
});
Object.defineProperty(exports, "tsvFormatRow", {
  enumerable: true,
  get: function () {
    return _tsv.tsvFormatRow;
  }
});
Object.defineProperty(exports, "tsvFormatValue", {
  enumerable: true,
  get: function () {
    return _tsv.tsvFormatValue;
  }
});
Object.defineProperty(exports, "autoType", {
  enumerable: true,
  get: function () {
    return _autoType.default;
  }
});

var _dsv = _interopRequireDefault(require("./dsv.js"));

var _csv = require("./csv.js");

var _tsv = require("./tsv.js");

var _autoType = _interopRequireDefault(require("./autoType.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./dsv.js":"../../node_modules/d3-dsv/src/dsv.js","./csv.js":"../../node_modules/d3-dsv/src/csv.js","./tsv.js":"../../node_modules/d3-dsv/src/tsv.js","./autoType.js":"../../node_modules/d3-dsv/src/autoType.js"}],"../../node_modules/d3-fetch/src/blob.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function responseBlob(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  return response.blob();
}

function _default(input, init) {
  return fetch(input, init).then(responseBlob);
}
},{}],"../../node_modules/d3-fetch/src/buffer.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function responseArrayBuffer(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  return response.arrayBuffer();
}

function _default(input, init) {
  return fetch(input, init).then(responseArrayBuffer);
}
},{}],"../../node_modules/d3-fetch/src/text.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function responseText(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  return response.text();
}

function _default(input, init) {
  return fetch(input, init).then(responseText);
}
},{}],"../../node_modules/d3-fetch/src/dsv.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = dsv;
exports.tsv = exports.csv = void 0;

var _d3Dsv = require("d3-dsv");

var _text = _interopRequireDefault(require("./text"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function dsvParse(parse) {
  return function (input, init, row) {
    if (arguments.length === 2 && typeof init === "function") row = init, init = undefined;
    return (0, _text.default)(input, init).then(function (response) {
      return parse(response, row);
    });
  };
}

function dsv(delimiter, input, init, row) {
  if (arguments.length === 3 && typeof init === "function") row = init, init = undefined;
  var format = (0, _d3Dsv.dsvFormat)(delimiter);
  return (0, _text.default)(input, init).then(function (response) {
    return format.parse(response, row);
  });
}

var csv = dsvParse(_d3Dsv.csvParse);
exports.csv = csv;
var tsv = dsvParse(_d3Dsv.tsvParse);
exports.tsv = tsv;
},{"d3-dsv":"../../node_modules/d3-dsv/src/index.js","./text":"../../node_modules/d3-fetch/src/text.js"}],"../../node_modules/d3-fetch/src/image.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(input, init) {
  return new Promise(function (resolve, reject) {
    var image = new Image();

    for (var key in init) image[key] = init[key];

    image.onerror = reject;

    image.onload = function () {
      resolve(image);
    };

    image.src = input;
  });
}
},{}],"../../node_modules/d3-fetch/src/json.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function responseJson(response) {
  if (!response.ok) throw new Error(response.status + " " + response.statusText);
  return response.json();
}

function _default(input, init) {
  return fetch(input, init).then(responseJson);
}
},{}],"../../node_modules/d3-fetch/src/xml.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.svg = exports.html = exports.default = void 0;

var _text = _interopRequireDefault(require("./text"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function parser(type) {
  return function (input, init) {
    return (0, _text.default)(input, init).then(function (text) {
      return new DOMParser().parseFromString(text, type);
    });
  };
}

var _default = parser("application/xml");

exports.default = _default;
var html = parser("text/html");
exports.html = html;
var svg = parser("image/svg+xml");
exports.svg = svg;
},{"./text":"../../node_modules/d3-fetch/src/text.js"}],"../../node_modules/d3-fetch/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "blob", {
  enumerable: true,
  get: function () {
    return _blob.default;
  }
});
Object.defineProperty(exports, "buffer", {
  enumerable: true,
  get: function () {
    return _buffer.default;
  }
});
Object.defineProperty(exports, "dsv", {
  enumerable: true,
  get: function () {
    return _dsv.default;
  }
});
Object.defineProperty(exports, "csv", {
  enumerable: true,
  get: function () {
    return _dsv.csv;
  }
});
Object.defineProperty(exports, "tsv", {
  enumerable: true,
  get: function () {
    return _dsv.tsv;
  }
});
Object.defineProperty(exports, "image", {
  enumerable: true,
  get: function () {
    return _image.default;
  }
});
Object.defineProperty(exports, "json", {
  enumerable: true,
  get: function () {
    return _json.default;
  }
});
Object.defineProperty(exports, "text", {
  enumerable: true,
  get: function () {
    return _text.default;
  }
});
Object.defineProperty(exports, "xml", {
  enumerable: true,
  get: function () {
    return _xml.default;
  }
});
Object.defineProperty(exports, "html", {
  enumerable: true,
  get: function () {
    return _xml.html;
  }
});
Object.defineProperty(exports, "svg", {
  enumerable: true,
  get: function () {
    return _xml.svg;
  }
});

var _blob = _interopRequireDefault(require("./blob"));

var _buffer = _interopRequireDefault(require("./buffer"));

var _dsv = _interopRequireWildcard(require("./dsv"));

var _image = _interopRequireDefault(require("./image"));

var _json = _interopRequireDefault(require("./json"));

var _text = _interopRequireDefault(require("./text"));

var _xml = _interopRequireWildcard(require("./xml"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./blob":"../../node_modules/d3-fetch/src/blob.js","./buffer":"../../node_modules/d3-fetch/src/buffer.js","./dsv":"../../node_modules/d3-fetch/src/dsv.js","./image":"../../node_modules/d3-fetch/src/image.js","./json":"../../node_modules/d3-fetch/src/json.js","./text":"../../node_modules/d3-fetch/src/text.js","./xml":"../../node_modules/d3-fetch/src/xml.js"}],"../../node_modules/d3-force/src/center.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x, y) {
  var nodes;
  if (x == null) x = 0;
  if (y == null) y = 0;

  function force() {
    var i,
        n = nodes.length,
        node,
        sx = 0,
        sy = 0;

    for (i = 0; i < n; ++i) {
      node = nodes[i], sx += node.x, sy += node.y;
    }

    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {
      node = nodes[i], node.x -= sx, node.y -= sy;
    }
  }

  force.initialize = function (_) {
    nodes = _;
  };

  force.x = function (_) {
    return arguments.length ? (x = +_, force) : x;
  };

  force.y = function (_) {
    return arguments.length ? (y = +_, force) : y;
  };

  return force;
}
},{}],"../../node_modules/d3-force/src/constant.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return function () {
    return x;
  };
}
},{}],"../../node_modules/d3-force/src/jiggle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  return (Math.random() - 0.5) * 1e-6;
}
},{}],"../../node_modules/d3-quadtree/src/add.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.addAll = addAll;

function _default(d) {
  var x = +this._x.call(null, d),
      y = +this._y.call(null, d);
  return add(this.cover(x, y), x, y, d);
}

function add(tree, x, y, d) {
  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points

  var parent,
      node = tree._root,
      leaf = {
    data: d
  },
      x0 = tree._x0,
      y0 = tree._y0,
      x1 = tree._x1,
      y1 = tree._y1,
      xm,
      ym,
      xp,
      yp,
      right,
      bottom,
      i,
      j; // If the tree is empty, initialize the root as a leaf.

  if (!node) return tree._root = leaf, tree; // Find the existing leaf for the new point, or add it.

  while (node.length) {
    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;
    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;
    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;
  } // Is the new point is exactly coincident with the existing point?


  xp = +tree._x.call(null, node.data);
  yp = +tree._y.call(null, node.data);
  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree; // Otherwise, split the leaf node until the old and new point are separated.

  do {
    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);
    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;
    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;
  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | xp >= xm));

  return parent[j] = node, parent[i] = leaf, tree;
}

function addAll(data) {
  var d,
      i,
      n = data.length,
      x,
      y,
      xz = new Array(n),
      yz = new Array(n),
      x0 = Infinity,
      y0 = Infinity,
      x1 = -Infinity,
      y1 = -Infinity; // Compute the points and their extent.

  for (i = 0; i < n; ++i) {
    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;
    xz[i] = x;
    yz[i] = y;
    if (x < x0) x0 = x;
    if (x > x1) x1 = x;
    if (y < y0) y0 = y;
    if (y > y1) y1 = y;
  } // If there were no (valid) points, abort.


  if (x0 > x1 || y0 > y1) return this; // Expand the tree to cover the new points.

  this.cover(x0, y0).cover(x1, y1); // Add the new points.

  for (i = 0; i < n; ++i) {
    add(this, xz[i], yz[i], data[i]);
  }

  return this;
}
},{}],"../../node_modules/d3-quadtree/src/cover.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x, y) {
  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points

  var x0 = this._x0,
      y0 = this._y0,
      x1 = this._x1,
      y1 = this._y1; // If the quadtree has no extent, initialize them.
  // Integer extent are necessary so that if we later double the extent,
  // the existing quadrant boundaries don’t change due to floating point error!

  if (isNaN(x0)) {
    x1 = (x0 = Math.floor(x)) + 1;
    y1 = (y0 = Math.floor(y)) + 1;
  } // Otherwise, double repeatedly to cover.
  else {
      var z = x1 - x0,
          node = this._root,
          parent,
          i;

      while (x0 > x || x >= x1 || y0 > y || y >= y1) {
        i = (y < y0) << 1 | x < x0;
        parent = new Array(4), parent[i] = node, node = parent, z *= 2;

        switch (i) {
          case 0:
            x1 = x0 + z, y1 = y0 + z;
            break;

          case 1:
            x0 = x1 - z, y1 = y0 + z;
            break;

          case 2:
            x1 = x0 + z, y0 = y1 - z;
            break;

          case 3:
            x0 = x1 - z, y0 = y1 - z;
            break;
        }
      }

      if (this._root && this._root.length) this._root = node;
    }

  this._x0 = x0;
  this._y0 = y0;
  this._x1 = x1;
  this._y1 = y1;
  return this;
}
},{}],"../../node_modules/d3-quadtree/src/data.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var data = [];
  this.visit(function (node) {
    if (!node.length) do data.push(node.data); while (node = node.next);
  });
  return data;
}
},{}],"../../node_modules/d3-quadtree/src/extent.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(_) {
  return arguments.length ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1]) : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];
}
},{}],"../../node_modules/d3-quadtree/src/quad.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(node, x0, y0, x1, y1) {
  this.node = node;
  this.x0 = x0;
  this.y0 = y0;
  this.x1 = x1;
  this.y1 = y1;
}
},{}],"../../node_modules/d3-quadtree/src/find.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _quad = _interopRequireDefault(require("./quad.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(x, y, radius) {
  var data,
      x0 = this._x0,
      y0 = this._y0,
      x1,
      y1,
      x2,
      y2,
      x3 = this._x1,
      y3 = this._y1,
      quads = [],
      node = this._root,
      q,
      i;
  if (node) quads.push(new _quad.default(node, x0, y0, x3, y3));
  if (radius == null) radius = Infinity;else {
    x0 = x - radius, y0 = y - radius;
    x3 = x + radius, y3 = y + radius;
    radius *= radius;
  }

  while (q = quads.pop()) {
    // Stop searching if this quadrant can’t contain a closer node.
    if (!(node = q.node) || (x1 = q.x0) > x3 || (y1 = q.y0) > y3 || (x2 = q.x1) < x0 || (y2 = q.y1) < y0) continue; // Bisect the current quadrant.

    if (node.length) {
      var xm = (x1 + x2) / 2,
          ym = (y1 + y2) / 2;
      quads.push(new _quad.default(node[3], xm, ym, x2, y2), new _quad.default(node[2], x1, ym, xm, y2), new _quad.default(node[1], xm, y1, x2, ym), new _quad.default(node[0], x1, y1, xm, ym)); // Visit the closest quadrant first.

      if (i = (y >= ym) << 1 | x >= xm) {
        q = quads[quads.length - 1];
        quads[quads.length - 1] = quads[quads.length - 1 - i];
        quads[quads.length - 1 - i] = q;
      }
    } // Visit this point. (Visiting coincident points isn’t necessary!)
    else {
        var dx = x - +this._x.call(null, node.data),
            dy = y - +this._y.call(null, node.data),
            d2 = dx * dx + dy * dy;

        if (d2 < radius) {
          var d = Math.sqrt(radius = d2);
          x0 = x - d, y0 = y - d;
          x3 = x + d, y3 = y + d;
          data = node.data;
        }
      }
  }

  return data;
}
},{"./quad.js":"../../node_modules/d3-quadtree/src/quad.js"}],"../../node_modules/d3-quadtree/src/remove.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.removeAll = removeAll;

function _default(d) {
  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points

  var parent,
      node = this._root,
      retainer,
      previous,
      next,
      x0 = this._x0,
      y0 = this._y0,
      x1 = this._x1,
      y1 = this._y1,
      x,
      y,
      xm,
      ym,
      right,
      bottom,
      i,
      j; // If the tree is empty, initialize the root as a leaf.

  if (!node) return this; // Find the leaf node for the point.
  // While descending, also retain the deepest parent with a non-removed sibling.

  if (node.length) while (true) {
    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm;else x1 = xm;
    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym;else y1 = ym;
    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;
    if (!node.length) break;
    if (parent[i + 1 & 3] || parent[i + 2 & 3] || parent[i + 3 & 3]) retainer = parent, j = i;
  } // Find the point to remove.

  while (node.data !== d) if (!(previous = node, node = node.next)) return this;

  if (next = node.next) delete node.next; // If there are multiple coincident points, remove just the point.

  if (previous) return next ? previous.next = next : delete previous.next, this; // If this is the root point, remove it.

  if (!parent) return this._root = next, this; // Remove this leaf.

  next ? parent[i] = next : delete parent[i]; // If the parent now contains exactly one leaf, collapse superfluous parents.

  if ((node = parent[0] || parent[1] || parent[2] || parent[3]) && node === (parent[3] || parent[2] || parent[1] || parent[0]) && !node.length) {
    if (retainer) retainer[j] = node;else this._root = node;
  }

  return this;
}

function removeAll(data) {
  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);

  return this;
}
},{}],"../../node_modules/d3-quadtree/src/root.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  return this._root;
}
},{}],"../../node_modules/d3-quadtree/src/size.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var size = 0;
  this.visit(function (node) {
    if (!node.length) do ++size; while (node = node.next);
  });
  return size;
}
},{}],"../../node_modules/d3-quadtree/src/visit.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _quad = _interopRequireDefault(require("./quad.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(callback) {
  var quads = [],
      q,
      node = this._root,
      child,
      x0,
      y0,
      x1,
      y1;
  if (node) quads.push(new _quad.default(node, this._x0, this._y0, this._x1, this._y1));

  while (q = quads.pop()) {
    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {
      var xm = (x0 + x1) / 2,
          ym = (y0 + y1) / 2;
      if (child = node[3]) quads.push(new _quad.default(child, xm, ym, x1, y1));
      if (child = node[2]) quads.push(new _quad.default(child, x0, ym, xm, y1));
      if (child = node[1]) quads.push(new _quad.default(child, xm, y0, x1, ym));
      if (child = node[0]) quads.push(new _quad.default(child, x0, y0, xm, ym));
    }
  }

  return this;
}
},{"./quad.js":"../../node_modules/d3-quadtree/src/quad.js"}],"../../node_modules/d3-quadtree/src/visitAfter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _quad = _interopRequireDefault(require("./quad.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(callback) {
  var quads = [],
      next = [],
      q;
  if (this._root) quads.push(new _quad.default(this._root, this._x0, this._y0, this._x1, this._y1));

  while (q = quads.pop()) {
    var node = q.node;

    if (node.length) {
      var child,
          x0 = q.x0,
          y0 = q.y0,
          x1 = q.x1,
          y1 = q.y1,
          xm = (x0 + x1) / 2,
          ym = (y0 + y1) / 2;
      if (child = node[0]) quads.push(new _quad.default(child, x0, y0, xm, ym));
      if (child = node[1]) quads.push(new _quad.default(child, xm, y0, x1, ym));
      if (child = node[2]) quads.push(new _quad.default(child, x0, ym, xm, y1));
      if (child = node[3]) quads.push(new _quad.default(child, xm, ym, x1, y1));
    }

    next.push(q);
  }

  while (q = next.pop()) {
    callback(q.node, q.x0, q.y0, q.x1, q.y1);
  }

  return this;
}
},{"./quad.js":"../../node_modules/d3-quadtree/src/quad.js"}],"../../node_modules/d3-quadtree/src/x.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defaultX = defaultX;
exports.default = _default;

function defaultX(d) {
  return d[0];
}

function _default(_) {
  return arguments.length ? (this._x = _, this) : this._x;
}
},{}],"../../node_modules/d3-quadtree/src/y.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defaultY = defaultY;
exports.default = _default;

function defaultY(d) {
  return d[1];
}

function _default(_) {
  return arguments.length ? (this._y = _, this) : this._y;
}
},{}],"../../node_modules/d3-quadtree/src/quadtree.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = quadtree;

var _add = _interopRequireWildcard(require("./add.js"));

var _cover = _interopRequireDefault(require("./cover.js"));

var _data = _interopRequireDefault(require("./data.js"));

var _extent = _interopRequireDefault(require("./extent.js"));

var _find = _interopRequireDefault(require("./find.js"));

var _remove = _interopRequireWildcard(require("./remove.js"));

var _root = _interopRequireDefault(require("./root.js"));

var _size = _interopRequireDefault(require("./size.js"));

var _visit = _interopRequireDefault(require("./visit.js"));

var _visitAfter = _interopRequireDefault(require("./visitAfter.js"));

var _x = _interopRequireWildcard(require("./x.js"));

var _y = _interopRequireWildcard(require("./y.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function quadtree(nodes, x, y) {
  var tree = new Quadtree(x == null ? _x.defaultX : x, y == null ? _y.defaultY : y, NaN, NaN, NaN, NaN);
  return nodes == null ? tree : tree.addAll(nodes);
}

function Quadtree(x, y, x0, y0, x1, y1) {
  this._x = x;
  this._y = y;
  this._x0 = x0;
  this._y0 = y0;
  this._x1 = x1;
  this._y1 = y1;
  this._root = undefined;
}

function leaf_copy(leaf) {
  var copy = {
    data: leaf.data
  },
      next = copy;

  while (leaf = leaf.next) next = next.next = {
    data: leaf.data
  };

  return copy;
}

var treeProto = quadtree.prototype = Quadtree.prototype;

treeProto.copy = function () {
  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),
      node = this._root,
      nodes,
      child;
  if (!node) return copy;
  if (!node.length) return copy._root = leaf_copy(node), copy;
  nodes = [{
    source: node,
    target: copy._root = new Array(4)
  }];

  while (node = nodes.pop()) {
    for (var i = 0; i < 4; ++i) {
      if (child = node.source[i]) {
        if (child.length) nodes.push({
          source: child,
          target: node.target[i] = new Array(4)
        });else node.target[i] = leaf_copy(child);
      }
    }
  }

  return copy;
};

treeProto.add = _add.default;
treeProto.addAll = _add.addAll;
treeProto.cover = _cover.default;
treeProto.data = _data.default;
treeProto.extent = _extent.default;
treeProto.find = _find.default;
treeProto.remove = _remove.default;
treeProto.removeAll = _remove.removeAll;
treeProto.root = _root.default;
treeProto.size = _size.default;
treeProto.visit = _visit.default;
treeProto.visitAfter = _visitAfter.default;
treeProto.x = _x.default;
treeProto.y = _y.default;
},{"./add.js":"../../node_modules/d3-quadtree/src/add.js","./cover.js":"../../node_modules/d3-quadtree/src/cover.js","./data.js":"../../node_modules/d3-quadtree/src/data.js","./extent.js":"../../node_modules/d3-quadtree/src/extent.js","./find.js":"../../node_modules/d3-quadtree/src/find.js","./remove.js":"../../node_modules/d3-quadtree/src/remove.js","./root.js":"../../node_modules/d3-quadtree/src/root.js","./size.js":"../../node_modules/d3-quadtree/src/size.js","./visit.js":"../../node_modules/d3-quadtree/src/visit.js","./visitAfter.js":"../../node_modules/d3-quadtree/src/visitAfter.js","./x.js":"../../node_modules/d3-quadtree/src/x.js","./y.js":"../../node_modules/d3-quadtree/src/y.js"}],"../../node_modules/d3-quadtree/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "quadtree", {
  enumerable: true,
  get: function () {
    return _quadtree.default;
  }
});

var _quadtree = _interopRequireDefault(require("./quadtree.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./quadtree.js":"../../node_modules/d3-quadtree/src/quadtree.js"}],"../../node_modules/d3-force/src/collide.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant"));

var _jiggle = _interopRequireDefault(require("./jiggle"));

var _d3Quadtree = require("d3-quadtree");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function x(d) {
  return d.x + d.vx;
}

function y(d) {
  return d.y + d.vy;
}

function _default(radius) {
  var nodes,
      radii,
      strength = 1,
      iterations = 1;
  if (typeof radius !== "function") radius = (0, _constant.default)(radius == null ? 1 : +radius);

  function force() {
    var i,
        n = nodes.length,
        tree,
        node,
        xi,
        yi,
        ri,
        ri2;

    for (var k = 0; k < iterations; ++k) {
      tree = (0, _d3Quadtree.quadtree)(nodes, x, y).visitAfter(prepare);

      for (i = 0; i < n; ++i) {
        node = nodes[i];
        ri = radii[node.index], ri2 = ri * ri;
        xi = node.x + node.vx;
        yi = node.y + node.vy;
        tree.visit(apply);
      }
    }

    function apply(quad, x0, y0, x1, y1) {
      var data = quad.data,
          rj = quad.r,
          r = ri + rj;

      if (data) {
        if (data.index > node.index) {
          var x = xi - data.x - data.vx,
              y = yi - data.y - data.vy,
              l = x * x + y * y;

          if (l < r * r) {
            if (x === 0) x = (0, _jiggle.default)(), l += x * x;
            if (y === 0) y = (0, _jiggle.default)(), l += y * y;
            l = (r - (l = Math.sqrt(l))) / l * strength;
            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));
            node.vy += (y *= l) * r;
            data.vx -= x * (r = 1 - r);
            data.vy -= y * r;
          }
        }

        return;
      }

      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;
    }
  }

  function prepare(quad) {
    if (quad.data) return quad.r = radii[quad.data.index];

    for (var i = quad.r = 0; i < 4; ++i) {
      if (quad[i] && quad[i].r > quad.r) {
        quad.r = quad[i].r;
      }
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length,
        node;
    radii = new Array(n);

    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);
  }

  force.initialize = function (_) {
    nodes = _;
    initialize();
  };

  force.iterations = function (_) {
    return arguments.length ? (iterations = +_, force) : iterations;
  };

  force.strength = function (_) {
    return arguments.length ? (strength = +_, force) : strength;
  };

  force.radius = function (_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : radius;
  };

  return force;
}
},{"./constant":"../../node_modules/d3-force/src/constant.js","./jiggle":"../../node_modules/d3-force/src/jiggle.js","d3-quadtree":"../../node_modules/d3-quadtree/src/index.js"}],"../../node_modules/d3-force/src/link.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant"));

var _jiggle = _interopRequireDefault(require("./jiggle"));

var _d3Collection = require("d3-collection");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function index(d) {
  return d.index;
}

function find(nodeById, nodeId) {
  var node = nodeById.get(nodeId);
  if (!node) throw new Error("missing: " + nodeId);
  return node;
}

function _default(links) {
  var id = index,
      strength = defaultStrength,
      strengths,
      distance = (0, _constant.default)(30),
      distances,
      nodes,
      count,
      bias,
      iterations = 1;
  if (links == null) links = [];

  function defaultStrength(link) {
    return 1 / Math.min(count[link.source.index], count[link.target.index]);
  }

  function force(alpha) {
    for (var k = 0, n = links.length; k < iterations; ++k) {
      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {
        link = links[i], source = link.source, target = link.target;
        x = target.x + target.vx - source.x - source.vx || (0, _jiggle.default)();
        y = target.y + target.vy - source.y - source.vy || (0, _jiggle.default)();
        l = Math.sqrt(x * x + y * y);
        l = (l - distances[i]) / l * alpha * strengths[i];
        x *= l, y *= l;
        target.vx -= x * (b = bias[i]);
        target.vy -= y * b;
        source.vx += x * (b = 1 - b);
        source.vy += y * b;
      }
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length,
        m = links.length,
        nodeById = (0, _d3Collection.map)(nodes, id),
        link;

    for (i = 0, count = new Array(n); i < m; ++i) {
      link = links[i], link.index = i;
      if (typeof link.source !== "object") link.source = find(nodeById, link.source);
      if (typeof link.target !== "object") link.target = find(nodeById, link.target);
      count[link.source.index] = (count[link.source.index] || 0) + 1;
      count[link.target.index] = (count[link.target.index] || 0) + 1;
    }

    for (i = 0, bias = new Array(m); i < m; ++i) {
      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);
    }

    strengths = new Array(m), initializeStrength();
    distances = new Array(m), initializeDistance();
  }

  function initializeStrength() {
    if (!nodes) return;

    for (var i = 0, n = links.length; i < n; ++i) {
      strengths[i] = +strength(links[i], i, links);
    }
  }

  function initializeDistance() {
    if (!nodes) return;

    for (var i = 0, n = links.length; i < n; ++i) {
      distances[i] = +distance(links[i], i, links);
    }
  }

  force.initialize = function (_) {
    nodes = _;
    initialize();
  };

  force.links = function (_) {
    return arguments.length ? (links = _, initialize(), force) : links;
  };

  force.id = function (_) {
    return arguments.length ? (id = _, force) : id;
  };

  force.iterations = function (_) {
    return arguments.length ? (iterations = +_, force) : iterations;
  };

  force.strength = function (_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : (0, _constant.default)(+_), initializeStrength(), force) : strength;
  };

  force.distance = function (_) {
    return arguments.length ? (distance = typeof _ === "function" ? _ : (0, _constant.default)(+_), initializeDistance(), force) : distance;
  };

  return force;
}
},{"./constant":"../../node_modules/d3-force/src/constant.js","./jiggle":"../../node_modules/d3-force/src/jiggle.js","d3-collection":"../../node_modules/d3-collection/src/index.js"}],"../../node_modules/d3-force/src/simulation.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.x = x;
exports.y = y;
exports.default = _default;

var _d3Dispatch = require("d3-dispatch");

var _d3Collection = require("d3-collection");

var _d3Timer = require("d3-timer");

function x(d) {
  return d.x;
}

function y(d) {
  return d.y;
}

var initialRadius = 10,
    initialAngle = Math.PI * (3 - Math.sqrt(5));

function _default(nodes) {
  var simulation,
      alpha = 1,
      alphaMin = 0.001,
      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),
      alphaTarget = 0,
      velocityDecay = 0.6,
      forces = (0, _d3Collection.map)(),
      stepper = (0, _d3Timer.timer)(step),
      event = (0, _d3Dispatch.dispatch)("tick", "end");
  if (nodes == null) nodes = [];

  function step() {
    tick();
    event.call("tick", simulation);

    if (alpha < alphaMin) {
      stepper.stop();
      event.call("end", simulation);
    }
  }

  function tick(iterations) {
    var i,
        n = nodes.length,
        node;
    if (iterations === undefined) iterations = 1;

    for (var k = 0; k < iterations; ++k) {
      alpha += (alphaTarget - alpha) * alphaDecay;
      forces.each(function (force) {
        force(alpha);
      });

      for (i = 0; i < n; ++i) {
        node = nodes[i];
        if (node.fx == null) node.x += node.vx *= velocityDecay;else node.x = node.fx, node.vx = 0;
        if (node.fy == null) node.y += node.vy *= velocityDecay;else node.y = node.fy, node.vy = 0;
      }
    }

    return simulation;
  }

  function initializeNodes() {
    for (var i = 0, n = nodes.length, node; i < n; ++i) {
      node = nodes[i], node.index = i;
      if (node.fx != null) node.x = node.fx;
      if (node.fy != null) node.y = node.fy;

      if (isNaN(node.x) || isNaN(node.y)) {
        var radius = initialRadius * Math.sqrt(i),
            angle = i * initialAngle;
        node.x = radius * Math.cos(angle);
        node.y = radius * Math.sin(angle);
      }

      if (isNaN(node.vx) || isNaN(node.vy)) {
        node.vx = node.vy = 0;
      }
    }
  }

  function initializeForce(force) {
    if (force.initialize) force.initialize(nodes);
    return force;
  }

  initializeNodes();
  return simulation = {
    tick: tick,
    restart: function () {
      return stepper.restart(step), simulation;
    },
    stop: function () {
      return stepper.stop(), simulation;
    },
    nodes: function (_) {
      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;
    },
    alpha: function (_) {
      return arguments.length ? (alpha = +_, simulation) : alpha;
    },
    alphaMin: function (_) {
      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;
    },
    alphaDecay: function (_) {
      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;
    },
    alphaTarget: function (_) {
      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;
    },
    velocityDecay: function (_) {
      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;
    },
    force: function (name, _) {
      return arguments.length > 1 ? (_ == null ? forces.remove(name) : forces.set(name, initializeForce(_)), simulation) : forces.get(name);
    },
    find: function (x, y, radius) {
      var i = 0,
          n = nodes.length,
          dx,
          dy,
          d2,
          node,
          closest;
      if (radius == null) radius = Infinity;else radius *= radius;

      for (i = 0; i < n; ++i) {
        node = nodes[i];
        dx = x - node.x;
        dy = y - node.y;
        d2 = dx * dx + dy * dy;
        if (d2 < radius) closest = node, radius = d2;
      }

      return closest;
    },
    on: function (name, _) {
      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);
    }
  };
}
},{"d3-dispatch":"../../node_modules/d3-dispatch/src/index.js","d3-collection":"../../node_modules/d3-collection/src/index.js","d3-timer":"../../node_modules/d3-timer/src/index.js"}],"../../node_modules/d3-force/src/manyBody.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant"));

var _jiggle = _interopRequireDefault(require("./jiggle"));

var _d3Quadtree = require("d3-quadtree");

var _simulation = require("./simulation");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var nodes,
      node,
      alpha,
      strength = (0, _constant.default)(-30),
      strengths,
      distanceMin2 = 1,
      distanceMax2 = Infinity,
      theta2 = 0.81;

  function force(_) {
    var i,
        n = nodes.length,
        tree = (0, _d3Quadtree.quadtree)(nodes, _simulation.x, _simulation.y).visitAfter(accumulate);

    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length,
        node;
    strengths = new Array(n);

    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);
  }

  function accumulate(quad) {
    var strength = 0,
        q,
        c,
        weight = 0,
        x,
        y,
        i; // For internal nodes, accumulate forces from child quadrants.

    if (quad.length) {
      for (x = y = i = 0; i < 4; ++i) {
        if ((q = quad[i]) && (c = Math.abs(q.value))) {
          strength += q.value, weight += c, x += c * q.x, y += c * q.y;
        }
      }

      quad.x = x / weight;
      quad.y = y / weight;
    } // For leaf nodes, accumulate forces from coincident quadrants.
    else {
        q = quad;
        q.x = q.data.x;
        q.y = q.data.y;

        do strength += strengths[q.data.index]; while (q = q.next);
      }

    quad.value = strength;
  }

  function apply(quad, x1, _, x2) {
    if (!quad.value) return true;
    var x = quad.x - node.x,
        y = quad.y - node.y,
        w = x2 - x1,
        l = x * x + y * y; // Apply the Barnes-Hut approximation if possible.
    // Limit forces for very close nodes; randomize direction if coincident.

    if (w * w / theta2 < l) {
      if (l < distanceMax2) {
        if (x === 0) x = (0, _jiggle.default)(), l += x * x;
        if (y === 0) y = (0, _jiggle.default)(), l += y * y;
        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);
        node.vx += x * quad.value * alpha / l;
        node.vy += y * quad.value * alpha / l;
      }

      return true;
    } // Otherwise, process points directly.
    else if (quad.length || l >= distanceMax2) return; // Limit forces for very close nodes; randomize direction if coincident.


    if (quad.data !== node || quad.next) {
      if (x === 0) x = (0, _jiggle.default)(), l += x * x;
      if (y === 0) y = (0, _jiggle.default)(), l += y * y;
      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);
    }

    do if (quad.data !== node) {
      w = strengths[quad.data.index] * alpha / l;
      node.vx += x * w;
      node.vy += y * w;
    } while (quad = quad.next);
  }

  force.initialize = function (_) {
    nodes = _;
    initialize();
  };

  force.strength = function (_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : strength;
  };

  force.distanceMin = function (_) {
    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);
  };

  force.distanceMax = function (_) {
    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);
  };

  force.theta = function (_) {
    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);
  };

  return force;
}
},{"./constant":"../../node_modules/d3-force/src/constant.js","./jiggle":"../../node_modules/d3-force/src/jiggle.js","d3-quadtree":"../../node_modules/d3-quadtree/src/index.js","./simulation":"../../node_modules/d3-force/src/simulation.js"}],"../../node_modules/d3-force/src/radial.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(radius, x, y) {
  var nodes,
      strength = (0, _constant.default)(0.1),
      strengths,
      radiuses;
  if (typeof radius !== "function") radius = (0, _constant.default)(+radius);
  if (x == null) x = 0;
  if (y == null) y = 0;

  function force(alpha) {
    for (var i = 0, n = nodes.length; i < n; ++i) {
      var node = nodes[i],
          dx = node.x - x || 1e-6,
          dy = node.y - y || 1e-6,
          r = Math.sqrt(dx * dx + dy * dy),
          k = (radiuses[i] - r) * strengths[i] * alpha / r;
      node.vx += dx * k;
      node.vy += dy * k;
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length;
    strengths = new Array(n);
    radiuses = new Array(n);

    for (i = 0; i < n; ++i) {
      radiuses[i] = +radius(nodes[i], i, nodes);
      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);
    }
  }

  force.initialize = function (_) {
    nodes = _, initialize();
  };

  force.strength = function (_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : strength;
  };

  force.radius = function (_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : radius;
  };

  force.x = function (_) {
    return arguments.length ? (x = +_, force) : x;
  };

  force.y = function (_) {
    return arguments.length ? (y = +_, force) : y;
  };

  return force;
}
},{"./constant":"../../node_modules/d3-force/src/constant.js"}],"../../node_modules/d3-force/src/x.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(x) {
  var strength = (0, _constant.default)(0.1),
      nodes,
      strengths,
      xz;
  if (typeof x !== "function") x = (0, _constant.default)(x == null ? 0 : +x);

  function force(alpha) {
    for (var i = 0, n = nodes.length, node; i < n; ++i) {
      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length;
    strengths = new Array(n);
    xz = new Array(n);

    for (i = 0; i < n; ++i) {
      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);
    }
  }

  force.initialize = function (_) {
    nodes = _;
    initialize();
  };

  force.strength = function (_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : strength;
  };

  force.x = function (_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : x;
  };

  return force;
}
},{"./constant":"../../node_modules/d3-force/src/constant.js"}],"../../node_modules/d3-force/src/y.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(y) {
  var strength = (0, _constant.default)(0.1),
      nodes,
      strengths,
      yz;
  if (typeof y !== "function") y = (0, _constant.default)(y == null ? 0 : +y);

  function force(alpha) {
    for (var i = 0, n = nodes.length, node; i < n; ++i) {
      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;
    }
  }

  function initialize() {
    if (!nodes) return;
    var i,
        n = nodes.length;
    strengths = new Array(n);
    yz = new Array(n);

    for (i = 0; i < n; ++i) {
      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);
    }
  }

  force.initialize = function (_) {
    nodes = _;
    initialize();
  };

  force.strength = function (_) {
    return arguments.length ? (strength = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : strength;
  };

  force.y = function (_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : (0, _constant.default)(+_), initialize(), force) : y;
  };

  return force;
}
},{"./constant":"../../node_modules/d3-force/src/constant.js"}],"../../node_modules/d3-force/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "forceCenter", {
  enumerable: true,
  get: function () {
    return _center.default;
  }
});
Object.defineProperty(exports, "forceCollide", {
  enumerable: true,
  get: function () {
    return _collide.default;
  }
});
Object.defineProperty(exports, "forceLink", {
  enumerable: true,
  get: function () {
    return _link.default;
  }
});
Object.defineProperty(exports, "forceManyBody", {
  enumerable: true,
  get: function () {
    return _manyBody.default;
  }
});
Object.defineProperty(exports, "forceRadial", {
  enumerable: true,
  get: function () {
    return _radial.default;
  }
});
Object.defineProperty(exports, "forceSimulation", {
  enumerable: true,
  get: function () {
    return _simulation.default;
  }
});
Object.defineProperty(exports, "forceX", {
  enumerable: true,
  get: function () {
    return _x.default;
  }
});
Object.defineProperty(exports, "forceY", {
  enumerable: true,
  get: function () {
    return _y.default;
  }
});

var _center = _interopRequireDefault(require("./center"));

var _collide = _interopRequireDefault(require("./collide"));

var _link = _interopRequireDefault(require("./link"));

var _manyBody = _interopRequireDefault(require("./manyBody"));

var _radial = _interopRequireDefault(require("./radial"));

var _simulation = _interopRequireDefault(require("./simulation"));

var _x = _interopRequireDefault(require("./x"));

var _y = _interopRequireDefault(require("./y"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./center":"../../node_modules/d3-force/src/center.js","./collide":"../../node_modules/d3-force/src/collide.js","./link":"../../node_modules/d3-force/src/link.js","./manyBody":"../../node_modules/d3-force/src/manyBody.js","./radial":"../../node_modules/d3-force/src/radial.js","./simulation":"../../node_modules/d3-force/src/simulation.js","./x":"../../node_modules/d3-force/src/x.js","./y":"../../node_modules/d3-force/src/y.js"}],"../../node_modules/d3-format/src/formatDecimal.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

// Computes the decimal coefficient and exponent of the specified number x with
// significant digits p, where x is positive and p is in [1, 21] or undefined.
// For example, formatDecimal(1.23) returns ["123", 0].
function _default(x, p) {
  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf("e")) < 0) return null; // NaN, ±Infinity

  var i,
      coefficient = x.slice(0, i); // The string returned by toExponential either has the form \d\.\d+e[-+]\d+
  // (e.g., 1.2e+3) or the form \de[-+]\d+ (e.g., 1e+3).

  return [coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient, +x.slice(i + 1)];
}
},{}],"../../node_modules/d3-format/src/exponent.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _formatDecimal = _interopRequireDefault(require("./formatDecimal.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(x) {
  return x = (0, _formatDecimal.default)(Math.abs(x)), x ? x[1] : NaN;
}
},{"./formatDecimal.js":"../../node_modules/d3-format/src/formatDecimal.js"}],"../../node_modules/d3-format/src/formatGroup.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(grouping, thousands) {
  return function (value, width) {
    var i = value.length,
        t = [],
        j = 0,
        g = grouping[0],
        length = 0;

    while (i > 0 && g > 0) {
      if (length + g + 1 > width) g = Math.max(1, width - length);
      t.push(value.substring(i -= g, i + g));
      if ((length += g + 1) > width) break;
      g = grouping[j = (j + 1) % grouping.length];
    }

    return t.reverse().join(thousands);
  };
}
},{}],"../../node_modules/d3-format/src/formatNumerals.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(numerals) {
  return function (value) {
    return value.replace(/[0-9]/g, function (i) {
      return numerals[+i];
    });
  };
}
},{}],"../../node_modules/d3-format/src/formatSpecifier.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = formatSpecifier;
exports.FormatSpecifier = FormatSpecifier;
// [[fill]align][sign][symbol][0][width][,][.precision][~][type]
var re = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;

function formatSpecifier(specifier) {
  if (!(match = re.exec(specifier))) throw new Error("invalid format: " + specifier);
  var match;
  return new FormatSpecifier({
    fill: match[1],
    align: match[2],
    sign: match[3],
    symbol: match[4],
    zero: match[5],
    width: match[6],
    comma: match[7],
    precision: match[8] && match[8].slice(1),
    trim: match[9],
    type: match[10]
  });
}

formatSpecifier.prototype = FormatSpecifier.prototype; // instanceof

function FormatSpecifier(specifier) {
  this.fill = specifier.fill === undefined ? " " : specifier.fill + "";
  this.align = specifier.align === undefined ? ">" : specifier.align + "";
  this.sign = specifier.sign === undefined ? "-" : specifier.sign + "";
  this.symbol = specifier.symbol === undefined ? "" : specifier.symbol + "";
  this.zero = !!specifier.zero;
  this.width = specifier.width === undefined ? undefined : +specifier.width;
  this.comma = !!specifier.comma;
  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;
  this.trim = !!specifier.trim;
  this.type = specifier.type === undefined ? "" : specifier.type + "";
}

FormatSpecifier.prototype.toString = function () {
  return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (this.width === undefined ? "" : Math.max(1, this.width | 0)) + (this.comma ? "," : "") + (this.precision === undefined ? "" : "." + Math.max(0, this.precision | 0)) + (this.trim ? "~" : "") + this.type;
};
},{}],"../../node_modules/d3-format/src/formatTrim.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.
function _default(s) {
  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {
    switch (s[i]) {
      case ".":
        i0 = i1 = i;
        break;

      case "0":
        if (i0 === 0) i0 = i;
        i1 = i;
        break;

      default:
        if (!+s[i]) break out;
        if (i0 > 0) i0 = 0;
        break;
    }
  }

  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;
}
},{}],"../../node_modules/d3-format/src/formatPrefixAuto.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.prefixExponent = void 0;

var _formatDecimal = _interopRequireDefault(require("./formatDecimal.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var prefixExponent;
exports.prefixExponent = prefixExponent;

function _default(x, p) {
  var d = (0, _formatDecimal.default)(x, p);
  if (!d) return x + "";
  var coefficient = d[0],
      exponent = d[1],
      i = exponent - (exports.prefixExponent = prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,
      n = coefficient.length;
  return i === n ? coefficient : i > n ? coefficient + new Array(i - n + 1).join("0") : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i) : "0." + new Array(1 - i).join("0") + (0, _formatDecimal.default)(x, Math.max(0, p + i - 1))[0]; // less than 1y!
}
},{"./formatDecimal.js":"../../node_modules/d3-format/src/formatDecimal.js"}],"../../node_modules/d3-format/src/formatRounded.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _formatDecimal = _interopRequireDefault(require("./formatDecimal.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(x, p) {
  var d = (0, _formatDecimal.default)(x, p);
  if (!d) return x + "";
  var coefficient = d[0],
      exponent = d[1];
  return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1) : coefficient + new Array(exponent - coefficient.length + 2).join("0");
}
},{"./formatDecimal.js":"../../node_modules/d3-format/src/formatDecimal.js"}],"../../node_modules/d3-format/src/formatTypes.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _formatPrefixAuto = _interopRequireDefault(require("./formatPrefixAuto.js"));

var _formatRounded = _interopRequireDefault(require("./formatRounded.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = {
  "%": function (x, p) {
    return (x * 100).toFixed(p);
  },
  "b": function (x) {
    return Math.round(x).toString(2);
  },
  "c": function (x) {
    return x + "";
  },
  "d": function (x) {
    return Math.round(x).toString(10);
  },
  "e": function (x, p) {
    return x.toExponential(p);
  },
  "f": function (x, p) {
    return x.toFixed(p);
  },
  "g": function (x, p) {
    return x.toPrecision(p);
  },
  "o": function (x) {
    return Math.round(x).toString(8);
  },
  "p": function (x, p) {
    return (0, _formatRounded.default)(x * 100, p);
  },
  "r": _formatRounded.default,
  "s": _formatPrefixAuto.default,
  "X": function (x) {
    return Math.round(x).toString(16).toUpperCase();
  },
  "x": function (x) {
    return Math.round(x).toString(16);
  }
};
exports.default = _default;
},{"./formatPrefixAuto.js":"../../node_modules/d3-format/src/formatPrefixAuto.js","./formatRounded.js":"../../node_modules/d3-format/src/formatRounded.js"}],"../../node_modules/d3-format/src/identity.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return x;
}
},{}],"../../node_modules/d3-format/src/locale.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _exponent = _interopRequireDefault(require("./exponent.js"));

var _formatGroup = _interopRequireDefault(require("./formatGroup.js"));

var _formatNumerals = _interopRequireDefault(require("./formatNumerals.js"));

var _formatSpecifier = _interopRequireDefault(require("./formatSpecifier.js"));

var _formatTrim = _interopRequireDefault(require("./formatTrim.js"));

var _formatTypes = _interopRequireDefault(require("./formatTypes.js"));

var _formatPrefixAuto = require("./formatPrefixAuto.js");

var _identity = _interopRequireDefault(require("./identity.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var map = Array.prototype.map,
    prefixes = ["y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];

function _default(locale) {
  var group = locale.grouping === undefined || locale.thousands === undefined ? _identity.default : (0, _formatGroup.default)(map.call(locale.grouping, Number), locale.thousands + ""),
      currencyPrefix = locale.currency === undefined ? "" : locale.currency[0] + "",
      currencySuffix = locale.currency === undefined ? "" : locale.currency[1] + "",
      decimal = locale.decimal === undefined ? "." : locale.decimal + "",
      numerals = locale.numerals === undefined ? _identity.default : (0, _formatNumerals.default)(map.call(locale.numerals, String)),
      percent = locale.percent === undefined ? "%" : locale.percent + "",
      minus = locale.minus === undefined ? "-" : locale.minus + "",
      nan = locale.nan === undefined ? "NaN" : locale.nan + "";

  function newFormat(specifier) {
    specifier = (0, _formatSpecifier.default)(specifier);
    var fill = specifier.fill,
        align = specifier.align,
        sign = specifier.sign,
        symbol = specifier.symbol,
        zero = specifier.zero,
        width = specifier.width,
        comma = specifier.comma,
        precision = specifier.precision,
        trim = specifier.trim,
        type = specifier.type; // The "n" type is an alias for ",g".

    if (type === "n") comma = true, type = "g"; // The "" type, and any invalid type, is an alias for ".12~g".
    else if (!_formatTypes.default[type]) precision === undefined && (precision = 12), trim = true, type = "g"; // If zero fill is specified, padding goes after sign and before digits.

    if (zero || fill === "0" && align === "=") zero = true, fill = "0", align = "="; // Compute the prefix and suffix.
    // For SI-prefix, the suffix is lazily computed.

    var prefix = symbol === "$" ? currencyPrefix : symbol === "#" && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "",
        suffix = symbol === "$" ? currencySuffix : /[%p]/.test(type) ? percent : ""; // What format function should we use?
    // Is this an integer type?
    // Can this type generate exponential notation?

    var formatType = _formatTypes.default[type],
        maybeSuffix = /[defgprs%]/.test(type); // Set the default precision if not specified,
    // or clamp the specified precision to the supported range.
    // For significant precision, it must be in [1, 21].
    // For fixed precision, it must be in [0, 20].

    precision = precision === undefined ? 6 : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));

    function format(value) {
      var valuePrefix = prefix,
          valueSuffix = suffix,
          i,
          n,
          c;

      if (type === "c") {
        valueSuffix = formatType(value) + valueSuffix;
        value = "";
      } else {
        value = +value; // Perform the initial formatting.

        var valueNegative = value < 0;
        value = isNaN(value) ? nan : formatType(Math.abs(value), precision); // Trim insignificant zeros.

        if (trim) value = (0, _formatTrim.default)(value); // If a negative value rounds to zero during formatting, treat as positive.

        if (valueNegative && +value === 0) valueNegative = false; // Compute the prefix and suffix.

        valuePrefix = (valueNegative ? sign === "(" ? sign : minus : sign === "-" || sign === "(" ? "" : sign) + valuePrefix;
        valueSuffix = (type === "s" ? prefixes[8 + _formatPrefixAuto.prefixExponent / 3] : "") + valueSuffix + (valueNegative && sign === "(" ? ")" : ""); // Break the formatted value into the integer “value” part that can be
        // grouped, and fractional or exponential “suffix” part that is not.

        if (maybeSuffix) {
          i = -1, n = value.length;

          while (++i < n) {
            if (c = value.charCodeAt(i), 48 > c || c > 57) {
              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;
              value = value.slice(0, i);
              break;
            }
          }
        }
      } // If the fill character is not "0", grouping is applied before padding.


      if (comma && !zero) value = group(value, Infinity); // Compute the padding.

      var length = valuePrefix.length + value.length + valueSuffix.length,
          padding = length < width ? new Array(width - length + 1).join(fill) : ""; // If the fill character is "0", grouping is applied after padding.

      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = ""; // Reconstruct the final output based on the desired alignment.

      switch (align) {
        case "<":
          value = valuePrefix + value + valueSuffix + padding;
          break;

        case "=":
          value = valuePrefix + padding + value + valueSuffix;
          break;

        case "^":
          value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);
          break;

        default:
          value = padding + valuePrefix + value + valueSuffix;
          break;
      }

      return numerals(value);
    }

    format.toString = function () {
      return specifier + "";
    };

    return format;
  }

  function formatPrefix(specifier, value) {
    var f = newFormat((specifier = (0, _formatSpecifier.default)(specifier), specifier.type = "f", specifier)),
        e = Math.max(-8, Math.min(8, Math.floor((0, _exponent.default)(value) / 3))) * 3,
        k = Math.pow(10, -e),
        prefix = prefixes[8 + e / 3];
    return function (value) {
      return f(k * value) + prefix;
    };
  }

  return {
    format: newFormat,
    formatPrefix: formatPrefix
  };
}
},{"./exponent.js":"../../node_modules/d3-format/src/exponent.js","./formatGroup.js":"../../node_modules/d3-format/src/formatGroup.js","./formatNumerals.js":"../../node_modules/d3-format/src/formatNumerals.js","./formatSpecifier.js":"../../node_modules/d3-format/src/formatSpecifier.js","./formatTrim.js":"../../node_modules/d3-format/src/formatTrim.js","./formatTypes.js":"../../node_modules/d3-format/src/formatTypes.js","./formatPrefixAuto.js":"../../node_modules/d3-format/src/formatPrefixAuto.js","./identity.js":"../../node_modules/d3-format/src/identity.js"}],"../../node_modules/d3-format/src/defaultLocale.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = defaultLocale;
exports.formatPrefix = exports.format = void 0;

var _locale = _interopRequireDefault(require("./locale.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var locale;
var format;
exports.format = format;
var formatPrefix;
exports.formatPrefix = formatPrefix;
defaultLocale({
  decimal: ".",
  thousands: ",",
  grouping: [3],
  currency: ["$", ""],
  minus: "-"
});

function defaultLocale(definition) {
  locale = (0, _locale.default)(definition);
  exports.format = format = locale.format;
  exports.formatPrefix = formatPrefix = locale.formatPrefix;
  return locale;
}
},{"./locale.js":"../../node_modules/d3-format/src/locale.js"}],"../../node_modules/d3-format/src/precisionFixed.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _exponent = _interopRequireDefault(require("./exponent.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(step) {
  return Math.max(0, -(0, _exponent.default)(Math.abs(step)));
}
},{"./exponent.js":"../../node_modules/d3-format/src/exponent.js"}],"../../node_modules/d3-format/src/precisionPrefix.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _exponent = _interopRequireDefault(require("./exponent.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(step, value) {
  return Math.max(0, Math.max(-8, Math.min(8, Math.floor((0, _exponent.default)(value) / 3))) * 3 - (0, _exponent.default)(Math.abs(step)));
}
},{"./exponent.js":"../../node_modules/d3-format/src/exponent.js"}],"../../node_modules/d3-format/src/precisionRound.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _exponent = _interopRequireDefault(require("./exponent.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(step, max) {
  step = Math.abs(step), max = Math.abs(max) - step;
  return Math.max(0, (0, _exponent.default)(max) - (0, _exponent.default)(step)) + 1;
}
},{"./exponent.js":"../../node_modules/d3-format/src/exponent.js"}],"../../node_modules/d3-format/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "formatDefaultLocale", {
  enumerable: true,
  get: function () {
    return _defaultLocale.default;
  }
});
Object.defineProperty(exports, "format", {
  enumerable: true,
  get: function () {
    return _defaultLocale.format;
  }
});
Object.defineProperty(exports, "formatPrefix", {
  enumerable: true,
  get: function () {
    return _defaultLocale.formatPrefix;
  }
});
Object.defineProperty(exports, "formatLocale", {
  enumerable: true,
  get: function () {
    return _locale.default;
  }
});
Object.defineProperty(exports, "formatSpecifier", {
  enumerable: true,
  get: function () {
    return _formatSpecifier.default;
  }
});
Object.defineProperty(exports, "FormatSpecifier", {
  enumerable: true,
  get: function () {
    return _formatSpecifier.FormatSpecifier;
  }
});
Object.defineProperty(exports, "precisionFixed", {
  enumerable: true,
  get: function () {
    return _precisionFixed.default;
  }
});
Object.defineProperty(exports, "precisionPrefix", {
  enumerable: true,
  get: function () {
    return _precisionPrefix.default;
  }
});
Object.defineProperty(exports, "precisionRound", {
  enumerable: true,
  get: function () {
    return _precisionRound.default;
  }
});

var _defaultLocale = _interopRequireWildcard(require("./defaultLocale.js"));

var _locale = _interopRequireDefault(require("./locale.js"));

var _formatSpecifier = _interopRequireWildcard(require("./formatSpecifier.js"));

var _precisionFixed = _interopRequireDefault(require("./precisionFixed.js"));

var _precisionPrefix = _interopRequireDefault(require("./precisionPrefix.js"));

var _precisionRound = _interopRequireDefault(require("./precisionRound.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./defaultLocale.js":"../../node_modules/d3-format/src/defaultLocale.js","./locale.js":"../../node_modules/d3-format/src/locale.js","./formatSpecifier.js":"../../node_modules/d3-format/src/formatSpecifier.js","./precisionFixed.js":"../../node_modules/d3-format/src/precisionFixed.js","./precisionPrefix.js":"../../node_modules/d3-format/src/precisionPrefix.js","./precisionRound.js":"../../node_modules/d3-format/src/precisionRound.js"}],"../../node_modules/d3-geo/src/adder.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

// Adds floating point numbers with twice the normal precision.
// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and
// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)
// 305–363 (1997).
// Code adapted from GeographicLib by Charles F. F. Karney,
// http://geographiclib.sourceforge.net/
function _default() {
  return new Adder();
}

function Adder() {
  this.reset();
}

Adder.prototype = {
  constructor: Adder,
  reset: function () {
    this.s = // rounded value
    this.t = 0; // exact error
  },
  add: function (y) {
    add(temp, y, this.t);
    add(this, temp.s, this.s);
    if (this.s) this.t += temp.t;else this.s = temp.t;
  },
  valueOf: function () {
    return this.s;
  }
};
var temp = new Adder();

function add(adder, a, b) {
  var x = adder.s = a + b,
      bv = x - a,
      av = x - bv;
  adder.t = a - av + (b - bv);
}
},{}],"../../node_modules/d3-geo/src/math.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.acos = acos;
exports.asin = asin;
exports.haversin = haversin;
exports.tan = exports.sqrt = exports.sign = exports.sin = exports.pow = exports.log = exports.floor = exports.exp = exports.ceil = exports.cos = exports.atan2 = exports.atan = exports.abs = exports.radians = exports.degrees = exports.tau = exports.quarterPi = exports.halfPi = exports.pi = exports.epsilon2 = exports.epsilon = void 0;
var epsilon = 1e-6;
exports.epsilon = epsilon;
var epsilon2 = 1e-12;
exports.epsilon2 = epsilon2;
var pi = Math.PI;
exports.pi = pi;
var halfPi = pi / 2;
exports.halfPi = halfPi;
var quarterPi = pi / 4;
exports.quarterPi = quarterPi;
var tau = pi * 2;
exports.tau = tau;
var degrees = 180 / pi;
exports.degrees = degrees;
var radians = pi / 180;
exports.radians = radians;
var abs = Math.abs;
exports.abs = abs;
var atan = Math.atan;
exports.atan = atan;
var atan2 = Math.atan2;
exports.atan2 = atan2;
var cos = Math.cos;
exports.cos = cos;
var ceil = Math.ceil;
exports.ceil = ceil;
var exp = Math.exp;
exports.exp = exp;
var floor = Math.floor;
exports.floor = floor;
var log = Math.log;
exports.log = log;
var pow = Math.pow;
exports.pow = pow;
var sin = Math.sin;
exports.sin = sin;

var sign = Math.sign || function (x) {
  return x > 0 ? 1 : x < 0 ? -1 : 0;
};

exports.sign = sign;
var sqrt = Math.sqrt;
exports.sqrt = sqrt;
var tan = Math.tan;
exports.tan = tan;

function acos(x) {
  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);
}

function asin(x) {
  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);
}

function haversin(x) {
  return (x = sin(x / 2)) * x;
}
},{}],"../../node_modules/d3-geo/src/noop.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = noop;

function noop() {}
},{}],"../../node_modules/d3-geo/src/stream.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function streamGeometry(geometry, stream) {
  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {
    streamGeometryType[geometry.type](geometry, stream);
  }
}

var streamObjectType = {
  Feature: function (object, stream) {
    streamGeometry(object.geometry, stream);
  },
  FeatureCollection: function (object, stream) {
    var features = object.features,
        i = -1,
        n = features.length;

    while (++i < n) streamGeometry(features[i].geometry, stream);
  }
};
var streamGeometryType = {
  Sphere: function (object, stream) {
    stream.sphere();
  },
  Point: function (object, stream) {
    object = object.coordinates;
    stream.point(object[0], object[1], object[2]);
  },
  MultiPoint: function (object, stream) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);
  },
  LineString: function (object, stream) {
    streamLine(object.coordinates, stream, 0);
  },
  MultiLineString: function (object, stream) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) streamLine(coordinates[i], stream, 0);
  },
  Polygon: function (object, stream) {
    streamPolygon(object.coordinates, stream);
  },
  MultiPolygon: function (object, stream) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) streamPolygon(coordinates[i], stream);
  },
  GeometryCollection: function (object, stream) {
    var geometries = object.geometries,
        i = -1,
        n = geometries.length;

    while (++i < n) streamGeometry(geometries[i], stream);
  }
};

function streamLine(coordinates, stream, closed) {
  var i = -1,
      n = coordinates.length - closed,
      coordinate;
  stream.lineStart();

  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);

  stream.lineEnd();
}

function streamPolygon(coordinates, stream) {
  var i = -1,
      n = coordinates.length;
  stream.polygonStart();

  while (++i < n) streamLine(coordinates[i], stream, 1);

  stream.polygonEnd();
}

function _default(object, stream) {
  if (object && streamObjectType.hasOwnProperty(object.type)) {
    streamObjectType[object.type](object, stream);
  } else {
    streamGeometry(object, stream);
  }
}
},{}],"../../node_modules/d3-geo/src/area.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.areaStream = exports.areaRingSum = void 0;

var _adder = _interopRequireDefault(require("./adder.js"));

var _math = require("./math.js");

var _noop = _interopRequireDefault(require("./noop.js"));

var _stream = _interopRequireDefault(require("./stream.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var areaRingSum = (0, _adder.default)();
exports.areaRingSum = areaRingSum;
var areaSum = (0, _adder.default)(),
    lambda00,
    phi00,
    lambda0,
    cosPhi0,
    sinPhi0;
var areaStream = {
  point: _noop.default,
  lineStart: _noop.default,
  lineEnd: _noop.default,
  polygonStart: function () {
    areaRingSum.reset();
    areaStream.lineStart = areaRingStart;
    areaStream.lineEnd = areaRingEnd;
  },
  polygonEnd: function () {
    var areaRing = +areaRingSum;
    areaSum.add(areaRing < 0 ? _math.tau + areaRing : areaRing);
    this.lineStart = this.lineEnd = this.point = _noop.default;
  },
  sphere: function () {
    areaSum.add(_math.tau);
  }
};
exports.areaStream = areaStream;

function areaRingStart() {
  areaStream.point = areaPointFirst;
}

function areaRingEnd() {
  areaPoint(lambda00, phi00);
}

function areaPointFirst(lambda, phi) {
  areaStream.point = areaPoint;
  lambda00 = lambda, phi00 = phi;
  lambda *= _math.radians, phi *= _math.radians;
  lambda0 = lambda, cosPhi0 = (0, _math.cos)(phi = phi / 2 + _math.quarterPi), sinPhi0 = (0, _math.sin)(phi);
}

function areaPoint(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  phi = phi / 2 + _math.quarterPi; // half the angular distance from south pole
  // Spherical excess E for a spherical triangle with vertices: south pole,
  // previous point, current point.  Uses a formula derived from Cagnoli’s
  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).

  var dLambda = lambda - lambda0,
      sdLambda = dLambda >= 0 ? 1 : -1,
      adLambda = sdLambda * dLambda,
      cosPhi = (0, _math.cos)(phi),
      sinPhi = (0, _math.sin)(phi),
      k = sinPhi0 * sinPhi,
      u = cosPhi0 * cosPhi + k * (0, _math.cos)(adLambda),
      v = k * sdLambda * (0, _math.sin)(adLambda);
  areaRingSum.add((0, _math.atan2)(v, u)); // Advance the previous points.

  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;
}

function _default(object) {
  areaSum.reset();
  (0, _stream.default)(object, areaStream);
  return areaSum * 2;
}
},{"./adder.js":"../../node_modules/d3-geo/src/adder.js","./math.js":"../../node_modules/d3-geo/src/math.js","./noop.js":"../../node_modules/d3-geo/src/noop.js","./stream.js":"../../node_modules/d3-geo/src/stream.js"}],"../../node_modules/d3-geo/src/cartesian.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.spherical = spherical;
exports.cartesian = cartesian;
exports.cartesianDot = cartesianDot;
exports.cartesianCross = cartesianCross;
exports.cartesianAddInPlace = cartesianAddInPlace;
exports.cartesianScale = cartesianScale;
exports.cartesianNormalizeInPlace = cartesianNormalizeInPlace;

var _math = require("./math.js");

function spherical(cartesian) {
  return [(0, _math.atan2)(cartesian[1], cartesian[0]), (0, _math.asin)(cartesian[2])];
}

function cartesian(spherical) {
  var lambda = spherical[0],
      phi = spherical[1],
      cosPhi = (0, _math.cos)(phi);
  return [cosPhi * (0, _math.cos)(lambda), cosPhi * (0, _math.sin)(lambda), (0, _math.sin)(phi)];
}

function cartesianDot(a, b) {
  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
}

function cartesianCross(a, b) {
  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];
} // TODO return a


function cartesianAddInPlace(a, b) {
  a[0] += b[0], a[1] += b[1], a[2] += b[2];
}

function cartesianScale(vector, k) {
  return [vector[0] * k, vector[1] * k, vector[2] * k];
} // TODO return d


function cartesianNormalizeInPlace(d) {
  var l = (0, _math.sqrt)(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);
  d[0] /= l, d[1] /= l, d[2] /= l;
}
},{"./math.js":"../../node_modules/d3-geo/src/math.js"}],"../../node_modules/d3-geo/src/bounds.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _adder = _interopRequireDefault(require("./adder.js"));

var _area = require("./area.js");

var _cartesian = require("./cartesian.js");

var _math = require("./math.js");

var _stream = _interopRequireDefault(require("./stream.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var lambda0,
    phi0,
    lambda1,
    phi1,
    // bounds
lambda2,
    // previous lambda-coordinate
lambda00,
    phi00,
    // first point
p0,
    // previous 3D point
deltaSum = (0, _adder.default)(),
    ranges,
    range;
var boundsStream = {
  point: boundsPoint,
  lineStart: boundsLineStart,
  lineEnd: boundsLineEnd,
  polygonStart: function () {
    boundsStream.point = boundsRingPoint;
    boundsStream.lineStart = boundsRingStart;
    boundsStream.lineEnd = boundsRingEnd;
    deltaSum.reset();

    _area.areaStream.polygonStart();
  },
  polygonEnd: function () {
    _area.areaStream.polygonEnd();

    boundsStream.point = boundsPoint;
    boundsStream.lineStart = boundsLineStart;
    boundsStream.lineEnd = boundsLineEnd;
    if (_area.areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);else if (deltaSum > _math.epsilon) phi1 = 90;else if (deltaSum < -_math.epsilon) phi0 = -90;
    range[0] = lambda0, range[1] = lambda1;
  },
  sphere: function () {
    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);
  }
};

function boundsPoint(lambda, phi) {
  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);
  if (phi < phi0) phi0 = phi;
  if (phi > phi1) phi1 = phi;
}

function linePoint(lambda, phi) {
  var p = (0, _cartesian.cartesian)([lambda * _math.radians, phi * _math.radians]);

  if (p0) {
    var normal = (0, _cartesian.cartesianCross)(p0, p),
        equatorial = [normal[1], -normal[0], 0],
        inflection = (0, _cartesian.cartesianCross)(equatorial, normal);
    (0, _cartesian.cartesianNormalizeInPlace)(inflection);
    inflection = (0, _cartesian.spherical)(inflection);
    var delta = lambda - lambda2,
        sign = delta > 0 ? 1 : -1,
        lambdai = inflection[0] * _math.degrees * sign,
        phii,
        antimeridian = (0, _math.abs)(delta) > 180;

    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {
      phii = inflection[1] * _math.degrees;
      if (phii > phi1) phi1 = phii;
    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {
      phii = -inflection[1] * _math.degrees;
      if (phii < phi0) phi0 = phii;
    } else {
      if (phi < phi0) phi0 = phi;
      if (phi > phi1) phi1 = phi;
    }

    if (antimeridian) {
      if (lambda < lambda2) {
        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;
      } else {
        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;
      }
    } else {
      if (lambda1 >= lambda0) {
        if (lambda < lambda0) lambda0 = lambda;
        if (lambda > lambda1) lambda1 = lambda;
      } else {
        if (lambda > lambda2) {
          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;
        } else {
          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;
        }
      }
    }
  } else {
    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);
  }

  if (phi < phi0) phi0 = phi;
  if (phi > phi1) phi1 = phi;
  p0 = p, lambda2 = lambda;
}

function boundsLineStart() {
  boundsStream.point = linePoint;
}

function boundsLineEnd() {
  range[0] = lambda0, range[1] = lambda1;
  boundsStream.point = boundsPoint;
  p0 = null;
}

function boundsRingPoint(lambda, phi) {
  if (p0) {
    var delta = lambda - lambda2;
    deltaSum.add((0, _math.abs)(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);
  } else {
    lambda00 = lambda, phi00 = phi;
  }

  _area.areaStream.point(lambda, phi);

  linePoint(lambda, phi);
}

function boundsRingStart() {
  _area.areaStream.lineStart();
}

function boundsRingEnd() {
  boundsRingPoint(lambda00, phi00);

  _area.areaStream.lineEnd();

  if ((0, _math.abs)(deltaSum) > _math.epsilon) lambda0 = -(lambda1 = 180);
  range[0] = lambda0, range[1] = lambda1;
  p0 = null;
} // Finds the left-right distance between two longitudes.
// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want
// the distance between ±180° to be 360°.


function angle(lambda0, lambda1) {
  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;
}

function rangeCompare(a, b) {
  return a[0] - b[0];
}

function rangeContains(range, x) {
  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;
}

function _default(feature) {
  var i, n, a, b, merged, deltaMax, delta;
  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);
  ranges = [];
  (0, _stream.default)(feature, boundsStream); // First, sort ranges by their minimum longitudes.

  if (n = ranges.length) {
    ranges.sort(rangeCompare); // Then, merge any ranges that overlap.

    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {
      b = ranges[i];

      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {
        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];
        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];
      } else {
        merged.push(a = b);
      }
    } // Finally, find the largest gap between the merged ranges.
    // The final bounding box will be the inverse of this gap.


    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {
      b = merged[i];
      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];
    }
  }

  ranges = range = null;
  return lambda0 === Infinity || phi0 === Infinity ? [[NaN, NaN], [NaN, NaN]] : [[lambda0, phi0], [lambda1, phi1]];
}
},{"./adder.js":"../../node_modules/d3-geo/src/adder.js","./area.js":"../../node_modules/d3-geo/src/area.js","./cartesian.js":"../../node_modules/d3-geo/src/cartesian.js","./math.js":"../../node_modules/d3-geo/src/math.js","./stream.js":"../../node_modules/d3-geo/src/stream.js"}],"../../node_modules/d3-geo/src/centroid.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _math = require("./math.js");

var _noop = _interopRequireDefault(require("./noop.js"));

var _stream = _interopRequireDefault(require("./stream.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var W0, W1, X0, Y0, Z0, X1, Y1, Z1, X2, Y2, Z2, lambda00, phi00, // first point
x0, y0, z0; // previous point

var centroidStream = {
  sphere: _noop.default,
  point: centroidPoint,
  lineStart: centroidLineStart,
  lineEnd: centroidLineEnd,
  polygonStart: function () {
    centroidStream.lineStart = centroidRingStart;
    centroidStream.lineEnd = centroidRingEnd;
  },
  polygonEnd: function () {
    centroidStream.lineStart = centroidLineStart;
    centroidStream.lineEnd = centroidLineEnd;
  }
}; // Arithmetic mean of Cartesian vectors.

function centroidPoint(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  var cosPhi = (0, _math.cos)(phi);
  centroidPointCartesian(cosPhi * (0, _math.cos)(lambda), cosPhi * (0, _math.sin)(lambda), (0, _math.sin)(phi));
}

function centroidPointCartesian(x, y, z) {
  ++W0;
  X0 += (x - X0) / W0;
  Y0 += (y - Y0) / W0;
  Z0 += (z - Z0) / W0;
}

function centroidLineStart() {
  centroidStream.point = centroidLinePointFirst;
}

function centroidLinePointFirst(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  var cosPhi = (0, _math.cos)(phi);
  x0 = cosPhi * (0, _math.cos)(lambda);
  y0 = cosPhi * (0, _math.sin)(lambda);
  z0 = (0, _math.sin)(phi);
  centroidStream.point = centroidLinePoint;
  centroidPointCartesian(x0, y0, z0);
}

function centroidLinePoint(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  var cosPhi = (0, _math.cos)(phi),
      x = cosPhi * (0, _math.cos)(lambda),
      y = cosPhi * (0, _math.sin)(lambda),
      z = (0, _math.sin)(phi),
      w = (0, _math.atan2)((0, _math.sqrt)((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);
  W1 += w;
  X1 += w * (x0 + (x0 = x));
  Y1 += w * (y0 + (y0 = y));
  Z1 += w * (z0 + (z0 = z));
  centroidPointCartesian(x0, y0, z0);
}

function centroidLineEnd() {
  centroidStream.point = centroidPoint;
} // See J. E. Brock, The Inertia Tensor for a Spherical Triangle,
// J. Applied Mechanics 42, 239 (1975).


function centroidRingStart() {
  centroidStream.point = centroidRingPointFirst;
}

function centroidRingEnd() {
  centroidRingPoint(lambda00, phi00);
  centroidStream.point = centroidPoint;
}

function centroidRingPointFirst(lambda, phi) {
  lambda00 = lambda, phi00 = phi;
  lambda *= _math.radians, phi *= _math.radians;
  centroidStream.point = centroidRingPoint;
  var cosPhi = (0, _math.cos)(phi);
  x0 = cosPhi * (0, _math.cos)(lambda);
  y0 = cosPhi * (0, _math.sin)(lambda);
  z0 = (0, _math.sin)(phi);
  centroidPointCartesian(x0, y0, z0);
}

function centroidRingPoint(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  var cosPhi = (0, _math.cos)(phi),
      x = cosPhi * (0, _math.cos)(lambda),
      y = cosPhi * (0, _math.sin)(lambda),
      z = (0, _math.sin)(phi),
      cx = y0 * z - z0 * y,
      cy = z0 * x - x0 * z,
      cz = x0 * y - y0 * x,
      m = (0, _math.sqrt)(cx * cx + cy * cy + cz * cz),
      w = (0, _math.asin)(m),
      // line weight = angle
  v = m && -w / m; // area weight multiplier

  X2 += v * cx;
  Y2 += v * cy;
  Z2 += v * cz;
  W1 += w;
  X1 += w * (x0 + (x0 = x));
  Y1 += w * (y0 + (y0 = y));
  Z1 += w * (z0 + (z0 = z));
  centroidPointCartesian(x0, y0, z0);
}

function _default(object) {
  W0 = W1 = X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;
  (0, _stream.default)(object, centroidStream);
  var x = X2,
      y = Y2,
      z = Z2,
      m = x * x + y * y + z * z; // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.

  if (m < _math.epsilon2) {
    x = X1, y = Y1, z = Z1; // If the feature has zero length, fall back to arithmetic mean of point vectors.

    if (W1 < _math.epsilon) x = X0, y = Y0, z = Z0;
    m = x * x + y * y + z * z; // If the feature still has an undefined ccentroid, then return.

    if (m < _math.epsilon2) return [NaN, NaN];
  }

  return [(0, _math.atan2)(y, x) * _math.degrees, (0, _math.asin)(z / (0, _math.sqrt)(m)) * _math.degrees];
}
},{"./math.js":"../../node_modules/d3-geo/src/math.js","./noop.js":"../../node_modules/d3-geo/src/noop.js","./stream.js":"../../node_modules/d3-geo/src/stream.js"}],"../../node_modules/d3-geo/src/constant.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return function () {
    return x;
  };
}
},{}],"../../node_modules/d3-geo/src/compose.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  function compose(x, y) {
    return x = a(x, y), b(x[0], x[1]);
  }

  if (a.invert && b.invert) compose.invert = function (x, y) {
    return x = b.invert(x, y), x && a.invert(x[0], x[1]);
  };
  return compose;
}
},{}],"../../node_modules/d3-geo/src/rotation.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.rotateRadians = rotateRadians;
exports.default = _default;

var _compose = _interopRequireDefault(require("./compose.js"));

var _math = require("./math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function rotationIdentity(lambda, phi) {
  return [(0, _math.abs)(lambda) > _math.pi ? lambda + Math.round(-lambda / _math.tau) * _math.tau : lambda, phi];
}

rotationIdentity.invert = rotationIdentity;

function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {
  return (deltaLambda %= _math.tau) ? deltaPhi || deltaGamma ? (0, _compose.default)(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma)) : rotationLambda(deltaLambda) : deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma) : rotationIdentity;
}

function forwardRotationLambda(deltaLambda) {
  return function (lambda, phi) {
    return lambda += deltaLambda, [lambda > _math.pi ? lambda - _math.tau : lambda < -_math.pi ? lambda + _math.tau : lambda, phi];
  };
}

function rotationLambda(deltaLambda) {
  var rotation = forwardRotationLambda(deltaLambda);
  rotation.invert = forwardRotationLambda(-deltaLambda);
  return rotation;
}

function rotationPhiGamma(deltaPhi, deltaGamma) {
  var cosDeltaPhi = (0, _math.cos)(deltaPhi),
      sinDeltaPhi = (0, _math.sin)(deltaPhi),
      cosDeltaGamma = (0, _math.cos)(deltaGamma),
      sinDeltaGamma = (0, _math.sin)(deltaGamma);

  function rotation(lambda, phi) {
    var cosPhi = (0, _math.cos)(phi),
        x = (0, _math.cos)(lambda) * cosPhi,
        y = (0, _math.sin)(lambda) * cosPhi,
        z = (0, _math.sin)(phi),
        k = z * cosDeltaPhi + x * sinDeltaPhi;
    return [(0, _math.atan2)(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi), (0, _math.asin)(k * cosDeltaGamma + y * sinDeltaGamma)];
  }

  rotation.invert = function (lambda, phi) {
    var cosPhi = (0, _math.cos)(phi),
        x = (0, _math.cos)(lambda) * cosPhi,
        y = (0, _math.sin)(lambda) * cosPhi,
        z = (0, _math.sin)(phi),
        k = z * cosDeltaGamma - y * sinDeltaGamma;
    return [(0, _math.atan2)(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi), (0, _math.asin)(k * cosDeltaPhi - x * sinDeltaPhi)];
  };

  return rotation;
}

function _default(rotate) {
  rotate = rotateRadians(rotate[0] * _math.radians, rotate[1] * _math.radians, rotate.length > 2 ? rotate[2] * _math.radians : 0);

  function forward(coordinates) {
    coordinates = rotate(coordinates[0] * _math.radians, coordinates[1] * _math.radians);
    return coordinates[0] *= _math.degrees, coordinates[1] *= _math.degrees, coordinates;
  }

  forward.invert = function (coordinates) {
    coordinates = rotate.invert(coordinates[0] * _math.radians, coordinates[1] * _math.radians);
    return coordinates[0] *= _math.degrees, coordinates[1] *= _math.degrees, coordinates;
  };

  return forward;
}
},{"./compose.js":"../../node_modules/d3-geo/src/compose.js","./math.js":"../../node_modules/d3-geo/src/math.js"}],"../../node_modules/d3-geo/src/circle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.circleStream = circleStream;
exports.default = _default;

var _cartesian = require("./cartesian.js");

var _constant = _interopRequireDefault(require("./constant.js"));

var _math = require("./math.js");

var _rotation = require("./rotation.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Generates a circle centered at [0°, 0°], with a given radius and precision.
function circleStream(stream, radius, delta, direction, t0, t1) {
  if (!delta) return;
  var cosRadius = (0, _math.cos)(radius),
      sinRadius = (0, _math.sin)(radius),
      step = direction * delta;

  if (t0 == null) {
    t0 = radius + direction * _math.tau;
    t1 = radius - step / 2;
  } else {
    t0 = circleRadius(cosRadius, t0);
    t1 = circleRadius(cosRadius, t1);
    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * _math.tau;
  }

  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {
    point = (0, _cartesian.spherical)([cosRadius, -sinRadius * (0, _math.cos)(t), -sinRadius * (0, _math.sin)(t)]);
    stream.point(point[0], point[1]);
  }
} // Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].


function circleRadius(cosRadius, point) {
  point = (0, _cartesian.cartesian)(point), point[0] -= cosRadius;
  (0, _cartesian.cartesianNormalizeInPlace)(point);
  var radius = (0, _math.acos)(-point[1]);
  return ((-point[2] < 0 ? -radius : radius) + _math.tau - _math.epsilon) % _math.tau;
}

function _default() {
  var center = (0, _constant.default)([0, 0]),
      radius = (0, _constant.default)(90),
      precision = (0, _constant.default)(6),
      ring,
      rotate,
      stream = {
    point: point
  };

  function point(x, y) {
    ring.push(x = rotate(x, y));
    x[0] *= _math.degrees, x[1] *= _math.degrees;
  }

  function circle() {
    var c = center.apply(this, arguments),
        r = radius.apply(this, arguments) * _math.radians,
        p = precision.apply(this, arguments) * _math.radians;

    ring = [];
    rotate = (0, _rotation.rotateRadians)(-c[0] * _math.radians, -c[1] * _math.radians, 0).invert;
    circleStream(stream, r, p, 1);
    c = {
      type: "Polygon",
      coordinates: [ring]
    };
    ring = rotate = null;
    return c;
  }

  circle.center = function (_) {
    return arguments.length ? (center = typeof _ === "function" ? _ : (0, _constant.default)([+_[0], +_[1]]), circle) : center;
  };

  circle.radius = function (_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : (0, _constant.default)(+_), circle) : radius;
  };

  circle.precision = function (_) {
    return arguments.length ? (precision = typeof _ === "function" ? _ : (0, _constant.default)(+_), circle) : precision;
  };

  return circle;
}
},{"./cartesian.js":"../../node_modules/d3-geo/src/cartesian.js","./constant.js":"../../node_modules/d3-geo/src/constant.js","./math.js":"../../node_modules/d3-geo/src/math.js","./rotation.js":"../../node_modules/d3-geo/src/rotation.js"}],"../../node_modules/d3-geo/src/clip/buffer.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _noop = _interopRequireDefault(require("../noop.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var lines = [],
      line;
  return {
    point: function (x, y) {
      line.push([x, y]);
    },
    lineStart: function () {
      lines.push(line = []);
    },
    lineEnd: _noop.default,
    rejoin: function () {
      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));
    },
    result: function () {
      var result = lines;
      lines = [];
      line = null;
      return result;
    }
  };
}
},{"../noop.js":"../../node_modules/d3-geo/src/noop.js"}],"../../node_modules/d3-geo/src/pointEqual.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _math = require("./math.js");

function _default(a, b) {
  return (0, _math.abs)(a[0] - b[0]) < _math.epsilon && (0, _math.abs)(a[1] - b[1]) < _math.epsilon;
}
},{"./math.js":"../../node_modules/d3-geo/src/math.js"}],"../../node_modules/d3-geo/src/clip/rejoin.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _pointEqual = _interopRequireDefault(require("../pointEqual.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function Intersection(point, points, other, entry) {
  this.x = point;
  this.z = points;
  this.o = other; // another intersection

  this.e = entry; // is an entry?

  this.v = false; // visited

  this.n = this.p = null; // next & previous
} // A generalized polygon clipping algorithm: given a polygon that has been cut
// into its visible line segments, and rejoins the segments by interpolating
// along the clip edge.


function _default(segments, compareIntersection, startInside, interpolate, stream) {
  var subject = [],
      clip = [],
      i,
      n;
  segments.forEach(function (segment) {
    if ((n = segment.length - 1) <= 0) return;
    var n,
        p0 = segment[0],
        p1 = segment[n],
        x; // If the first and last points of a segment are coincident, then treat as a
    // closed ring. TODO if all rings are closed, then the winding order of the
    // exterior ring should be checked.

    if ((0, _pointEqual.default)(p0, p1)) {
      stream.lineStart();

      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);

      stream.lineEnd();
      return;
    }

    subject.push(x = new Intersection(p0, segment, null, true));
    clip.push(x.o = new Intersection(p0, null, x, false));
    subject.push(x = new Intersection(p1, segment, null, false));
    clip.push(x.o = new Intersection(p1, null, x, true));
  });
  if (!subject.length) return;
  clip.sort(compareIntersection);
  link(subject);
  link(clip);

  for (i = 0, n = clip.length; i < n; ++i) {
    clip[i].e = startInside = !startInside;
  }

  var start = subject[0],
      points,
      point;

  while (1) {
    // Find first unvisited intersection.
    var current = start,
        isSubject = true;

    while (current.v) if ((current = current.n) === start) return;

    points = current.z;
    stream.lineStart();

    do {
      current.v = current.o.v = true;

      if (current.e) {
        if (isSubject) {
          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);
        } else {
          interpolate(current.x, current.n.x, 1, stream);
        }

        current = current.n;
      } else {
        if (isSubject) {
          points = current.p.z;

          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);
        } else {
          interpolate(current.x, current.p.x, -1, stream);
        }

        current = current.p;
      }

      current = current.o;
      points = current.z;
      isSubject = !isSubject;
    } while (!current.v);

    stream.lineEnd();
  }
}

function link(array) {
  if (!(n = array.length)) return;
  var n,
      i = 0,
      a = array[0],
      b;

  while (++i < n) {
    a.n = b = array[i];
    b.p = a;
    a = b;
  }

  a.n = b = array[0];
  b.p = a;
}
},{"../pointEqual.js":"../../node_modules/d3-geo/src/pointEqual.js"}],"../../node_modules/d3-geo/src/polygonContains.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _adder = _interopRequireDefault(require("./adder.js"));

var _cartesian = require("./cartesian.js");

var _math = require("./math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var sum = (0, _adder.default)();

function longitude(point) {
  if ((0, _math.abs)(point[0]) <= _math.pi) return point[0];else return (0, _math.sign)(point[0]) * (((0, _math.abs)(point[0]) + _math.pi) % _math.tau - _math.pi);
}

function _default(polygon, point) {
  var lambda = longitude(point),
      phi = point[1],
      sinPhi = (0, _math.sin)(phi),
      normal = [(0, _math.sin)(lambda), -(0, _math.cos)(lambda), 0],
      angle = 0,
      winding = 0;
  sum.reset();
  if (sinPhi === 1) phi = _math.halfPi + _math.epsilon;else if (sinPhi === -1) phi = -_math.halfPi - _math.epsilon;

  for (var i = 0, n = polygon.length; i < n; ++i) {
    if (!(m = (ring = polygon[i]).length)) continue;
    var ring,
        m,
        point0 = ring[m - 1],
        lambda0 = longitude(point0),
        phi0 = point0[1] / 2 + _math.quarterPi,
        sinPhi0 = (0, _math.sin)(phi0),
        cosPhi0 = (0, _math.cos)(phi0);

    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {
      var point1 = ring[j],
          lambda1 = longitude(point1),
          phi1 = point1[1] / 2 + _math.quarterPi,
          sinPhi1 = (0, _math.sin)(phi1),
          cosPhi1 = (0, _math.cos)(phi1),
          delta = lambda1 - lambda0,
          sign = delta >= 0 ? 1 : -1,
          absDelta = sign * delta,
          antimeridian = absDelta > _math.pi,
          k = sinPhi0 * sinPhi1;
      sum.add((0, _math.atan2)(k * sign * (0, _math.sin)(absDelta), cosPhi0 * cosPhi1 + k * (0, _math.cos)(absDelta)));
      angle += antimeridian ? delta + sign * _math.tau : delta; // Are the longitudes either side of the point’s meridian (lambda),
      // and are the latitudes smaller than the parallel (phi)?

      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {
        var arc = (0, _cartesian.cartesianCross)((0, _cartesian.cartesian)(point0), (0, _cartesian.cartesian)(point1));
        (0, _cartesian.cartesianNormalizeInPlace)(arc);
        var intersection = (0, _cartesian.cartesianCross)(normal, arc);
        (0, _cartesian.cartesianNormalizeInPlace)(intersection);
        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * (0, _math.asin)(intersection[2]);

        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {
          winding += antimeridian ^ delta >= 0 ? 1 : -1;
        }
      }
    }
  } // First, determine whether the South pole is inside or outside:
  //
  // It is inside if:
  // * the polygon winds around it in a clockwise direction.
  // * the polygon does not (cumulatively) wind around it, but has a negative
  //   (counter-clockwise) area.
  //
  // Second, count the (signed) number of times a segment crosses a lambda
  // from the point to the South pole.  If it is zero, then the point is the
  // same side as the South pole.


  return (angle < -_math.epsilon || angle < _math.epsilon && sum < -_math.epsilon) ^ winding & 1;
}
},{"./adder.js":"../../node_modules/d3-geo/src/adder.js","./cartesian.js":"../../node_modules/d3-geo/src/cartesian.js","./math.js":"../../node_modules/d3-geo/src/math.js"}],"../../node_modules/d3-geo/src/clip/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _buffer = _interopRequireDefault(require("./buffer.js"));

var _rejoin = _interopRequireDefault(require("./rejoin.js"));

var _math = require("../math.js");

var _polygonContains = _interopRequireDefault(require("../polygonContains.js"));

var _d3Array = require("d3-array");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(pointVisible, clipLine, interpolate, start) {
  return function (sink) {
    var line = clipLine(sink),
        ringBuffer = (0, _buffer.default)(),
        ringSink = clipLine(ringBuffer),
        polygonStarted = false,
        polygon,
        segments,
        ring;
    var clip = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: function () {
        clip.point = pointRing;
        clip.lineStart = ringStart;
        clip.lineEnd = ringEnd;
        segments = [];
        polygon = [];
      },
      polygonEnd: function () {
        clip.point = point;
        clip.lineStart = lineStart;
        clip.lineEnd = lineEnd;
        segments = (0, _d3Array.merge)(segments);
        var startInside = (0, _polygonContains.default)(polygon, start);

        if (segments.length) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          (0, _rejoin.default)(segments, compareIntersection, startInside, interpolate, sink);
        } else if (startInside) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          sink.lineStart();
          interpolate(null, null, 1, sink);
          sink.lineEnd();
        }

        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;
        segments = polygon = null;
      },
      sphere: function () {
        sink.polygonStart();
        sink.lineStart();
        interpolate(null, null, 1, sink);
        sink.lineEnd();
        sink.polygonEnd();
      }
    };

    function point(lambda, phi) {
      if (pointVisible(lambda, phi)) sink.point(lambda, phi);
    }

    function pointLine(lambda, phi) {
      line.point(lambda, phi);
    }

    function lineStart() {
      clip.point = pointLine;
      line.lineStart();
    }

    function lineEnd() {
      clip.point = point;
      line.lineEnd();
    }

    function pointRing(lambda, phi) {
      ring.push([lambda, phi]);
      ringSink.point(lambda, phi);
    }

    function ringStart() {
      ringSink.lineStart();
      ring = [];
    }

    function ringEnd() {
      pointRing(ring[0][0], ring[0][1]);
      ringSink.lineEnd();
      var clean = ringSink.clean(),
          ringSegments = ringBuffer.result(),
          i,
          n = ringSegments.length,
          m,
          segment,
          point;
      ring.pop();
      polygon.push(ring);
      ring = null;
      if (!n) return; // No intersections.

      if (clean & 1) {
        segment = ringSegments[0];

        if ((m = segment.length - 1) > 0) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          sink.lineStart();

          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);

          sink.lineEnd();
        }

        return;
      } // Rejoin connected segments.
      // TODO reuse ringBuffer.rejoin()?


      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));
      segments.push(ringSegments.filter(validSegment));
    }

    return clip;
  };
}

function validSegment(segment) {
  return segment.length > 1;
} // Intersections are sorted along the clip edge. For both antimeridian cutting
// and circle clipping, the same comparison is used.


function compareIntersection(a, b) {
  return ((a = a.x)[0] < 0 ? a[1] - _math.halfPi - _math.epsilon : _math.halfPi - a[1]) - ((b = b.x)[0] < 0 ? b[1] - _math.halfPi - _math.epsilon : _math.halfPi - b[1]);
}
},{"./buffer.js":"../../node_modules/d3-geo/src/clip/buffer.js","./rejoin.js":"../../node_modules/d3-geo/src/clip/rejoin.js","../math.js":"../../node_modules/d3-geo/src/math.js","../polygonContains.js":"../../node_modules/d3-geo/src/polygonContains.js","d3-array":"../../node_modules/d3-array/src/index.js"}],"../../node_modules/d3-geo/src/clip/antimeridian.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _index = _interopRequireDefault(require("./index.js"));

var _math = require("../math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _index.default)(function () {
  return true;
}, clipAntimeridianLine, clipAntimeridianInterpolate, [-_math.pi, -_math.halfPi]); // Takes a line and cuts into visible segments. Return values: 0 - there were
// intersections or the line was empty; 1 - no intersections; 2 - there were
// intersections, and the first and last segments should be rejoined.


exports.default = _default;

function clipAntimeridianLine(stream) {
  var lambda0 = NaN,
      phi0 = NaN,
      sign0 = NaN,
      clean; // no intersections

  return {
    lineStart: function () {
      stream.lineStart();
      clean = 1;
    },
    point: function (lambda1, phi1) {
      var sign1 = lambda1 > 0 ? _math.pi : -_math.pi,
          delta = (0, _math.abs)(lambda1 - lambda0);

      if ((0, _math.abs)(delta - _math.pi) < _math.epsilon) {
        // line crosses a pole
        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? _math.halfPi : -_math.halfPi);
        stream.point(sign0, phi0);
        stream.lineEnd();
        stream.lineStart();
        stream.point(sign1, phi0);
        stream.point(lambda1, phi0);
        clean = 0;
      } else if (sign0 !== sign1 && delta >= _math.pi) {
        // line crosses antimeridian
        if ((0, _math.abs)(lambda0 - sign0) < _math.epsilon) lambda0 -= sign0 * _math.epsilon; // handle degeneracies

        if ((0, _math.abs)(lambda1 - sign1) < _math.epsilon) lambda1 -= sign1 * _math.epsilon;
        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);
        stream.point(sign0, phi0);
        stream.lineEnd();
        stream.lineStart();
        stream.point(sign1, phi0);
        clean = 0;
      }

      stream.point(lambda0 = lambda1, phi0 = phi1);
      sign0 = sign1;
    },
    lineEnd: function () {
      stream.lineEnd();
      lambda0 = phi0 = NaN;
    },
    clean: function () {
      return 2 - clean; // if intersections, rejoin first and last segments
    }
  };
}

function clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {
  var cosPhi0,
      cosPhi1,
      sinLambda0Lambda1 = (0, _math.sin)(lambda0 - lambda1);
  return (0, _math.abs)(sinLambda0Lambda1) > _math.epsilon ? (0, _math.atan)(((0, _math.sin)(phi0) * (cosPhi1 = (0, _math.cos)(phi1)) * (0, _math.sin)(lambda1) - (0, _math.sin)(phi1) * (cosPhi0 = (0, _math.cos)(phi0)) * (0, _math.sin)(lambda0)) / (cosPhi0 * cosPhi1 * sinLambda0Lambda1)) : (phi0 + phi1) / 2;
}

function clipAntimeridianInterpolate(from, to, direction, stream) {
  var phi;

  if (from == null) {
    phi = direction * _math.halfPi;
    stream.point(-_math.pi, phi);
    stream.point(0, phi);
    stream.point(_math.pi, phi);
    stream.point(_math.pi, 0);
    stream.point(_math.pi, -phi);
    stream.point(0, -phi);
    stream.point(-_math.pi, -phi);
    stream.point(-_math.pi, 0);
    stream.point(-_math.pi, phi);
  } else if ((0, _math.abs)(from[0] - to[0]) > _math.epsilon) {
    var lambda = from[0] < to[0] ? _math.pi : -_math.pi;
    phi = direction * lambda / 2;
    stream.point(-lambda, phi);
    stream.point(0, phi);
    stream.point(lambda, phi);
  } else {
    stream.point(to[0], to[1]);
  }
}
},{"./index.js":"../../node_modules/d3-geo/src/clip/index.js","../math.js":"../../node_modules/d3-geo/src/math.js"}],"../../node_modules/d3-geo/src/clip/circle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _cartesian = require("../cartesian.js");

var _circle = require("../circle.js");

var _math = require("../math.js");

var _pointEqual = _interopRequireDefault(require("../pointEqual.js"));

var _index = _interopRequireDefault(require("./index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(radius) {
  var cr = (0, _math.cos)(radius),
      delta = 6 * _math.radians,
      smallRadius = cr > 0,
      notHemisphere = (0, _math.abs)(cr) > _math.epsilon; // TODO optimise for this common case


  function interpolate(from, to, direction, stream) {
    (0, _circle.circleStream)(stream, radius, delta, direction, from, to);
  }

  function visible(lambda, phi) {
    return (0, _math.cos)(lambda) * (0, _math.cos)(phi) > cr;
  } // Takes a line and cuts into visible segments. Return values used for polygon
  // clipping: 0 - there were intersections or the line was empty; 1 - no
  // intersections 2 - there were intersections, and the first and last segments
  // should be rejoined.


  function clipLine(stream) {
    var point0, // previous point
    c0, // code for previous point
    v0, // visibility of previous point
    v00, // visibility of first point
    clean; // no intersections

    return {
      lineStart: function () {
        v00 = v0 = false;
        clean = 1;
      },
      point: function (lambda, phi) {
        var point1 = [lambda, phi],
            point2,
            v = visible(lambda, phi),
            c = smallRadius ? v ? 0 : code(lambda, phi) : v ? code(lambda + (lambda < 0 ? _math.pi : -_math.pi), phi) : 0;
        if (!point0 && (v00 = v0 = v)) stream.lineStart(); // Handle degeneracies.
        // TODO ignore if not clipping polygons.

        if (v !== v0) {
          point2 = intersect(point0, point1);

          if (!point2 || (0, _pointEqual.default)(point0, point2) || (0, _pointEqual.default)(point1, point2)) {
            point1[0] += _math.epsilon;
            point1[1] += _math.epsilon;
            v = visible(point1[0], point1[1]);
          }
        }

        if (v !== v0) {
          clean = 0;

          if (v) {
            // outside going in
            stream.lineStart();
            point2 = intersect(point1, point0);
            stream.point(point2[0], point2[1]);
          } else {
            // inside going out
            point2 = intersect(point0, point1);
            stream.point(point2[0], point2[1]);
            stream.lineEnd();
          }

          point0 = point2;
        } else if (notHemisphere && point0 && smallRadius ^ v) {
          var t; // If the codes for two points are different, or are both zero,
          // and there this segment intersects with the small circle.

          if (!(c & c0) && (t = intersect(point1, point0, true))) {
            clean = 0;

            if (smallRadius) {
              stream.lineStart();
              stream.point(t[0][0], t[0][1]);
              stream.point(t[1][0], t[1][1]);
              stream.lineEnd();
            } else {
              stream.point(t[1][0], t[1][1]);
              stream.lineEnd();
              stream.lineStart();
              stream.point(t[0][0], t[0][1]);
            }
          }
        }

        if (v && (!point0 || !(0, _pointEqual.default)(point0, point1))) {
          stream.point(point1[0], point1[1]);
        }

        point0 = point1, v0 = v, c0 = c;
      },
      lineEnd: function () {
        if (v0) stream.lineEnd();
        point0 = null;
      },
      // Rejoin first and last segments if there were intersections and the first
      // and last points were visible.
      clean: function () {
        return clean | (v00 && v0) << 1;
      }
    };
  } // Intersects the great circle between a and b with the clip circle.


  function intersect(a, b, two) {
    var pa = (0, _cartesian.cartesian)(a),
        pb = (0, _cartesian.cartesian)(b); // We have two planes, n1.p = d1 and n2.p = d2.
    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).

    var n1 = [1, 0, 0],
        // normal
    n2 = (0, _cartesian.cartesianCross)(pa, pb),
        n2n2 = (0, _cartesian.cartesianDot)(n2, n2),
        n1n2 = n2[0],
        // cartesianDot(n1, n2),
    determinant = n2n2 - n1n2 * n1n2; // Two polar points.

    if (!determinant) return !two && a;
    var c1 = cr * n2n2 / determinant,
        c2 = -cr * n1n2 / determinant,
        n1xn2 = (0, _cartesian.cartesianCross)(n1, n2),
        A = (0, _cartesian.cartesianScale)(n1, c1),
        B = (0, _cartesian.cartesianScale)(n2, c2);
    (0, _cartesian.cartesianAddInPlace)(A, B); // Solve |p(t)|^2 = 1.

    var u = n1xn2,
        w = (0, _cartesian.cartesianDot)(A, u),
        uu = (0, _cartesian.cartesianDot)(u, u),
        t2 = w * w - uu * ((0, _cartesian.cartesianDot)(A, A) - 1);
    if (t2 < 0) return;
    var t = (0, _math.sqrt)(t2),
        q = (0, _cartesian.cartesianScale)(u, (-w - t) / uu);
    (0, _cartesian.cartesianAddInPlace)(q, A);
    q = (0, _cartesian.spherical)(q);
    if (!two) return q; // Two intersection points.

    var lambda0 = a[0],
        lambda1 = b[0],
        phi0 = a[1],
        phi1 = b[1],
        z;
    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;

    var delta = lambda1 - lambda0,
        polar = (0, _math.abs)(delta - _math.pi) < _math.epsilon,
        meridian = polar || delta < _math.epsilon;

    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z; // Check that the first point is between a and b.

    if (meridian ? polar ? phi0 + phi1 > 0 ^ q[1] < ((0, _math.abs)(q[0] - lambda0) < _math.epsilon ? phi0 : phi1) : phi0 <= q[1] && q[1] <= phi1 : delta > _math.pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {
      var q1 = (0, _cartesian.cartesianScale)(u, (-w + t) / uu);
      (0, _cartesian.cartesianAddInPlace)(q1, A);
      return [q, (0, _cartesian.spherical)(q1)];
    }
  } // Generates a 4-bit vector representing the location of a point relative to
  // the small circle's bounding box.


  function code(lambda, phi) {
    var r = smallRadius ? radius : _math.pi - radius,
        code = 0;
    if (lambda < -r) code |= 1; // left
    else if (lambda > r) code |= 2; // right

    if (phi < -r) code |= 4; // below
    else if (phi > r) code |= 8; // above

    return code;
  }

  return (0, _index.default)(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-_math.pi, radius - _math.pi]);
}
},{"../cartesian.js":"../../node_modules/d3-geo/src/cartesian.js","../circle.js":"../../node_modules/d3-geo/src/circle.js","../math.js":"../../node_modules/d3-geo/src/math.js","../pointEqual.js":"../../node_modules/d3-geo/src/pointEqual.js","./index.js":"../../node_modules/d3-geo/src/clip/index.js"}],"../../node_modules/d3-geo/src/clip/line.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b, x0, y0, x1, y1) {
  var ax = a[0],
      ay = a[1],
      bx = b[0],
      by = b[1],
      t0 = 0,
      t1 = 1,
      dx = bx - ax,
      dy = by - ay,
      r;
  r = x0 - ax;
  if (!dx && r > 0) return;
  r /= dx;

  if (dx < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dx > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = x1 - ax;
  if (!dx && r < 0) return;
  r /= dx;

  if (dx < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dx > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  r = y0 - ay;
  if (!dy && r > 0) return;
  r /= dy;

  if (dy < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dy > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = y1 - ay;
  if (!dy && r < 0) return;
  r /= dy;

  if (dy < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dy > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;
  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;
  return true;
}
},{}],"../../node_modules/d3-geo/src/clip/rectangle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = clipRectangle;

var _math = require("../math.js");

var _buffer = _interopRequireDefault(require("./buffer.js"));

var _line = _interopRequireDefault(require("./line.js"));

var _rejoin = _interopRequireDefault(require("./rejoin.js"));

var _d3Array = require("d3-array");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var clipMax = 1e9,
    clipMin = -clipMax; // TODO Use d3-polygon’s polygonContains here for the ring check?
// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?

function clipRectangle(x0, y0, x1, y1) {
  function visible(x, y) {
    return x0 <= x && x <= x1 && y0 <= y && y <= y1;
  }

  function interpolate(from, to, direction, stream) {
    var a = 0,
        a1 = 0;

    if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoint(from, to) < 0 ^ direction > 0) {
      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0); while ((a = (a + direction + 4) % 4) !== a1);
    } else {
      stream.point(to[0], to[1]);
    }
  }

  function corner(p, direction) {
    return (0, _math.abs)(p[0] - x0) < _math.epsilon ? direction > 0 ? 0 : 3 : (0, _math.abs)(p[0] - x1) < _math.epsilon ? direction > 0 ? 2 : 1 : (0, _math.abs)(p[1] - y0) < _math.epsilon ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon
  }

  function compareIntersection(a, b) {
    return comparePoint(a.x, b.x);
  }

  function comparePoint(a, b) {
    var ca = corner(a, 1),
        cb = corner(b, 1);
    return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];
  }

  return function (stream) {
    var activeStream = stream,
        bufferStream = (0, _buffer.default)(),
        segments,
        polygon,
        ring,
        x__,
        y__,
        v__,
        // first point
    x_,
        y_,
        v_,
        // previous point
    first,
        clean;
    var clipStream = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: polygonStart,
      polygonEnd: polygonEnd
    };

    function point(x, y) {
      if (visible(x, y)) activeStream.point(x, y);
    }

    function polygonInside() {
      var winding = 0;

      for (var i = 0, n = polygon.length; i < n; ++i) {
        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {
          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];

          if (a1 <= y1) {
            if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding;
          } else {
            if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding;
          }
        }
      }

      return winding;
    } // Buffer geometry within a polygon and then clip it en masse.


    function polygonStart() {
      activeStream = bufferStream, segments = [], polygon = [], clean = true;
    }

    function polygonEnd() {
      var startInside = polygonInside(),
          cleanInside = clean && startInside,
          visible = (segments = (0, _d3Array.merge)(segments)).length;

      if (cleanInside || visible) {
        stream.polygonStart();

        if (cleanInside) {
          stream.lineStart();
          interpolate(null, null, 1, stream);
          stream.lineEnd();
        }

        if (visible) {
          (0, _rejoin.default)(segments, compareIntersection, startInside, interpolate, stream);
        }

        stream.polygonEnd();
      }

      activeStream = stream, segments = polygon = ring = null;
    }

    function lineStart() {
      clipStream.point = linePoint;
      if (polygon) polygon.push(ring = []);
      first = true;
      v_ = false;
      x_ = y_ = NaN;
    } // TODO rather than special-case polygons, simply handle them separately.
    // Ideally, coincident intersection points should be jittered to avoid
    // clipping issues.


    function lineEnd() {
      if (segments) {
        linePoint(x__, y__);
        if (v__ && v_) bufferStream.rejoin();
        segments.push(bufferStream.result());
      }

      clipStream.point = point;
      if (v_) activeStream.lineEnd();
    }

    function linePoint(x, y) {
      var v = visible(x, y);
      if (polygon) ring.push([x, y]);

      if (first) {
        x__ = x, y__ = y, v__ = v;
        first = false;

        if (v) {
          activeStream.lineStart();
          activeStream.point(x, y);
        }
      } else {
        if (v && v_) activeStream.point(x, y);else {
          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],
              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];

          if ((0, _line.default)(a, b, x0, y0, x1, y1)) {
            if (!v_) {
              activeStream.lineStart();
              activeStream.point(a[0], a[1]);
            }

            activeStream.point(b[0], b[1]);
            if (!v) activeStream.lineEnd();
            clean = false;
          } else if (v) {
            activeStream.lineStart();
            activeStream.point(x, y);
            clean = false;
          }
        }
      }

      x_ = x, y_ = y, v_ = v;
    }

    return clipStream;
  };
}
},{"../math.js":"../../node_modules/d3-geo/src/math.js","./buffer.js":"../../node_modules/d3-geo/src/clip/buffer.js","./line.js":"../../node_modules/d3-geo/src/clip/line.js","./rejoin.js":"../../node_modules/d3-geo/src/clip/rejoin.js","d3-array":"../../node_modules/d3-array/src/index.js"}],"../../node_modules/d3-geo/src/clip/extent.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _rectangle = _interopRequireDefault(require("./rectangle.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var x0 = 0,
      y0 = 0,
      x1 = 960,
      y1 = 500,
      cache,
      cacheStream,
      clip;
  return clip = {
    stream: function (stream) {
      return cache && cacheStream === stream ? cache : cache = (0, _rectangle.default)(x0, y0, x1, y1)(cacheStream = stream);
    },
    extent: function (_) {
      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];
    }
  };
}
},{"./rectangle.js":"../../node_modules/d3-geo/src/clip/rectangle.js"}],"../../node_modules/d3-geo/src/length.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _adder = _interopRequireDefault(require("./adder.js"));

var _math = require("./math.js");

var _noop = _interopRequireDefault(require("./noop.js"));

var _stream = _interopRequireDefault(require("./stream.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var lengthSum = (0, _adder.default)(),
    lambda0,
    sinPhi0,
    cosPhi0;
var lengthStream = {
  sphere: _noop.default,
  point: _noop.default,
  lineStart: lengthLineStart,
  lineEnd: _noop.default,
  polygonStart: _noop.default,
  polygonEnd: _noop.default
};

function lengthLineStart() {
  lengthStream.point = lengthPointFirst;
  lengthStream.lineEnd = lengthLineEnd;
}

function lengthLineEnd() {
  lengthStream.point = lengthStream.lineEnd = _noop.default;
}

function lengthPointFirst(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  lambda0 = lambda, sinPhi0 = (0, _math.sin)(phi), cosPhi0 = (0, _math.cos)(phi);
  lengthStream.point = lengthPoint;
}

function lengthPoint(lambda, phi) {
  lambda *= _math.radians, phi *= _math.radians;
  var sinPhi = (0, _math.sin)(phi),
      cosPhi = (0, _math.cos)(phi),
      delta = (0, _math.abs)(lambda - lambda0),
      cosDelta = (0, _math.cos)(delta),
      sinDelta = (0, _math.sin)(delta),
      x = cosPhi * sinDelta,
      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,
      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;
  lengthSum.add((0, _math.atan2)((0, _math.sqrt)(x * x + y * y), z));
  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;
}

function _default(object) {
  lengthSum.reset();
  (0, _stream.default)(object, lengthStream);
  return +lengthSum;
}
},{"./adder.js":"../../node_modules/d3-geo/src/adder.js","./math.js":"../../node_modules/d3-geo/src/math.js","./noop.js":"../../node_modules/d3-geo/src/noop.js","./stream.js":"../../node_modules/d3-geo/src/stream.js"}],"../../node_modules/d3-geo/src/distance.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _length = _interopRequireDefault(require("./length.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var coordinates = [null, null],
    object = {
  type: "LineString",
  coordinates: coordinates
};

function _default(a, b) {
  coordinates[0] = a;
  coordinates[1] = b;
  return (0, _length.default)(object);
}
},{"./length.js":"../../node_modules/d3-geo/src/length.js"}],"../../node_modules/d3-geo/src/contains.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _polygonContains = _interopRequireDefault(require("./polygonContains.js"));

var _distance = _interopRequireDefault(require("./distance.js"));

var _math = require("./math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var containsObjectType = {
  Feature: function (object, point) {
    return containsGeometry(object.geometry, point);
  },
  FeatureCollection: function (object, point) {
    var features = object.features,
        i = -1,
        n = features.length;

    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;

    return false;
  }
};
var containsGeometryType = {
  Sphere: function () {
    return true;
  },
  Point: function (object, point) {
    return containsPoint(object.coordinates, point);
  },
  MultiPoint: function (object, point) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) if (containsPoint(coordinates[i], point)) return true;

    return false;
  },
  LineString: function (object, point) {
    return containsLine(object.coordinates, point);
  },
  MultiLineString: function (object, point) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) if (containsLine(coordinates[i], point)) return true;

    return false;
  },
  Polygon: function (object, point) {
    return containsPolygon(object.coordinates, point);
  },
  MultiPolygon: function (object, point) {
    var coordinates = object.coordinates,
        i = -1,
        n = coordinates.length;

    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;

    return false;
  },
  GeometryCollection: function (object, point) {
    var geometries = object.geometries,
        i = -1,
        n = geometries.length;

    while (++i < n) if (containsGeometry(geometries[i], point)) return true;

    return false;
  }
};

function containsGeometry(geometry, point) {
  return geometry && containsGeometryType.hasOwnProperty(geometry.type) ? containsGeometryType[geometry.type](geometry, point) : false;
}

function containsPoint(coordinates, point) {
  return (0, _distance.default)(coordinates, point) === 0;
}

function containsLine(coordinates, point) {
  var ao, bo, ab;

  for (var i = 0, n = coordinates.length; i < n; i++) {
    bo = (0, _distance.default)(coordinates[i], point);
    if (bo === 0) return true;

    if (i > 0) {
      ab = (0, _distance.default)(coordinates[i], coordinates[i - 1]);
      if (ab > 0 && ao <= ab && bo <= ab && (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < _math.epsilon2 * ab) return true;
    }

    ao = bo;
  }

  return false;
}

function containsPolygon(coordinates, point) {
  return !!(0, _polygonContains.default)(coordinates.map(ringRadians), pointRadians(point));
}

function ringRadians(ring) {
  return ring = ring.map(pointRadians), ring.pop(), ring;
}

function pointRadians(point) {
  return [point[0] * _math.radians, point[1] * _math.radians];
}

function _default(object, point) {
  return (object && containsObjectType.hasOwnProperty(object.type) ? containsObjectType[object.type] : containsGeometry)(object, point);
}
},{"./polygonContains.js":"../../node_modules/d3-geo/src/polygonContains.js","./distance.js":"../../node_modules/d3-geo/src/distance.js","./math.js":"../../node_modules/d3-geo/src/math.js"}],"../../node_modules/d3-geo/src/graticule.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = graticule;
exports.graticule10 = graticule10;

var _d3Array = require("d3-array");

var _math = require("./math.js");

function graticuleX(y0, y1, dy) {
  var y = (0, _d3Array.range)(y0, y1 - _math.epsilon, dy).concat(y1);
  return function (x) {
    return y.map(function (y) {
      return [x, y];
    });
  };
}

function graticuleY(x0, x1, dx) {
  var x = (0, _d3Array.range)(x0, x1 - _math.epsilon, dx).concat(x1);
  return function (y) {
    return x.map(function (x) {
      return [x, y];
    });
  };
}

function graticule() {
  var x1,
      x0,
      X1,
      X0,
      y1,
      y0,
      Y1,
      Y0,
      dx = 10,
      dy = dx,
      DX = 90,
      DY = 360,
      x,
      y,
      X,
      Y,
      precision = 2.5;

  function graticule() {
    return {
      type: "MultiLineString",
      coordinates: lines()
    };
  }

  function lines() {
    return (0, _d3Array.range)((0, _math.ceil)(X0 / DX) * DX, X1, DX).map(X).concat((0, _d3Array.range)((0, _math.ceil)(Y0 / DY) * DY, Y1, DY).map(Y)).concat((0, _d3Array.range)((0, _math.ceil)(x0 / dx) * dx, x1, dx).filter(function (x) {
      return (0, _math.abs)(x % DX) > _math.epsilon;
    }).map(x)).concat((0, _d3Array.range)((0, _math.ceil)(y0 / dy) * dy, y1, dy).filter(function (y) {
      return (0, _math.abs)(y % DY) > _math.epsilon;
    }).map(y));
  }

  graticule.lines = function () {
    return lines().map(function (coordinates) {
      return {
        type: "LineString",
        coordinates: coordinates
      };
    });
  };

  graticule.outline = function () {
    return {
      type: "Polygon",
      coordinates: [X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1))]
    };
  };

  graticule.extent = function (_) {
    if (!arguments.length) return graticule.extentMinor();
    return graticule.extentMajor(_).extentMinor(_);
  };

  graticule.extentMajor = function (_) {
    if (!arguments.length) return [[X0, Y0], [X1, Y1]];
    X0 = +_[0][0], X1 = +_[1][0];
    Y0 = +_[0][1], Y1 = +_[1][1];
    if (X0 > X1) _ = X0, X0 = X1, X1 = _;
    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;
    return graticule.precision(precision);
  };

  graticule.extentMinor = function (_) {
    if (!arguments.length) return [[x0, y0], [x1, y1]];
    x0 = +_[0][0], x1 = +_[1][0];
    y0 = +_[0][1], y1 = +_[1][1];
    if (x0 > x1) _ = x0, x0 = x1, x1 = _;
    if (y0 > y1) _ = y0, y0 = y1, y1 = _;
    return graticule.precision(precision);
  };

  graticule.step = function (_) {
    if (!arguments.length) return graticule.stepMinor();
    return graticule.stepMajor(_).stepMinor(_);
  };

  graticule.stepMajor = function (_) {
    if (!arguments.length) return [DX, DY];
    DX = +_[0], DY = +_[1];
    return graticule;
  };

  graticule.stepMinor = function (_) {
    if (!arguments.length) return [dx, dy];
    dx = +_[0], dy = +_[1];
    return graticule;
  };

  graticule.precision = function (_) {
    if (!arguments.length) return precision;
    precision = +_;
    x = graticuleX(y0, y1, 90);
    y = graticuleY(x0, x1, precision);
    X = graticuleX(Y0, Y1, 90);
    Y = graticuleY(X0, X1, precision);
    return graticule;
  };

  return graticule.extentMajor([[-180, -90 + _math.epsilon], [180, 90 - _math.epsilon]]).extentMinor([[-180, -80 - _math.epsilon], [180, 80 + _math.epsilon]]);
}

function graticule10() {
  return graticule()();
}
},{"d3-array":"../../node_modules/d3-array/src/index.js","./math.js":"../../node_modules/d3-geo/src/math.js"}],"../../node_modules/d3-geo/src/interpolate.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _math = require("./math.js");

function _default(a, b) {
  var x0 = a[0] * _math.radians,
      y0 = a[1] * _math.radians,
      x1 = b[0] * _math.radians,
      y1 = b[1] * _math.radians,
      cy0 = (0, _math.cos)(y0),
      sy0 = (0, _math.sin)(y0),
      cy1 = (0, _math.cos)(y1),
      sy1 = (0, _math.sin)(y1),
      kx0 = cy0 * (0, _math.cos)(x0),
      ky0 = cy0 * (0, _math.sin)(x0),
      kx1 = cy1 * (0, _math.cos)(x1),
      ky1 = cy1 * (0, _math.sin)(x1),
      d = 2 * (0, _math.asin)((0, _math.sqrt)((0, _math.haversin)(y1 - y0) + cy0 * cy1 * (0, _math.haversin)(x1 - x0))),
      k = (0, _math.sin)(d);
  var interpolate = d ? function (t) {
    var B = (0, _math.sin)(t *= d) / k,
        A = (0, _math.sin)(d - t) / k,
        x = A * kx0 + B * kx1,
        y = A * ky0 + B * ky1,
        z = A * sy0 + B * sy1;
    return [(0, _math.atan2)(y, x) * _math.degrees, (0, _math.atan2)(z, (0, _math.sqrt)(x * x + y * y)) * _math.degrees];
  } : function () {
    return [x0 * _math.degrees, y0 * _math.degrees];
  };
  interpolate.distance = d;
  return interpolate;
}
},{"./math.js":"../../node_modules/d3-geo/src/math.js"}],"../../node_modules/d3-geo/src/identity.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return x;
}
},{}],"../../node_modules/d3-geo/src/path/area.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _adder = _interopRequireDefault(require("../adder.js"));

var _math = require("../math.js");

var _noop = _interopRequireDefault(require("../noop.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var areaSum = (0, _adder.default)(),
    areaRingSum = (0, _adder.default)(),
    x00,
    y00,
    x0,
    y0;
var areaStream = {
  point: _noop.default,
  lineStart: _noop.default,
  lineEnd: _noop.default,
  polygonStart: function () {
    areaStream.lineStart = areaRingStart;
    areaStream.lineEnd = areaRingEnd;
  },
  polygonEnd: function () {
    areaStream.lineStart = areaStream.lineEnd = areaStream.point = _noop.default;
    areaSum.add((0, _math.abs)(areaRingSum));
    areaRingSum.reset();
  },
  result: function () {
    var area = areaSum / 2;
    areaSum.reset();
    return area;
  }
};

function areaRingStart() {
  areaStream.point = areaPointFirst;
}

function areaPointFirst(x, y) {
  areaStream.point = areaPoint;
  x00 = x0 = x, y00 = y0 = y;
}

function areaPoint(x, y) {
  areaRingSum.add(y0 * x - x0 * y);
  x0 = x, y0 = y;
}

function areaRingEnd() {
  areaPoint(x00, y00);
}

var _default = areaStream;
exports.default = _default;
},{"../adder.js":"../../node_modules/d3-geo/src/adder.js","../math.js":"../../node_modules/d3-geo/src/math.js","../noop.js":"../../node_modules/d3-geo/src/noop.js"}],"../../node_modules/d3-geo/src/path/bounds.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _noop = _interopRequireDefault(require("../noop.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var x0 = Infinity,
    y0 = x0,
    x1 = -x0,
    y1 = x1;
var boundsStream = {
  point: boundsPoint,
  lineStart: _noop.default,
  lineEnd: _noop.default,
  polygonStart: _noop.default,
  polygonEnd: _noop.default,
  result: function () {
    var bounds = [[x0, y0], [x1, y1]];
    x1 = y1 = -(y0 = x0 = Infinity);
    return bounds;
  }
};

function boundsPoint(x, y) {
  if (x < x0) x0 = x;
  if (x > x1) x1 = x;
  if (y < y0) y0 = y;
  if (y > y1) y1 = y;
}

var _default = boundsStream;
exports.default = _default;
},{"../noop.js":"../../node_modules/d3-geo/src/noop.js"}],"../../node_modules/d3-geo/src/path/centroid.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _math = require("../math.js");

// TODO Enforce positive area for exterior, negative area for interior?
var X0 = 0,
    Y0 = 0,
    Z0 = 0,
    X1 = 0,
    Y1 = 0,
    Z1 = 0,
    X2 = 0,
    Y2 = 0,
    Z2 = 0,
    x00,
    y00,
    x0,
    y0;
var centroidStream = {
  point: centroidPoint,
  lineStart: centroidLineStart,
  lineEnd: centroidLineEnd,
  polygonStart: function () {
    centroidStream.lineStart = centroidRingStart;
    centroidStream.lineEnd = centroidRingEnd;
  },
  polygonEnd: function () {
    centroidStream.point = centroidPoint;
    centroidStream.lineStart = centroidLineStart;
    centroidStream.lineEnd = centroidLineEnd;
  },
  result: function () {
    var centroid = Z2 ? [X2 / Z2, Y2 / Z2] : Z1 ? [X1 / Z1, Y1 / Z1] : Z0 ? [X0 / Z0, Y0 / Z0] : [NaN, NaN];
    X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;
    return centroid;
  }
};

function centroidPoint(x, y) {
  X0 += x;
  Y0 += y;
  ++Z0;
}

function centroidLineStart() {
  centroidStream.point = centroidPointFirstLine;
}

function centroidPointFirstLine(x, y) {
  centroidStream.point = centroidPointLine;
  centroidPoint(x0 = x, y0 = y);
}

function centroidPointLine(x, y) {
  var dx = x - x0,
      dy = y - y0,
      z = (0, _math.sqrt)(dx * dx + dy * dy);
  X1 += z * (x0 + x) / 2;
  Y1 += z * (y0 + y) / 2;
  Z1 += z;
  centroidPoint(x0 = x, y0 = y);
}

function centroidLineEnd() {
  centroidStream.point = centroidPoint;
}

function centroidRingStart() {
  centroidStream.point = centroidPointFirstRing;
}

function centroidRingEnd() {
  centroidPointRing(x00, y00);
}

function centroidPointFirstRing(x, y) {
  centroidStream.point = centroidPointRing;
  centroidPoint(x00 = x0 = x, y00 = y0 = y);
}

function centroidPointRing(x, y) {
  var dx = x - x0,
      dy = y - y0,
      z = (0, _math.sqrt)(dx * dx + dy * dy);
  X1 += z * (x0 + x) / 2;
  Y1 += z * (y0 + y) / 2;
  Z1 += z;
  z = y0 * x - x0 * y;
  X2 += z * (x0 + x);
  Y2 += z * (y0 + y);
  Z2 += z * 3;
  centroidPoint(x0 = x, y0 = y);
}

var _default = centroidStream;
exports.default = _default;
},{"../math.js":"../../node_modules/d3-geo/src/math.js"}],"../../node_modules/d3-geo/src/path/context.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = PathContext;

var _math = require("../math.js");

var _noop = _interopRequireDefault(require("../noop.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function PathContext(context) {
  this._context = context;
}

PathContext.prototype = {
  _radius: 4.5,
  pointRadius: function (_) {
    return this._radius = _, this;
  },
  polygonStart: function () {
    this._line = 0;
  },
  polygonEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._point = 0;
  },
  lineEnd: function () {
    if (this._line === 0) this._context.closePath();
    this._point = NaN;
  },
  point: function (x, y) {
    switch (this._point) {
      case 0:
        {
          this._context.moveTo(x, y);

          this._point = 1;
          break;
        }

      case 1:
        {
          this._context.lineTo(x, y);

          break;
        }

      default:
        {
          this._context.moveTo(x + this._radius, y);

          this._context.arc(x, y, this._radius, 0, _math.tau);

          break;
        }
    }
  },
  result: _noop.default
};
},{"../math.js":"../../node_modules/d3-geo/src/math.js","../noop.js":"../../node_modules/d3-geo/src/noop.js"}],"../../node_modules/d3-geo/src/path/measure.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _adder = _interopRequireDefault(require("../adder.js"));

var _math = require("../math.js");

var _noop = _interopRequireDefault(require("../noop.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var lengthSum = (0, _adder.default)(),
    lengthRing,
    x00,
    y00,
    x0,
    y0;
var lengthStream = {
  point: _noop.default,
  lineStart: function () {
    lengthStream.point = lengthPointFirst;
  },
  lineEnd: function () {
    if (lengthRing) lengthPoint(x00, y00);
    lengthStream.point = _noop.default;
  },
  polygonStart: function () {
    lengthRing = true;
  },
  polygonEnd: function () {
    lengthRing = null;
  },
  result: function () {
    var length = +lengthSum;
    lengthSum.reset();
    return length;
  }
};

function lengthPointFirst(x, y) {
  lengthStream.point = lengthPoint;
  x00 = x0 = x, y00 = y0 = y;
}

function lengthPoint(x, y) {
  x0 -= x, y0 -= y;
  lengthSum.add((0, _math.sqrt)(x0 * x0 + y0 * y0));
  x0 = x, y0 = y;
}

var _default = lengthStream;
exports.default = _default;
},{"../adder.js":"../../node_modules/d3-geo/src/adder.js","../math.js":"../../node_modules/d3-geo/src/math.js","../noop.js":"../../node_modules/d3-geo/src/noop.js"}],"../../node_modules/d3-geo/src/path/string.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = PathString;

function PathString() {
  this._string = [];
}

PathString.prototype = {
  _radius: 4.5,
  _circle: circle(4.5),
  pointRadius: function (_) {
    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;
    return this;
  },
  polygonStart: function () {
    this._line = 0;
  },
  polygonEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._point = 0;
  },
  lineEnd: function () {
    if (this._line === 0) this._string.push("Z");
    this._point = NaN;
  },
  point: function (x, y) {
    switch (this._point) {
      case 0:
        {
          this._string.push("M", x, ",", y);

          this._point = 1;
          break;
        }

      case 1:
        {
          this._string.push("L", x, ",", y);

          break;
        }

      default:
        {
          if (this._circle == null) this._circle = circle(this._radius);

          this._string.push("M", x, ",", y, this._circle);

          break;
        }
    }
  },
  result: function () {
    if (this._string.length) {
      var result = this._string.join("");

      this._string = [];
      return result;
    } else {
      return null;
    }
  }
};

function circle(radius) {
  return "m0," + radius + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius + "z";
}
},{}],"../../node_modules/d3-geo/src/path/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _identity = _interopRequireDefault(require("../identity.js"));

var _stream = _interopRequireDefault(require("../stream.js"));

var _area = _interopRequireDefault(require("./area.js"));

var _bounds = _interopRequireDefault(require("./bounds.js"));

var _centroid = _interopRequireDefault(require("./centroid.js"));

var _context = _interopRequireDefault(require("./context.js"));

var _measure = _interopRequireDefault(require("./measure.js"));

var _string = _interopRequireDefault(require("./string.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(projection, context) {
  var pointRadius = 4.5,
      projectionStream,
      contextStream;

  function path(object) {
    if (object) {
      if (typeof pointRadius === "function") contextStream.pointRadius(+pointRadius.apply(this, arguments));
      (0, _stream.default)(object, projectionStream(contextStream));
    }

    return contextStream.result();
  }

  path.area = function (object) {
    (0, _stream.default)(object, projectionStream(_area.default));
    return _area.default.result();
  };

  path.measure = function (object) {
    (0, _stream.default)(object, projectionStream(_measure.default));
    return _measure.default.result();
  };

  path.bounds = function (object) {
    (0, _stream.default)(object, projectionStream(_bounds.default));
    return _bounds.default.result();
  };

  path.centroid = function (object) {
    (0, _stream.default)(object, projectionStream(_centroid.default));
    return _centroid.default.result();
  };

  path.projection = function (_) {
    return arguments.length ? (projectionStream = _ == null ? (projection = null, _identity.default) : (projection = _).stream, path) : projection;
  };

  path.context = function (_) {
    if (!arguments.length) return context;
    contextStream = _ == null ? (context = null, new _string.default()) : new _context.default(context = _);
    if (typeof pointRadius !== "function") contextStream.pointRadius(pointRadius);
    return path;
  };

  path.pointRadius = function (_) {
    if (!arguments.length) return pointRadius;
    pointRadius = typeof _ === "function" ? _ : (contextStream.pointRadius(+_), +_);
    return path;
  };

  return path.projection(projection).context(context);
}
},{"../identity.js":"../../node_modules/d3-geo/src/identity.js","../stream.js":"../../node_modules/d3-geo/src/stream.js","./area.js":"../../node_modules/d3-geo/src/path/area.js","./bounds.js":"../../node_modules/d3-geo/src/path/bounds.js","./centroid.js":"../../node_modules/d3-geo/src/path/centroid.js","./context.js":"../../node_modules/d3-geo/src/path/context.js","./measure.js":"../../node_modules/d3-geo/src/path/measure.js","./string.js":"../../node_modules/d3-geo/src/path/string.js"}],"../../node_modules/d3-geo/src/transform.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.transformer = transformer;

function _default(methods) {
  return {
    stream: transformer(methods)
  };
}

function transformer(methods) {
  return function (stream) {
    var s = new TransformStream();

    for (var key in methods) s[key] = methods[key];

    s.stream = stream;
    return s;
  };
}

function TransformStream() {}

TransformStream.prototype = {
  constructor: TransformStream,
  point: function (x, y) {
    this.stream.point(x, y);
  },
  sphere: function () {
    this.stream.sphere();
  },
  lineStart: function () {
    this.stream.lineStart();
  },
  lineEnd: function () {
    this.stream.lineEnd();
  },
  polygonStart: function () {
    this.stream.polygonStart();
  },
  polygonEnd: function () {
    this.stream.polygonEnd();
  }
};
},{}],"../../node_modules/d3-geo/src/projection/fit.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.fitExtent = fitExtent;
exports.fitSize = fitSize;
exports.fitWidth = fitWidth;
exports.fitHeight = fitHeight;

var _stream = _interopRequireDefault(require("../stream.js"));

var _bounds = _interopRequireDefault(require("../path/bounds.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function fit(projection, fitBounds, object) {
  var clip = projection.clipExtent && projection.clipExtent();
  projection.scale(150).translate([0, 0]);
  if (clip != null) projection.clipExtent(null);
  (0, _stream.default)(object, projection.stream(_bounds.default));
  fitBounds(_bounds.default.result());
  if (clip != null) projection.clipExtent(clip);
  return projection;
}

function fitExtent(projection, extent, object) {
  return fit(projection, function (b) {
    var w = extent[1][0] - extent[0][0],
        h = extent[1][1] - extent[0][1],
        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),
        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,
        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;
    projection.scale(150 * k).translate([x, y]);
  }, object);
}

function fitSize(projection, size, object) {
  return fitExtent(projection, [[0, 0], size], object);
}

function fitWidth(projection, width, object) {
  return fit(projection, function (b) {
    var w = +width,
        k = w / (b[1][0] - b[0][0]),
        x = (w - k * (b[1][0] + b[0][0])) / 2,
        y = -k * b[0][1];
    projection.scale(150 * k).translate([x, y]);
  }, object);
}

function fitHeight(projection, height, object) {
  return fit(projection, function (b) {
    var h = +height,
        k = h / (b[1][1] - b[0][1]),
        x = -k * b[0][0],
        y = (h - k * (b[1][1] + b[0][1])) / 2;
    projection.scale(150 * k).translate([x, y]);
  }, object);
}
},{"../stream.js":"../../node_modules/d3-geo/src/stream.js","../path/bounds.js":"../../node_modules/d3-geo/src/path/bounds.js"}],"../../node_modules/d3-geo/src/projection/resample.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _cartesian = require("../cartesian.js");

var _math = require("../math.js");

var _transform = require("../transform.js");

var maxDepth = 16,
    // maximum depth of subdivision
cosMinDistance = (0, _math.cos)(30 * _math.radians); // cos(minimum angular distance)

function _default(project, delta2) {
  return +delta2 ? resample(project, delta2) : resampleNone(project);
}

function resampleNone(project) {
  return (0, _transform.transformer)({
    point: function (x, y) {
      x = project(x, y);
      this.stream.point(x[0], x[1]);
    }
  });
}

function resample(project, delta2) {
  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {
    var dx = x1 - x0,
        dy = y1 - y0,
        d2 = dx * dx + dy * dy;

    if (d2 > 4 * delta2 && depth--) {
      var a = a0 + a1,
          b = b0 + b1,
          c = c0 + c1,
          m = (0, _math.sqrt)(a * a + b * b + c * c),
          phi2 = (0, _math.asin)(c /= m),
          lambda2 = (0, _math.abs)((0, _math.abs)(c) - 1) < _math.epsilon || (0, _math.abs)(lambda0 - lambda1) < _math.epsilon ? (lambda0 + lambda1) / 2 : (0, _math.atan2)(b, a),
          p = project(lambda2, phi2),
          x2 = p[0],
          y2 = p[1],
          dx2 = x2 - x0,
          dy2 = y2 - y0,
          dz = dy * dx2 - dx * dy2;

      if (dz * dz / d2 > delta2 // perpendicular projected distance
      || (0, _math.abs)((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end
      || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {
        // angular distance
        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);
        stream.point(x2, y2);
        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);
      }
    }
  }

  return function (stream) {
    var lambda00, x00, y00, a00, b00, c00, // first point
    lambda0, x0, y0, a0, b0, c0; // previous point

    var resampleStream = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: function () {
        stream.polygonStart();
        resampleStream.lineStart = ringStart;
      },
      polygonEnd: function () {
        stream.polygonEnd();
        resampleStream.lineStart = lineStart;
      }
    };

    function point(x, y) {
      x = project(x, y);
      stream.point(x[0], x[1]);
    }

    function lineStart() {
      x0 = NaN;
      resampleStream.point = linePoint;
      stream.lineStart();
    }

    function linePoint(lambda, phi) {
      var c = (0, _cartesian.cartesian)([lambda, phi]),
          p = project(lambda, phi);
      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);
      stream.point(x0, y0);
    }

    function lineEnd() {
      resampleStream.point = point;
      stream.lineEnd();
    }

    function ringStart() {
      lineStart();
      resampleStream.point = ringPoint;
      resampleStream.lineEnd = ringEnd;
    }

    function ringPoint(lambda, phi) {
      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;
      resampleStream.point = linePoint;
    }

    function ringEnd() {
      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);
      resampleStream.lineEnd = lineEnd;
      lineEnd();
    }

    return resampleStream;
  };
}
},{"../cartesian.js":"../../node_modules/d3-geo/src/cartesian.js","../math.js":"../../node_modules/d3-geo/src/math.js","../transform.js":"../../node_modules/d3-geo/src/transform.js"}],"../../node_modules/d3-geo/src/projection/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = projection;
exports.projectionMutator = projectionMutator;

var _antimeridian = _interopRequireDefault(require("../clip/antimeridian.js"));

var _circle = _interopRequireDefault(require("../clip/circle.js"));

var _rectangle = _interopRequireDefault(require("../clip/rectangle.js"));

var _compose = _interopRequireDefault(require("../compose.js"));

var _identity = _interopRequireDefault(require("../identity.js"));

var _math = require("../math.js");

var _rotation = require("../rotation.js");

var _transform = require("../transform.js");

var _fit = require("./fit.js");

var _resample = _interopRequireDefault(require("./resample.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var transformRadians = (0, _transform.transformer)({
  point: function (x, y) {
    this.stream.point(x * _math.radians, y * _math.radians);
  }
});

function transformRotate(rotate) {
  return (0, _transform.transformer)({
    point: function (x, y) {
      var r = rotate(x, y);
      return this.stream.point(r[0], r[1]);
    }
  });
}

function scaleTranslate(k, dx, dy) {
  function transform(x, y) {
    return [dx + k * x, dy - k * y];
  }

  transform.invert = function (x, y) {
    return [(x - dx) / k, (dy - y) / k];
  };

  return transform;
}

function scaleTranslateRotate(k, dx, dy, alpha) {
  var cosAlpha = (0, _math.cos)(alpha),
      sinAlpha = (0, _math.sin)(alpha),
      a = cosAlpha * k,
      b = sinAlpha * k,
      ai = cosAlpha / k,
      bi = sinAlpha / k,
      ci = (sinAlpha * dy - cosAlpha * dx) / k,
      fi = (sinAlpha * dx + cosAlpha * dy) / k;

  function transform(x, y) {
    return [a * x - b * y + dx, dy - b * x - a * y];
  }

  transform.invert = function (x, y) {
    return [ai * x - bi * y + ci, fi - bi * x - ai * y];
  };

  return transform;
}

function projection(project) {
  return projectionMutator(function () {
    return project;
  })();
}

function projectionMutator(projectAt) {
  var project,
      k = 150,
      // scale
  x = 480,
      y = 250,
      // translate
  lambda = 0,
      phi = 0,
      // center
  deltaLambda = 0,
      deltaPhi = 0,
      deltaGamma = 0,
      rotate,
      // pre-rotate
  alpha = 0,
      // post-rotate
  theta = null,
      preclip = _antimeridian.default,
      // pre-clip angle
  x0 = null,
      y0,
      x1,
      y1,
      postclip = _identity.default,
      // post-clip extent
  delta2 = 0.5,
      // precision
  projectResample,
      projectTransform,
      projectRotateTransform,
      cache,
      cacheStream;

  function projection(point) {
    return projectRotateTransform(point[0] * _math.radians, point[1] * _math.radians);
  }

  function invert(point) {
    point = projectRotateTransform.invert(point[0], point[1]);
    return point && [point[0] * _math.degrees, point[1] * _math.degrees];
  }

  projection.stream = function (stream) {
    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));
  };

  projection.preclip = function (_) {
    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;
  };

  projection.postclip = function (_) {
    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;
  };

  projection.clipAngle = function (_) {
    return arguments.length ? (preclip = +_ ? (0, _circle.default)(theta = _ * _math.radians) : (theta = null, _antimeridian.default), reset()) : theta * _math.degrees;
  };

  projection.clipExtent = function (_) {
    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, _identity.default) : (0, _rectangle.default)(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];
  };

  projection.scale = function (_) {
    return arguments.length ? (k = +_, recenter()) : k;
  };

  projection.translate = function (_) {
    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];
  };

  projection.center = function (_) {
    return arguments.length ? (lambda = _[0] % 360 * _math.radians, phi = _[1] % 360 * _math.radians, recenter()) : [lambda * _math.degrees, phi * _math.degrees];
  };

  projection.rotate = function (_) {
    return arguments.length ? (deltaLambda = _[0] % 360 * _math.radians, deltaPhi = _[1] % 360 * _math.radians, deltaGamma = _.length > 2 ? _[2] % 360 * _math.radians : 0, recenter()) : [deltaLambda * _math.degrees, deltaPhi * _math.degrees, deltaGamma * _math.degrees];
  };

  projection.angle = function (_) {
    return arguments.length ? (alpha = _ % 360 * _math.radians, recenter()) : alpha * _math.degrees;
  };

  projection.precision = function (_) {
    return arguments.length ? (projectResample = (0, _resample.default)(projectTransform, delta2 = _ * _), reset()) : (0, _math.sqrt)(delta2);
  };

  projection.fitExtent = function (extent, object) {
    return (0, _fit.fitExtent)(projection, extent, object);
  };

  projection.fitSize = function (size, object) {
    return (0, _fit.fitSize)(projection, size, object);
  };

  projection.fitWidth = function (width, object) {
    return (0, _fit.fitWidth)(projection, width, object);
  };

  projection.fitHeight = function (height, object) {
    return (0, _fit.fitHeight)(projection, height, object);
  };

  function recenter() {
    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),
        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);
    rotate = (0, _rotation.rotateRadians)(deltaLambda, deltaPhi, deltaGamma);
    projectTransform = (0, _compose.default)(project, transform);
    projectRotateTransform = (0, _compose.default)(rotate, projectTransform);
    projectResample = (0, _resample.default)(projectTransform, delta2);
    return reset();
  }

  function reset() {
    cache = cacheStream = null;
    return projection;
  }

  return function () {
    project = projectAt.apply(this, arguments);
    projection.invert = project.invert && invert;
    return recenter();
  };
}
},{"../clip/antimeridian.js":"../../node_modules/d3-geo/src/clip/antimeridian.js","../clip/circle.js":"../../node_modules/d3-geo/src/clip/circle.js","../clip/rectangle.js":"../../node_modules/d3-geo/src/clip/rectangle.js","../compose.js":"../../node_modules/d3-geo/src/compose.js","../identity.js":"../../node_modules/d3-geo/src/identity.js","../math.js":"../../node_modules/d3-geo/src/math.js","../rotation.js":"../../node_modules/d3-geo/src/rotation.js","../transform.js":"../../node_modules/d3-geo/src/transform.js","./fit.js":"../../node_modules/d3-geo/src/projection/fit.js","./resample.js":"../../node_modules/d3-geo/src/projection/resample.js"}],"../../node_modules/d3-geo/src/projection/conic.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.conicProjection = conicProjection;

var _math = require("../math.js");

var _index = require("./index.js");

function conicProjection(projectAt) {
  var phi0 = 0,
      phi1 = _math.pi / 3,
      m = (0, _index.projectionMutator)(projectAt),
      p = m(phi0, phi1);

  p.parallels = function (_) {
    return arguments.length ? m(phi0 = _[0] * _math.radians, phi1 = _[1] * _math.radians) : [phi0 * _math.degrees, phi1 * _math.degrees];
  };

  return p;
}
},{"../math.js":"../../node_modules/d3-geo/src/math.js","./index.js":"../../node_modules/d3-geo/src/projection/index.js"}],"../../node_modules/d3-geo/src/projection/cylindricalEqualArea.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.cylindricalEqualAreaRaw = cylindricalEqualAreaRaw;

var _math = require("../math.js");

function cylindricalEqualAreaRaw(phi0) {
  var cosPhi0 = (0, _math.cos)(phi0);

  function forward(lambda, phi) {
    return [lambda * cosPhi0, (0, _math.sin)(phi) / cosPhi0];
  }

  forward.invert = function (x, y) {
    return [x / cosPhi0, (0, _math.asin)(y * cosPhi0)];
  };

  return forward;
}
},{"../math.js":"../../node_modules/d3-geo/src/math.js"}],"../../node_modules/d3-geo/src/projection/conicEqualArea.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.conicEqualAreaRaw = conicEqualAreaRaw;
exports.default = _default;

var _math = require("../math.js");

var _conic = require("./conic.js");

var _cylindricalEqualArea = require("./cylindricalEqualArea.js");

function conicEqualAreaRaw(y0, y1) {
  var sy0 = (0, _math.sin)(y0),
      n = (sy0 + (0, _math.sin)(y1)) / 2; // Are the parallels symmetrical around the Equator?

  if ((0, _math.abs)(n) < _math.epsilon) return (0, _cylindricalEqualArea.cylindricalEqualAreaRaw)(y0);
  var c = 1 + sy0 * (2 * n - sy0),
      r0 = (0, _math.sqrt)(c) / n;

  function project(x, y) {
    var r = (0, _math.sqrt)(c - 2 * n * (0, _math.sin)(y)) / n;
    return [r * (0, _math.sin)(x *= n), r0 - r * (0, _math.cos)(x)];
  }

  project.invert = function (x, y) {
    var r0y = r0 - y;
    return [(0, _math.atan2)(x, (0, _math.abs)(r0y)) / n * (0, _math.sign)(r0y), (0, _math.asin)((c - (x * x + r0y * r0y) * n * n) / (2 * n))];
  };

  return project;
}

function _default() {
  return (0, _conic.conicProjection)(conicEqualAreaRaw).scale(155.424).center([0, 33.6442]);
}
},{"../math.js":"../../node_modules/d3-geo/src/math.js","./conic.js":"../../node_modules/d3-geo/src/projection/conic.js","./cylindricalEqualArea.js":"../../node_modules/d3-geo/src/projection/cylindricalEqualArea.js"}],"../../node_modules/d3-geo/src/projection/albers.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _conicEqualArea = _interopRequireDefault(require("./conicEqualArea.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  return (0, _conicEqualArea.default)().parallels([29.5, 45.5]).scale(1070).translate([480, 250]).rotate([96, 0]).center([-0.6, 38.7]);
}
},{"./conicEqualArea.js":"../../node_modules/d3-geo/src/projection/conicEqualArea.js"}],"../../node_modules/d3-geo/src/projection/albersUsa.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _math = require("../math.js");

var _albers = _interopRequireDefault(require("./albers.js"));

var _conicEqualArea = _interopRequireDefault(require("./conicEqualArea.js"));

var _fit = require("./fit.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// The projections must have mutually exclusive clip regions on the sphere,
// as this will avoid emitting interleaving lines and polygons.
function multiplex(streams) {
  var n = streams.length;
  return {
    point: function (x, y) {
      var i = -1;

      while (++i < n) streams[i].point(x, y);
    },
    sphere: function () {
      var i = -1;

      while (++i < n) streams[i].sphere();
    },
    lineStart: function () {
      var i = -1;

      while (++i < n) streams[i].lineStart();
    },
    lineEnd: function () {
      var i = -1;

      while (++i < n) streams[i].lineEnd();
    },
    polygonStart: function () {
      var i = -1;

      while (++i < n) streams[i].polygonStart();
    },
    polygonEnd: function () {
      var i = -1;

      while (++i < n) streams[i].polygonEnd();
    }
  };
} // A composite projection for the United States, configured by default for
// 960×500. The projection also works quite well at 960×600 if you change the
// scale to 1285 and adjust the translate accordingly. The set of standard
// parallels for each region comes from USGS, which is published here:
// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers


function _default() {
  var cache,
      cacheStream,
      lower48 = (0, _albers.default)(),
      lower48Point,
      alaska = (0, _conicEqualArea.default)().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]),
      alaskaPoint,
      // EPSG:3338
  hawaii = (0, _conicEqualArea.default)().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]),
      hawaiiPoint,
      // ESRI:102007
  point,
      pointStream = {
    point: function (x, y) {
      point = [x, y];
    }
  };

  function albersUsa(coordinates) {
    var x = coordinates[0],
        y = coordinates[1];
    return point = null, (lower48Point.point(x, y), point) || (alaskaPoint.point(x, y), point) || (hawaiiPoint.point(x, y), point);
  }

  albersUsa.invert = function (coordinates) {
    var k = lower48.scale(),
        t = lower48.translate(),
        x = (coordinates[0] - t[0]) / k,
        y = (coordinates[1] - t[1]) / k;
    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii : lower48).invert(coordinates);
  };

  albersUsa.stream = function (stream) {
    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);
  };

  albersUsa.precision = function (_) {
    if (!arguments.length) return lower48.precision();
    lower48.precision(_), alaska.precision(_), hawaii.precision(_);
    return reset();
  };

  albersUsa.scale = function (_) {
    if (!arguments.length) return lower48.scale();
    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);
    return albersUsa.translate(lower48.translate());
  };

  albersUsa.translate = function (_) {
    if (!arguments.length) return lower48.translate();
    var k = lower48.scale(),
        x = +_[0],
        y = +_[1];
    lower48Point = lower48.translate(_).clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]]).stream(pointStream);
    alaskaPoint = alaska.translate([x - 0.307 * k, y + 0.201 * k]).clipExtent([[x - 0.425 * k + _math.epsilon, y + 0.120 * k + _math.epsilon], [x - 0.214 * k - _math.epsilon, y + 0.234 * k - _math.epsilon]]).stream(pointStream);
    hawaiiPoint = hawaii.translate([x - 0.205 * k, y + 0.212 * k]).clipExtent([[x - 0.214 * k + _math.epsilon, y + 0.166 * k + _math.epsilon], [x - 0.115 * k - _math.epsilon, y + 0.234 * k - _math.epsilon]]).stream(pointStream);
    return reset();
  };

  albersUsa.fitExtent = function (extent, object) {
    return (0, _fit.fitExtent)(albersUsa, extent, object);
  };

  albersUsa.fitSize = function (size, object) {
    return (0, _fit.fitSize)(albersUsa, size, object);
  };

  albersUsa.fitWidth = function (width, object) {
    return (0, _fit.fitWidth)(albersUsa, width, object);
  };

  albersUsa.fitHeight = function (height, object) {
    return (0, _fit.fitHeight)(albersUsa, height, object);
  };

  function reset() {
    cache = cacheStream = null;
    return albersUsa;
  }

  return albersUsa.scale(1070);
}
},{"../math.js":"../../node_modules/d3-geo/src/math.js","./albers.js":"../../node_modules/d3-geo/src/projection/albers.js","./conicEqualArea.js":"../../node_modules/d3-geo/src/projection/conicEqualArea.js","./fit.js":"../../node_modules/d3-geo/src/projection/fit.js"}],"../../node_modules/d3-geo/src/projection/azimuthal.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.azimuthalRaw = azimuthalRaw;
exports.azimuthalInvert = azimuthalInvert;

var _math = require("../math.js");

function azimuthalRaw(scale) {
  return function (x, y) {
    var cx = (0, _math.cos)(x),
        cy = (0, _math.cos)(y),
        k = scale(cx * cy);
    return [k * cy * (0, _math.sin)(x), k * (0, _math.sin)(y)];
  };
}

function azimuthalInvert(angle) {
  return function (x, y) {
    var z = (0, _math.sqrt)(x * x + y * y),
        c = angle(z),
        sc = (0, _math.sin)(c),
        cc = (0, _math.cos)(c);
    return [(0, _math.atan2)(x * sc, z * cc), (0, _math.asin)(z && y * sc / z)];
  };
}
},{"../math.js":"../../node_modules/d3-geo/src/math.js"}],"../../node_modules/d3-geo/src/projection/azimuthalEqualArea.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.azimuthalEqualAreaRaw = void 0;

var _math = require("../math.js");

var _azimuthal = require("./azimuthal.js");

var _index = _interopRequireDefault(require("./index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var azimuthalEqualAreaRaw = (0, _azimuthal.azimuthalRaw)(function (cxcy) {
  return (0, _math.sqrt)(2 / (1 + cxcy));
});
exports.azimuthalEqualAreaRaw = azimuthalEqualAreaRaw;
azimuthalEqualAreaRaw.invert = (0, _azimuthal.azimuthalInvert)(function (z) {
  return 2 * (0, _math.asin)(z / 2);
});

function _default() {
  return (0, _index.default)(azimuthalEqualAreaRaw).scale(124.75).clipAngle(180 - 1e-3);
}
},{"../math.js":"../../node_modules/d3-geo/src/math.js","./azimuthal.js":"../../node_modules/d3-geo/src/projection/azimuthal.js","./index.js":"../../node_modules/d3-geo/src/projection/index.js"}],"../../node_modules/d3-geo/src/projection/azimuthalEquidistant.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.azimuthalEquidistantRaw = void 0;

var _math = require("../math.js");

var _azimuthal = require("./azimuthal.js");

var _index = _interopRequireDefault(require("./index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var azimuthalEquidistantRaw = (0, _azimuthal.azimuthalRaw)(function (c) {
  return (c = (0, _math.acos)(c)) && c / (0, _math.sin)(c);
});
exports.azimuthalEquidistantRaw = azimuthalEquidistantRaw;
azimuthalEquidistantRaw.invert = (0, _azimuthal.azimuthalInvert)(function (z) {
  return z;
});

function _default() {
  return (0, _index.default)(azimuthalEquidistantRaw).scale(79.4188).clipAngle(180 - 1e-3);
}
},{"../math.js":"../../node_modules/d3-geo/src/math.js","./azimuthal.js":"../../node_modules/d3-geo/src/projection/azimuthal.js","./index.js":"../../node_modules/d3-geo/src/projection/index.js"}],"../../node_modules/d3-geo/src/projection/mercator.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mercatorRaw = mercatorRaw;
exports.default = _default;
exports.mercatorProjection = mercatorProjection;

var _math = require("../math.js");

var _rotation = _interopRequireDefault(require("../rotation.js"));

var _index = _interopRequireDefault(require("./index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function mercatorRaw(lambda, phi) {
  return [lambda, (0, _math.log)((0, _math.tan)((_math.halfPi + phi) / 2))];
}

mercatorRaw.invert = function (x, y) {
  return [x, 2 * (0, _math.atan)((0, _math.exp)(y)) - _math.halfPi];
};

function _default() {
  return mercatorProjection(mercatorRaw).scale(961 / _math.tau);
}

function mercatorProjection(project) {
  var m = (0, _index.default)(project),
      center = m.center,
      scale = m.scale,
      translate = m.translate,
      clipExtent = m.clipExtent,
      x0 = null,
      y0,
      x1,
      y1; // clip extent

  m.scale = function (_) {
    return arguments.length ? (scale(_), reclip()) : scale();
  };

  m.translate = function (_) {
    return arguments.length ? (translate(_), reclip()) : translate();
  };

  m.center = function (_) {
    return arguments.length ? (center(_), reclip()) : center();
  };

  m.clipExtent = function (_) {
    return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];
  };

  function reclip() {
    var k = _math.pi * scale(),
        t = m((0, _rotation.default)(m.rotate()).invert([0, 0]));
    return clipExtent(x0 == null ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]] : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);
  }

  return reclip();
}
},{"../math.js":"../../node_modules/d3-geo/src/math.js","../rotation.js":"../../node_modules/d3-geo/src/rotation.js","./index.js":"../../node_modules/d3-geo/src/projection/index.js"}],"../../node_modules/d3-geo/src/projection/conicConformal.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.conicConformalRaw = conicConformalRaw;
exports.default = _default;

var _math = require("../math.js");

var _conic = require("./conic.js");

var _mercator = require("./mercator.js");

function tany(y) {
  return (0, _math.tan)((_math.halfPi + y) / 2);
}

function conicConformalRaw(y0, y1) {
  var cy0 = (0, _math.cos)(y0),
      n = y0 === y1 ? (0, _math.sin)(y0) : (0, _math.log)(cy0 / (0, _math.cos)(y1)) / (0, _math.log)(tany(y1) / tany(y0)),
      f = cy0 * (0, _math.pow)(tany(y0), n) / n;
  if (!n) return _mercator.mercatorRaw;

  function project(x, y) {
    if (f > 0) {
      if (y < -_math.halfPi + _math.epsilon) y = -_math.halfPi + _math.epsilon;
    } else {
      if (y > _math.halfPi - _math.epsilon) y = _math.halfPi - _math.epsilon;
    }

    var r = f / (0, _math.pow)(tany(y), n);
    return [r * (0, _math.sin)(n * x), f - r * (0, _math.cos)(n * x)];
  }

  project.invert = function (x, y) {
    var fy = f - y,
        r = (0, _math.sign)(n) * (0, _math.sqrt)(x * x + fy * fy);
    return [(0, _math.atan2)(x, (0, _math.abs)(fy)) / n * (0, _math.sign)(fy), 2 * (0, _math.atan)((0, _math.pow)(f / r, 1 / n)) - _math.halfPi];
  };

  return project;
}

function _default() {
  return (0, _conic.conicProjection)(conicConformalRaw).scale(109.5).parallels([30, 30]);
}
},{"../math.js":"../../node_modules/d3-geo/src/math.js","./conic.js":"../../node_modules/d3-geo/src/projection/conic.js","./mercator.js":"../../node_modules/d3-geo/src/projection/mercator.js"}],"../../node_modules/d3-geo/src/projection/equirectangular.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.equirectangularRaw = equirectangularRaw;
exports.default = _default;

var _index = _interopRequireDefault(require("./index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function equirectangularRaw(lambda, phi) {
  return [lambda, phi];
}

equirectangularRaw.invert = equirectangularRaw;

function _default() {
  return (0, _index.default)(equirectangularRaw).scale(152.63);
}
},{"./index.js":"../../node_modules/d3-geo/src/projection/index.js"}],"../../node_modules/d3-geo/src/projection/conicEquidistant.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.conicEquidistantRaw = conicEquidistantRaw;
exports.default = _default;

var _math = require("../math.js");

var _conic = require("./conic.js");

var _equirectangular = require("./equirectangular.js");

function conicEquidistantRaw(y0, y1) {
  var cy0 = (0, _math.cos)(y0),
      n = y0 === y1 ? (0, _math.sin)(y0) : (cy0 - (0, _math.cos)(y1)) / (y1 - y0),
      g = cy0 / n + y0;
  if ((0, _math.abs)(n) < _math.epsilon) return _equirectangular.equirectangularRaw;

  function project(x, y) {
    var gy = g - y,
        nx = n * x;
    return [gy * (0, _math.sin)(nx), g - gy * (0, _math.cos)(nx)];
  }

  project.invert = function (x, y) {
    var gy = g - y;
    return [(0, _math.atan2)(x, (0, _math.abs)(gy)) / n * (0, _math.sign)(gy), g - (0, _math.sign)(n) * (0, _math.sqrt)(x * x + gy * gy)];
  };

  return project;
}

function _default() {
  return (0, _conic.conicProjection)(conicEquidistantRaw).scale(131.154).center([0, 13.9389]);
}
},{"../math.js":"../../node_modules/d3-geo/src/math.js","./conic.js":"../../node_modules/d3-geo/src/projection/conic.js","./equirectangular.js":"../../node_modules/d3-geo/src/projection/equirectangular.js"}],"../../node_modules/d3-geo/src/projection/equalEarth.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.equalEarthRaw = equalEarthRaw;
exports.default = _default;

var _index = _interopRequireDefault(require("./index.js"));

var _math = require("../math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var A1 = 1.340264,
    A2 = -0.081106,
    A3 = 0.000893,
    A4 = 0.003796,
    M = (0, _math.sqrt)(3) / 2,
    iterations = 12;

function equalEarthRaw(lambda, phi) {
  var l = (0, _math.asin)(M * (0, _math.sin)(phi)),
      l2 = l * l,
      l6 = l2 * l2 * l2;
  return [lambda * (0, _math.cos)(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))), l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))];
}

equalEarthRaw.invert = function (x, y) {
  var l = y,
      l2 = l * l,
      l6 = l2 * l2 * l2;

  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {
    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;
    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);
    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;
    if ((0, _math.abs)(delta) < _math.epsilon2) break;
  }

  return [M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / (0, _math.cos)(l), (0, _math.asin)((0, _math.sin)(l) / M)];
};

function _default() {
  return (0, _index.default)(equalEarthRaw).scale(177.158);
}
},{"./index.js":"../../node_modules/d3-geo/src/projection/index.js","../math.js":"../../node_modules/d3-geo/src/math.js"}],"../../node_modules/d3-geo/src/projection/gnomonic.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.gnomonicRaw = gnomonicRaw;
exports.default = _default;

var _math = require("../math.js");

var _azimuthal = require("./azimuthal.js");

var _index = _interopRequireDefault(require("./index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function gnomonicRaw(x, y) {
  var cy = (0, _math.cos)(y),
      k = (0, _math.cos)(x) * cy;
  return [cy * (0, _math.sin)(x) / k, (0, _math.sin)(y) / k];
}

gnomonicRaw.invert = (0, _azimuthal.azimuthalInvert)(_math.atan);

function _default() {
  return (0, _index.default)(gnomonicRaw).scale(144.049).clipAngle(60);
}
},{"../math.js":"../../node_modules/d3-geo/src/math.js","./azimuthal.js":"../../node_modules/d3-geo/src/projection/azimuthal.js","./index.js":"../../node_modules/d3-geo/src/projection/index.js"}],"../../node_modules/d3-geo/src/projection/identity.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _rectangle = _interopRequireDefault(require("../clip/rectangle.js"));

var _identity = _interopRequireDefault(require("../identity.js"));

var _transform = require("../transform.js");

var _fit = require("./fit.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function scaleTranslate(kx, ky, tx, ty) {
  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? _identity.default : (0, _transform.transformer)({
    point: function (x, y) {
      this.stream.point(x * kx + tx, y * ky + ty);
    }
  });
}

function _default() {
  var k = 1,
      tx = 0,
      ty = 0,
      sx = 1,
      sy = 1,
      transform = _identity.default,
      // scale, translate and reflect
  x0 = null,
      y0,
      x1,
      y1,
      // clip extent
  postclip = _identity.default,
      cache,
      cacheStream,
      projection;

  function reset() {
    cache = cacheStream = null;
    return projection;
  }

  return projection = {
    stream: function (stream) {
      return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));
    },
    postclip: function (_) {
      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;
    },
    clipExtent: function (_) {
      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, _identity.default) : (0, _rectangle.default)(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];
    },
    scale: function (_) {
      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;
    },
    translate: function (_) {
      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];
    },
    reflectX: function (_) {
      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;
    },
    reflectY: function (_) {
      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;
    },
    fitExtent: function (extent, object) {
      return (0, _fit.fitExtent)(projection, extent, object);
    },
    fitSize: function (size, object) {
      return (0, _fit.fitSize)(projection, size, object);
    },
    fitWidth: function (width, object) {
      return (0, _fit.fitWidth)(projection, width, object);
    },
    fitHeight: function (height, object) {
      return (0, _fit.fitHeight)(projection, height, object);
    }
  };
}
},{"../clip/rectangle.js":"../../node_modules/d3-geo/src/clip/rectangle.js","../identity.js":"../../node_modules/d3-geo/src/identity.js","../transform.js":"../../node_modules/d3-geo/src/transform.js","./fit.js":"../../node_modules/d3-geo/src/projection/fit.js"}],"../../node_modules/d3-geo/src/projection/naturalEarth1.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.naturalEarth1Raw = naturalEarth1Raw;
exports.default = _default;

var _index = _interopRequireDefault(require("./index.js"));

var _math = require("../math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function naturalEarth1Raw(lambda, phi) {
  var phi2 = phi * phi,
      phi4 = phi2 * phi2;
  return [lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))), phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))];
}

naturalEarth1Raw.invert = function (x, y) {
  var phi = y,
      i = 25,
      delta;

  do {
    var phi2 = phi * phi,
        phi4 = phi2 * phi2;
    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) / (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));
  } while ((0, _math.abs)(delta) > _math.epsilon && --i > 0);

  return [x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))), phi];
};

function _default() {
  return (0, _index.default)(naturalEarth1Raw).scale(175.295);
}
},{"./index.js":"../../node_modules/d3-geo/src/projection/index.js","../math.js":"../../node_modules/d3-geo/src/math.js"}],"../../node_modules/d3-geo/src/projection/orthographic.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.orthographicRaw = orthographicRaw;
exports.default = _default;

var _math = require("../math.js");

var _azimuthal = require("./azimuthal.js");

var _index = _interopRequireDefault(require("./index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function orthographicRaw(x, y) {
  return [(0, _math.cos)(y) * (0, _math.sin)(x), (0, _math.sin)(y)];
}

orthographicRaw.invert = (0, _azimuthal.azimuthalInvert)(_math.asin);

function _default() {
  return (0, _index.default)(orthographicRaw).scale(249.5).clipAngle(90 + _math.epsilon);
}
},{"../math.js":"../../node_modules/d3-geo/src/math.js","./azimuthal.js":"../../node_modules/d3-geo/src/projection/azimuthal.js","./index.js":"../../node_modules/d3-geo/src/projection/index.js"}],"../../node_modules/d3-geo/src/projection/stereographic.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.stereographicRaw = stereographicRaw;
exports.default = _default;

var _math = require("../math.js");

var _azimuthal = require("./azimuthal.js");

var _index = _interopRequireDefault(require("./index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function stereographicRaw(x, y) {
  var cy = (0, _math.cos)(y),
      k = 1 + (0, _math.cos)(x) * cy;
  return [cy * (0, _math.sin)(x) / k, (0, _math.sin)(y) / k];
}

stereographicRaw.invert = (0, _azimuthal.azimuthalInvert)(function (z) {
  return 2 * (0, _math.atan)(z);
});

function _default() {
  return (0, _index.default)(stereographicRaw).scale(250).clipAngle(142);
}
},{"../math.js":"../../node_modules/d3-geo/src/math.js","./azimuthal.js":"../../node_modules/d3-geo/src/projection/azimuthal.js","./index.js":"../../node_modules/d3-geo/src/projection/index.js"}],"../../node_modules/d3-geo/src/projection/transverseMercator.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.transverseMercatorRaw = transverseMercatorRaw;
exports.default = _default;

var _math = require("../math.js");

var _mercator = require("./mercator.js");

function transverseMercatorRaw(lambda, phi) {
  return [(0, _math.log)((0, _math.tan)((_math.halfPi + phi) / 2)), -lambda];
}

transverseMercatorRaw.invert = function (x, y) {
  return [-y, 2 * (0, _math.atan)((0, _math.exp)(x)) - _math.halfPi];
};

function _default() {
  var m = (0, _mercator.mercatorProjection)(transverseMercatorRaw),
      center = m.center,
      rotate = m.rotate;

  m.center = function (_) {
    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);
  };

  m.rotate = function (_) {
    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);
  };

  return rotate([0, 0, 90]).scale(159.155);
}
},{"../math.js":"../../node_modules/d3-geo/src/math.js","./mercator.js":"../../node_modules/d3-geo/src/projection/mercator.js"}],"../../node_modules/d3-geo/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "geoArea", {
  enumerable: true,
  get: function () {
    return _area.default;
  }
});
Object.defineProperty(exports, "geoBounds", {
  enumerable: true,
  get: function () {
    return _bounds.default;
  }
});
Object.defineProperty(exports, "geoCentroid", {
  enumerable: true,
  get: function () {
    return _centroid.default;
  }
});
Object.defineProperty(exports, "geoCircle", {
  enumerable: true,
  get: function () {
    return _circle.default;
  }
});
Object.defineProperty(exports, "geoClipAntimeridian", {
  enumerable: true,
  get: function () {
    return _antimeridian.default;
  }
});
Object.defineProperty(exports, "geoClipCircle", {
  enumerable: true,
  get: function () {
    return _circle2.default;
  }
});
Object.defineProperty(exports, "geoClipExtent", {
  enumerable: true,
  get: function () {
    return _extent.default;
  }
});
Object.defineProperty(exports, "geoClipRectangle", {
  enumerable: true,
  get: function () {
    return _rectangle.default;
  }
});
Object.defineProperty(exports, "geoContains", {
  enumerable: true,
  get: function () {
    return _contains.default;
  }
});
Object.defineProperty(exports, "geoDistance", {
  enumerable: true,
  get: function () {
    return _distance.default;
  }
});
Object.defineProperty(exports, "geoGraticule", {
  enumerable: true,
  get: function () {
    return _graticule.default;
  }
});
Object.defineProperty(exports, "geoGraticule10", {
  enumerable: true,
  get: function () {
    return _graticule.graticule10;
  }
});
Object.defineProperty(exports, "geoInterpolate", {
  enumerable: true,
  get: function () {
    return _interpolate.default;
  }
});
Object.defineProperty(exports, "geoLength", {
  enumerable: true,
  get: function () {
    return _length.default;
  }
});
Object.defineProperty(exports, "geoPath", {
  enumerable: true,
  get: function () {
    return _index.default;
  }
});
Object.defineProperty(exports, "geoAlbers", {
  enumerable: true,
  get: function () {
    return _albers.default;
  }
});
Object.defineProperty(exports, "geoAlbersUsa", {
  enumerable: true,
  get: function () {
    return _albersUsa.default;
  }
});
Object.defineProperty(exports, "geoAzimuthalEqualArea", {
  enumerable: true,
  get: function () {
    return _azimuthalEqualArea.default;
  }
});
Object.defineProperty(exports, "geoAzimuthalEqualAreaRaw", {
  enumerable: true,
  get: function () {
    return _azimuthalEqualArea.azimuthalEqualAreaRaw;
  }
});
Object.defineProperty(exports, "geoAzimuthalEquidistant", {
  enumerable: true,
  get: function () {
    return _azimuthalEquidistant.default;
  }
});
Object.defineProperty(exports, "geoAzimuthalEquidistantRaw", {
  enumerable: true,
  get: function () {
    return _azimuthalEquidistant.azimuthalEquidistantRaw;
  }
});
Object.defineProperty(exports, "geoConicConformal", {
  enumerable: true,
  get: function () {
    return _conicConformal.default;
  }
});
Object.defineProperty(exports, "geoConicConformalRaw", {
  enumerable: true,
  get: function () {
    return _conicConformal.conicConformalRaw;
  }
});
Object.defineProperty(exports, "geoConicEqualArea", {
  enumerable: true,
  get: function () {
    return _conicEqualArea.default;
  }
});
Object.defineProperty(exports, "geoConicEqualAreaRaw", {
  enumerable: true,
  get: function () {
    return _conicEqualArea.conicEqualAreaRaw;
  }
});
Object.defineProperty(exports, "geoConicEquidistant", {
  enumerable: true,
  get: function () {
    return _conicEquidistant.default;
  }
});
Object.defineProperty(exports, "geoConicEquidistantRaw", {
  enumerable: true,
  get: function () {
    return _conicEquidistant.conicEquidistantRaw;
  }
});
Object.defineProperty(exports, "geoEqualEarth", {
  enumerable: true,
  get: function () {
    return _equalEarth.default;
  }
});
Object.defineProperty(exports, "geoEqualEarthRaw", {
  enumerable: true,
  get: function () {
    return _equalEarth.equalEarthRaw;
  }
});
Object.defineProperty(exports, "geoEquirectangular", {
  enumerable: true,
  get: function () {
    return _equirectangular.default;
  }
});
Object.defineProperty(exports, "geoEquirectangularRaw", {
  enumerable: true,
  get: function () {
    return _equirectangular.equirectangularRaw;
  }
});
Object.defineProperty(exports, "geoGnomonic", {
  enumerable: true,
  get: function () {
    return _gnomonic.default;
  }
});
Object.defineProperty(exports, "geoGnomonicRaw", {
  enumerable: true,
  get: function () {
    return _gnomonic.gnomonicRaw;
  }
});
Object.defineProperty(exports, "geoIdentity", {
  enumerable: true,
  get: function () {
    return _identity.default;
  }
});
Object.defineProperty(exports, "geoProjection", {
  enumerable: true,
  get: function () {
    return _index2.default;
  }
});
Object.defineProperty(exports, "geoProjectionMutator", {
  enumerable: true,
  get: function () {
    return _index2.projectionMutator;
  }
});
Object.defineProperty(exports, "geoMercator", {
  enumerable: true,
  get: function () {
    return _mercator.default;
  }
});
Object.defineProperty(exports, "geoMercatorRaw", {
  enumerable: true,
  get: function () {
    return _mercator.mercatorRaw;
  }
});
Object.defineProperty(exports, "geoNaturalEarth1", {
  enumerable: true,
  get: function () {
    return _naturalEarth.default;
  }
});
Object.defineProperty(exports, "geoNaturalEarth1Raw", {
  enumerable: true,
  get: function () {
    return _naturalEarth.naturalEarth1Raw;
  }
});
Object.defineProperty(exports, "geoOrthographic", {
  enumerable: true,
  get: function () {
    return _orthographic.default;
  }
});
Object.defineProperty(exports, "geoOrthographicRaw", {
  enumerable: true,
  get: function () {
    return _orthographic.orthographicRaw;
  }
});
Object.defineProperty(exports, "geoStereographic", {
  enumerable: true,
  get: function () {
    return _stereographic.default;
  }
});
Object.defineProperty(exports, "geoStereographicRaw", {
  enumerable: true,
  get: function () {
    return _stereographic.stereographicRaw;
  }
});
Object.defineProperty(exports, "geoTransverseMercator", {
  enumerable: true,
  get: function () {
    return _transverseMercator.default;
  }
});
Object.defineProperty(exports, "geoTransverseMercatorRaw", {
  enumerable: true,
  get: function () {
    return _transverseMercator.transverseMercatorRaw;
  }
});
Object.defineProperty(exports, "geoRotation", {
  enumerable: true,
  get: function () {
    return _rotation.default;
  }
});
Object.defineProperty(exports, "geoStream", {
  enumerable: true,
  get: function () {
    return _stream.default;
  }
});
Object.defineProperty(exports, "geoTransform", {
  enumerable: true,
  get: function () {
    return _transform.default;
  }
});

var _area = _interopRequireDefault(require("./area.js"));

var _bounds = _interopRequireDefault(require("./bounds.js"));

var _centroid = _interopRequireDefault(require("./centroid.js"));

var _circle = _interopRequireDefault(require("./circle.js"));

var _antimeridian = _interopRequireDefault(require("./clip/antimeridian.js"));

var _circle2 = _interopRequireDefault(require("./clip/circle.js"));

var _extent = _interopRequireDefault(require("./clip/extent.js"));

var _rectangle = _interopRequireDefault(require("./clip/rectangle.js"));

var _contains = _interopRequireDefault(require("./contains.js"));

var _distance = _interopRequireDefault(require("./distance.js"));

var _graticule = _interopRequireWildcard(require("./graticule.js"));

var _interpolate = _interopRequireDefault(require("./interpolate.js"));

var _length = _interopRequireDefault(require("./length.js"));

var _index = _interopRequireDefault(require("./path/index.js"));

var _albers = _interopRequireDefault(require("./projection/albers.js"));

var _albersUsa = _interopRequireDefault(require("./projection/albersUsa.js"));

var _azimuthalEqualArea = _interopRequireWildcard(require("./projection/azimuthalEqualArea.js"));

var _azimuthalEquidistant = _interopRequireWildcard(require("./projection/azimuthalEquidistant.js"));

var _conicConformal = _interopRequireWildcard(require("./projection/conicConformal.js"));

var _conicEqualArea = _interopRequireWildcard(require("./projection/conicEqualArea.js"));

var _conicEquidistant = _interopRequireWildcard(require("./projection/conicEquidistant.js"));

var _equalEarth = _interopRequireWildcard(require("./projection/equalEarth.js"));

var _equirectangular = _interopRequireWildcard(require("./projection/equirectangular.js"));

var _gnomonic = _interopRequireWildcard(require("./projection/gnomonic.js"));

var _identity = _interopRequireDefault(require("./projection/identity.js"));

var _index2 = _interopRequireWildcard(require("./projection/index.js"));

var _mercator = _interopRequireWildcard(require("./projection/mercator.js"));

var _naturalEarth = _interopRequireWildcard(require("./projection/naturalEarth1.js"));

var _orthographic = _interopRequireWildcard(require("./projection/orthographic.js"));

var _stereographic = _interopRequireWildcard(require("./projection/stereographic.js"));

var _transverseMercator = _interopRequireWildcard(require("./projection/transverseMercator.js"));

var _rotation = _interopRequireDefault(require("./rotation.js"));

var _stream = _interopRequireDefault(require("./stream.js"));

var _transform = _interopRequireDefault(require("./transform.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./area.js":"../../node_modules/d3-geo/src/area.js","./bounds.js":"../../node_modules/d3-geo/src/bounds.js","./centroid.js":"../../node_modules/d3-geo/src/centroid.js","./circle.js":"../../node_modules/d3-geo/src/circle.js","./clip/antimeridian.js":"../../node_modules/d3-geo/src/clip/antimeridian.js","./clip/circle.js":"../../node_modules/d3-geo/src/clip/circle.js","./clip/extent.js":"../../node_modules/d3-geo/src/clip/extent.js","./clip/rectangle.js":"../../node_modules/d3-geo/src/clip/rectangle.js","./contains.js":"../../node_modules/d3-geo/src/contains.js","./distance.js":"../../node_modules/d3-geo/src/distance.js","./graticule.js":"../../node_modules/d3-geo/src/graticule.js","./interpolate.js":"../../node_modules/d3-geo/src/interpolate.js","./length.js":"../../node_modules/d3-geo/src/length.js","./path/index.js":"../../node_modules/d3-geo/src/path/index.js","./projection/albers.js":"../../node_modules/d3-geo/src/projection/albers.js","./projection/albersUsa.js":"../../node_modules/d3-geo/src/projection/albersUsa.js","./projection/azimuthalEqualArea.js":"../../node_modules/d3-geo/src/projection/azimuthalEqualArea.js","./projection/azimuthalEquidistant.js":"../../node_modules/d3-geo/src/projection/azimuthalEquidistant.js","./projection/conicConformal.js":"../../node_modules/d3-geo/src/projection/conicConformal.js","./projection/conicEqualArea.js":"../../node_modules/d3-geo/src/projection/conicEqualArea.js","./projection/conicEquidistant.js":"../../node_modules/d3-geo/src/projection/conicEquidistant.js","./projection/equalEarth.js":"../../node_modules/d3-geo/src/projection/equalEarth.js","./projection/equirectangular.js":"../../node_modules/d3-geo/src/projection/equirectangular.js","./projection/gnomonic.js":"../../node_modules/d3-geo/src/projection/gnomonic.js","./projection/identity.js":"../../node_modules/d3-geo/src/projection/identity.js","./projection/index.js":"../../node_modules/d3-geo/src/projection/index.js","./projection/mercator.js":"../../node_modules/d3-geo/src/projection/mercator.js","./projection/naturalEarth1.js":"../../node_modules/d3-geo/src/projection/naturalEarth1.js","./projection/orthographic.js":"../../node_modules/d3-geo/src/projection/orthographic.js","./projection/stereographic.js":"../../node_modules/d3-geo/src/projection/stereographic.js","./projection/transverseMercator.js":"../../node_modules/d3-geo/src/projection/transverseMercator.js","./rotation.js":"../../node_modules/d3-geo/src/rotation.js","./stream.js":"../../node_modules/d3-geo/src/stream.js","./transform.js":"../../node_modules/d3-geo/src/transform.js"}],"../../node_modules/d3-hierarchy/src/cluster.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function defaultSeparation(a, b) {
  return a.parent === b.parent ? 1 : 2;
}

function meanX(children) {
  return children.reduce(meanXReduce, 0) / children.length;
}

function meanXReduce(x, c) {
  return x + c.x;
}

function maxY(children) {
  return 1 + children.reduce(maxYReduce, 0);
}

function maxYReduce(y, c) {
  return Math.max(y, c.y);
}

function leafLeft(node) {
  var children;

  while (children = node.children) node = children[0];

  return node;
}

function leafRight(node) {
  var children;

  while (children = node.children) node = children[children.length - 1];

  return node;
}

function _default() {
  var separation = defaultSeparation,
      dx = 1,
      dy = 1,
      nodeSize = false;

  function cluster(root) {
    var previousNode,
        x = 0; // First walk, computing the initial x & y values.

    root.eachAfter(function (node) {
      var children = node.children;

      if (children) {
        node.x = meanX(children);
        node.y = maxY(children);
      } else {
        node.x = previousNode ? x += separation(node, previousNode) : 0;
        node.y = 0;
        previousNode = node;
      }
    });
    var left = leafLeft(root),
        right = leafRight(root),
        x0 = left.x - separation(left, right) / 2,
        x1 = right.x + separation(right, left) / 2; // Second walk, normalizing x & y to the desired size.

    return root.eachAfter(nodeSize ? function (node) {
      node.x = (node.x - root.x) * dx;
      node.y = (root.y - node.y) * dy;
    } : function (node) {
      node.x = (node.x - x0) / (x1 - x0) * dx;
      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;
    });
  }

  cluster.separation = function (x) {
    return arguments.length ? (separation = x, cluster) : separation;
  };

  cluster.size = function (x) {
    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : nodeSize ? null : [dx, dy];
  };

  cluster.nodeSize = function (x) {
    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : nodeSize ? [dx, dy] : null;
  };

  return cluster;
}
},{}],"../../node_modules/d3-hierarchy/src/hierarchy/count.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function count(node) {
  var sum = 0,
      children = node.children,
      i = children && children.length;
  if (!i) sum = 1;else while (--i >= 0) sum += children[i].value;
  node.value = sum;
}

function _default() {
  return this.eachAfter(count);
}
},{}],"../../node_modules/d3-hierarchy/src/hierarchy/each.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(callback) {
  var node = this,
      current,
      next = [node],
      children,
      i,
      n;

  do {
    current = next.reverse(), next = [];

    while (node = current.pop()) {
      callback(node), children = node.children;
      if (children) for (i = 0, n = children.length; i < n; ++i) {
        next.push(children[i]);
      }
    }
  } while (next.length);

  return this;
}
},{}],"../../node_modules/d3-hierarchy/src/hierarchy/eachBefore.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(callback) {
  var node = this,
      nodes = [node],
      children,
      i;

  while (node = nodes.pop()) {
    callback(node), children = node.children;
    if (children) for (i = children.length - 1; i >= 0; --i) {
      nodes.push(children[i]);
    }
  }

  return this;
}
},{}],"../../node_modules/d3-hierarchy/src/hierarchy/eachAfter.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(callback) {
  var node = this,
      nodes = [node],
      next = [],
      children,
      i,
      n;

  while (node = nodes.pop()) {
    next.push(node), children = node.children;
    if (children) for (i = 0, n = children.length; i < n; ++i) {
      nodes.push(children[i]);
    }
  }

  while (node = next.pop()) {
    callback(node);
  }

  return this;
}
},{}],"../../node_modules/d3-hierarchy/src/hierarchy/sum.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(value) {
  return this.eachAfter(function (node) {
    var sum = +value(node.data) || 0,
        children = node.children,
        i = children && children.length;

    while (--i >= 0) sum += children[i].value;

    node.value = sum;
  });
}
},{}],"../../node_modules/d3-hierarchy/src/hierarchy/sort.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(compare) {
  return this.eachBefore(function (node) {
    if (node.children) {
      node.children.sort(compare);
    }
  });
}
},{}],"../../node_modules/d3-hierarchy/src/hierarchy/path.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(end) {
  var start = this,
      ancestor = leastCommonAncestor(start, end),
      nodes = [start];

  while (start !== ancestor) {
    start = start.parent;
    nodes.push(start);
  }

  var k = nodes.length;

  while (end !== ancestor) {
    nodes.splice(k, 0, end);
    end = end.parent;
  }

  return nodes;
}

function leastCommonAncestor(a, b) {
  if (a === b) return a;
  var aNodes = a.ancestors(),
      bNodes = b.ancestors(),
      c = null;
  a = aNodes.pop();
  b = bNodes.pop();

  while (a === b) {
    c = a;
    a = aNodes.pop();
    b = bNodes.pop();
  }

  return c;
}
},{}],"../../node_modules/d3-hierarchy/src/hierarchy/ancestors.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var node = this,
      nodes = [node];

  while (node = node.parent) {
    nodes.push(node);
  }

  return nodes;
}
},{}],"../../node_modules/d3-hierarchy/src/hierarchy/descendants.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var nodes = [];
  this.each(function (node) {
    nodes.push(node);
  });
  return nodes;
}
},{}],"../../node_modules/d3-hierarchy/src/hierarchy/leaves.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var leaves = [];
  this.eachBefore(function (node) {
    if (!node.children) {
      leaves.push(node);
    }
  });
  return leaves;
}
},{}],"../../node_modules/d3-hierarchy/src/hierarchy/links.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  var root = this,
      links = [];
  root.each(function (node) {
    if (node !== root) {
      // Don’t include the root’s parent, if any.
      links.push({
        source: node.parent,
        target: node
      });
    }
  });
  return links;
}
},{}],"../../node_modules/d3-hierarchy/src/hierarchy/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = hierarchy;
exports.computeHeight = computeHeight;
exports.Node = Node;

var _count = _interopRequireDefault(require("./count.js"));

var _each = _interopRequireDefault(require("./each.js"));

var _eachBefore = _interopRequireDefault(require("./eachBefore.js"));

var _eachAfter = _interopRequireDefault(require("./eachAfter.js"));

var _sum = _interopRequireDefault(require("./sum.js"));

var _sort = _interopRequireDefault(require("./sort.js"));

var _path = _interopRequireDefault(require("./path.js"));

var _ancestors = _interopRequireDefault(require("./ancestors.js"));

var _descendants = _interopRequireDefault(require("./descendants.js"));

var _leaves = _interopRequireDefault(require("./leaves.js"));

var _links = _interopRequireDefault(require("./links.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function hierarchy(data, children) {
  var root = new Node(data),
      valued = +data.value && (root.value = data.value),
      node,
      nodes = [root],
      child,
      childs,
      i,
      n;
  if (children == null) children = defaultChildren;

  while (node = nodes.pop()) {
    if (valued) node.value = +node.data.value;

    if ((childs = children(node.data)) && (n = childs.length)) {
      node.children = new Array(n);

      for (i = n - 1; i >= 0; --i) {
        nodes.push(child = node.children[i] = new Node(childs[i]));
        child.parent = node;
        child.depth = node.depth + 1;
      }
    }
  }

  return root.eachBefore(computeHeight);
}

function node_copy() {
  return hierarchy(this).eachBefore(copyData);
}

function defaultChildren(d) {
  return d.children;
}

function copyData(node) {
  node.data = node.data.data;
}

function computeHeight(node) {
  var height = 0;

  do node.height = height; while ((node = node.parent) && node.height < ++height);
}

function Node(data) {
  this.data = data;
  this.depth = this.height = 0;
  this.parent = null;
}

Node.prototype = hierarchy.prototype = {
  constructor: Node,
  count: _count.default,
  each: _each.default,
  eachAfter: _eachAfter.default,
  eachBefore: _eachBefore.default,
  sum: _sum.default,
  sort: _sort.default,
  path: _path.default,
  ancestors: _ancestors.default,
  descendants: _descendants.default,
  leaves: _leaves.default,
  links: _links.default,
  copy: node_copy
};
},{"./count.js":"../../node_modules/d3-hierarchy/src/hierarchy/count.js","./each.js":"../../node_modules/d3-hierarchy/src/hierarchy/each.js","./eachBefore.js":"../../node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","./eachAfter.js":"../../node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","./sum.js":"../../node_modules/d3-hierarchy/src/hierarchy/sum.js","./sort.js":"../../node_modules/d3-hierarchy/src/hierarchy/sort.js","./path.js":"../../node_modules/d3-hierarchy/src/hierarchy/path.js","./ancestors.js":"../../node_modules/d3-hierarchy/src/hierarchy/ancestors.js","./descendants.js":"../../node_modules/d3-hierarchy/src/hierarchy/descendants.js","./leaves.js":"../../node_modules/d3-hierarchy/src/hierarchy/leaves.js","./links.js":"../../node_modules/d3-hierarchy/src/hierarchy/links.js"}],"../../node_modules/d3-hierarchy/src/array.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.shuffle = shuffle;
exports.slice = void 0;
var slice = Array.prototype.slice;
exports.slice = slice;

function shuffle(array) {
  var m = array.length,
      t,
      i;

  while (m) {
    i = Math.random() * m-- | 0;
    t = array[m];
    array[m] = array[i];
    array[i] = t;
  }

  return array;
}
},{}],"../../node_modules/d3-hierarchy/src/pack/enclose.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _array = require("../array.js");

function _default(circles) {
  var i = 0,
      n = (circles = (0, _array.shuffle)(_array.slice.call(circles))).length,
      B = [],
      p,
      e;

  while (i < n) {
    p = circles[i];
    if (e && enclosesWeak(e, p)) ++i;else e = encloseBasis(B = extendBasis(B, p)), i = 0;
  }

  return e;
}

function extendBasis(B, p) {
  var i, j;
  if (enclosesWeakAll(p, B)) return [p]; // If we get here then B must have at least one element.

  for (i = 0; i < B.length; ++i) {
    if (enclosesNot(p, B[i]) && enclosesWeakAll(encloseBasis2(B[i], p), B)) {
      return [B[i], p];
    }
  } // If we get here then B must have at least two elements.


  for (i = 0; i < B.length - 1; ++i) {
    for (j = i + 1; j < B.length; ++j) {
      if (enclosesNot(encloseBasis2(B[i], B[j]), p) && enclosesNot(encloseBasis2(B[i], p), B[j]) && enclosesNot(encloseBasis2(B[j], p), B[i]) && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {
        return [B[i], B[j], p];
      }
    }
  } // If we get here then something is very wrong.


  throw new Error();
}

function enclosesNot(a, b) {
  var dr = a.r - b.r,
      dx = b.x - a.x,
      dy = b.y - a.y;
  return dr < 0 || dr * dr < dx * dx + dy * dy;
}

function enclosesWeak(a, b) {
  var dr = a.r - b.r + 1e-6,
      dx = b.x - a.x,
      dy = b.y - a.y;
  return dr > 0 && dr * dr > dx * dx + dy * dy;
}

function enclosesWeakAll(a, B) {
  for (var i = 0; i < B.length; ++i) {
    if (!enclosesWeak(a, B[i])) {
      return false;
    }
  }

  return true;
}

function encloseBasis(B) {
  switch (B.length) {
    case 1:
      return encloseBasis1(B[0]);

    case 2:
      return encloseBasis2(B[0], B[1]);

    case 3:
      return encloseBasis3(B[0], B[1], B[2]);
  }
}

function encloseBasis1(a) {
  return {
    x: a.x,
    y: a.y,
    r: a.r
  };
}

function encloseBasis2(a, b) {
  var x1 = a.x,
      y1 = a.y,
      r1 = a.r,
      x2 = b.x,
      y2 = b.y,
      r2 = b.r,
      x21 = x2 - x1,
      y21 = y2 - y1,
      r21 = r2 - r1,
      l = Math.sqrt(x21 * x21 + y21 * y21);
  return {
    x: (x1 + x2 + x21 / l * r21) / 2,
    y: (y1 + y2 + y21 / l * r21) / 2,
    r: (l + r1 + r2) / 2
  };
}

function encloseBasis3(a, b, c) {
  var x1 = a.x,
      y1 = a.y,
      r1 = a.r,
      x2 = b.x,
      y2 = b.y,
      r2 = b.r,
      x3 = c.x,
      y3 = c.y,
      r3 = c.r,
      a2 = x1 - x2,
      a3 = x1 - x3,
      b2 = y1 - y2,
      b3 = y1 - y3,
      c2 = r2 - r1,
      c3 = r3 - r1,
      d1 = x1 * x1 + y1 * y1 - r1 * r1,
      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,
      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,
      ab = a3 * b2 - a2 * b3,
      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,
      xb = (b3 * c2 - b2 * c3) / ab,
      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,
      yb = (a2 * c3 - a3 * c2) / ab,
      A = xb * xb + yb * yb - 1,
      B = 2 * (r1 + xa * xb + ya * yb),
      C = xa * xa + ya * ya - r1 * r1,
      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);
  return {
    x: x1 + xa + xb * r,
    y: y1 + ya + yb * r,
    r: r
  };
}
},{"../array.js":"../../node_modules/d3-hierarchy/src/array.js"}],"../../node_modules/d3-hierarchy/src/pack/siblings.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.packEnclose = packEnclose;
exports.default = _default;

var _enclose = _interopRequireDefault(require("./enclose.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function place(b, a, c) {
  var dx = b.x - a.x,
      x,
      a2,
      dy = b.y - a.y,
      y,
      b2,
      d2 = dx * dx + dy * dy;

  if (d2) {
    a2 = a.r + c.r, a2 *= a2;
    b2 = b.r + c.r, b2 *= b2;

    if (a2 > b2) {
      x = (d2 + b2 - a2) / (2 * d2);
      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));
      c.x = b.x - x * dx - y * dy;
      c.y = b.y - x * dy + y * dx;
    } else {
      x = (d2 + a2 - b2) / (2 * d2);
      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));
      c.x = a.x + x * dx - y * dy;
      c.y = a.y + x * dy + y * dx;
    }
  } else {
    c.x = a.x + c.r;
    c.y = a.y;
  }
}

function intersects(a, b) {
  var dr = a.r + b.r - 1e-6,
      dx = b.x - a.x,
      dy = b.y - a.y;
  return dr > 0 && dr * dr > dx * dx + dy * dy;
}

function score(node) {
  var a = node._,
      b = node.next._,
      ab = a.r + b.r,
      dx = (a.x * b.r + b.x * a.r) / ab,
      dy = (a.y * b.r + b.y * a.r) / ab;
  return dx * dx + dy * dy;
}

function Node(circle) {
  this._ = circle;
  this.next = null;
  this.previous = null;
}

function packEnclose(circles) {
  if (!(n = circles.length)) return 0;
  var a, b, c, n, aa, ca, i, j, k, sj, sk; // Place the first circle.

  a = circles[0], a.x = 0, a.y = 0;
  if (!(n > 1)) return a.r; // Place the second circle.

  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;
  if (!(n > 2)) return a.r + b.r; // Place the third circle.

  place(b, a, c = circles[2]); // Initialize the front-chain using the first three circles a, b and c.

  a = new Node(a), b = new Node(b), c = new Node(c);
  a.next = c.previous = b;
  b.next = a.previous = c;
  c.next = b.previous = a; // Attempt to place each remaining circle…

  pack: for (i = 3; i < n; ++i) {
    place(a._, b._, c = circles[i]), c = new Node(c); // Find the closest intersecting circle on the front-chain, if any.
    // “Closeness” is determined by linear distance along the front-chain.
    // “Ahead” or “behind” is likewise determined by linear distance.

    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;

    do {
      if (sj <= sk) {
        if (intersects(j._, c._)) {
          b = j, a.next = b, b.previous = a, --i;
          continue pack;
        }

        sj += j._.r, j = j.next;
      } else {
        if (intersects(k._, c._)) {
          a = k, a.next = b, b.previous = a, --i;
          continue pack;
        }

        sk += k._.r, k = k.previous;
      }
    } while (j !== k.next); // Success! Insert the new circle c between a and b.


    c.previous = a, c.next = b, a.next = b.previous = b = c; // Compute the new closest circle pair to the centroid.

    aa = score(a);

    while ((c = c.next) !== b) {
      if ((ca = score(c)) < aa) {
        a = c, aa = ca;
      }
    }

    b = a.next;
  } // Compute the enclosing circle of the front chain.


  a = [b._], c = b;

  while ((c = c.next) !== b) a.push(c._);

  c = (0, _enclose.default)(a); // Translate the circles to put the enclosing circle around the origin.

  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;

  return c.r;
}

function _default(circles) {
  packEnclose(circles);
  return circles;
}
},{"./enclose.js":"../../node_modules/d3-hierarchy/src/pack/enclose.js"}],"../../node_modules/d3-hierarchy/src/accessors.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.optional = optional;
exports.required = required;

function optional(f) {
  return f == null ? null : required(f);
}

function required(f) {
  if (typeof f !== "function") throw new Error();
  return f;
}
},{}],"../../node_modules/d3-hierarchy/src/constant.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.constantZero = constantZero;
exports.default = _default;

function constantZero() {
  return 0;
}

function _default(x) {
  return function () {
    return x;
  };
}
},{}],"../../node_modules/d3-hierarchy/src/pack/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _siblings = require("./siblings.js");

var _accessors = require("../accessors.js");

var _constant = _interopRequireWildcard(require("../constant.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function defaultRadius(d) {
  return Math.sqrt(d.value);
}

function _default() {
  var radius = null,
      dx = 1,
      dy = 1,
      padding = _constant.constantZero;

  function pack(root) {
    root.x = dx / 2, root.y = dy / 2;

    if (radius) {
      root.eachBefore(radiusLeaf(radius)).eachAfter(packChildren(padding, 0.5)).eachBefore(translateChild(1));
    } else {
      root.eachBefore(radiusLeaf(defaultRadius)).eachAfter(packChildren(_constant.constantZero, 1)).eachAfter(packChildren(padding, root.r / Math.min(dx, dy))).eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));
    }

    return root;
  }

  pack.radius = function (x) {
    return arguments.length ? (radius = (0, _accessors.optional)(x), pack) : radius;
  };

  pack.size = function (x) {
    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];
  };

  pack.padding = function (x) {
    return arguments.length ? (padding = typeof x === "function" ? x : (0, _constant.default)(+x), pack) : padding;
  };

  return pack;
}

function radiusLeaf(radius) {
  return function (node) {
    if (!node.children) {
      node.r = Math.max(0, +radius(node) || 0);
    }
  };
}

function packChildren(padding, k) {
  return function (node) {
    if (children = node.children) {
      var children,
          i,
          n = children.length,
          r = padding(node) * k || 0,
          e;
      if (r) for (i = 0; i < n; ++i) children[i].r += r;
      e = (0, _siblings.packEnclose)(children);
      if (r) for (i = 0; i < n; ++i) children[i].r -= r;
      node.r = e + r;
    }
  };
}

function translateChild(k) {
  return function (node) {
    var parent = node.parent;
    node.r *= k;

    if (parent) {
      node.x = parent.x + k * node.x;
      node.y = parent.y + k * node.y;
    }
  };
}
},{"./siblings.js":"../../node_modules/d3-hierarchy/src/pack/siblings.js","../accessors.js":"../../node_modules/d3-hierarchy/src/accessors.js","../constant.js":"../../node_modules/d3-hierarchy/src/constant.js"}],"../../node_modules/d3-hierarchy/src/treemap/round.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(node) {
  node.x0 = Math.round(node.x0);
  node.y0 = Math.round(node.y0);
  node.x1 = Math.round(node.x1);
  node.y1 = Math.round(node.y1);
}
},{}],"../../node_modules/d3-hierarchy/src/treemap/dice.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(parent, x0, y0, x1, y1) {
  var nodes = parent.children,
      node,
      i = -1,
      n = nodes.length,
      k = parent.value && (x1 - x0) / parent.value;

  while (++i < n) {
    node = nodes[i], node.y0 = y0, node.y1 = y1;
    node.x0 = x0, node.x1 = x0 += node.value * k;
  }
}
},{}],"../../node_modules/d3-hierarchy/src/partition.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _round = _interopRequireDefault(require("./treemap/round.js"));

var _dice = _interopRequireDefault(require("./treemap/dice.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var dx = 1,
      dy = 1,
      padding = 0,
      round = false;

  function partition(root) {
    var n = root.height + 1;
    root.x0 = root.y0 = padding;
    root.x1 = dx;
    root.y1 = dy / n;
    root.eachBefore(positionNode(dy, n));
    if (round) root.eachBefore(_round.default);
    return root;
  }

  function positionNode(dy, n) {
    return function (node) {
      if (node.children) {
        (0, _dice.default)(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);
      }

      var x0 = node.x0,
          y0 = node.y0,
          x1 = node.x1 - padding,
          y1 = node.y1 - padding;
      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
      node.x0 = x0;
      node.y0 = y0;
      node.x1 = x1;
      node.y1 = y1;
    };
  }

  partition.round = function (x) {
    return arguments.length ? (round = !!x, partition) : round;
  };

  partition.size = function (x) {
    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];
  };

  partition.padding = function (x) {
    return arguments.length ? (padding = +x, partition) : padding;
  };

  return partition;
}
},{"./treemap/round.js":"../../node_modules/d3-hierarchy/src/treemap/round.js","./treemap/dice.js":"../../node_modules/d3-hierarchy/src/treemap/dice.js"}],"../../node_modules/d3-hierarchy/src/stratify.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _accessors = require("./accessors.js");

var _index = require("./hierarchy/index.js");

var keyPrefix = "$",
    // Protect against keys like “__proto__”.
preroot = {
  depth: -1
},
    ambiguous = {};

function defaultId(d) {
  return d.id;
}

function defaultParentId(d) {
  return d.parentId;
}

function _default() {
  var id = defaultId,
      parentId = defaultParentId;

  function stratify(data) {
    var d,
        i,
        n = data.length,
        root,
        parent,
        node,
        nodes = new Array(n),
        nodeId,
        nodeKey,
        nodeByKey = {};

    for (i = 0; i < n; ++i) {
      d = data[i], node = nodes[i] = new _index.Node(d);

      if ((nodeId = id(d, i, data)) != null && (nodeId += "")) {
        nodeKey = keyPrefix + (node.id = nodeId);
        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;
      }
    }

    for (i = 0; i < n; ++i) {
      node = nodes[i], nodeId = parentId(data[i], i, data);

      if (nodeId == null || !(nodeId += "")) {
        if (root) throw new Error("multiple roots");
        root = node;
      } else {
        parent = nodeByKey[keyPrefix + nodeId];
        if (!parent) throw new Error("missing: " + nodeId);
        if (parent === ambiguous) throw new Error("ambiguous: " + nodeId);
        if (parent.children) parent.children.push(node);else parent.children = [node];
        node.parent = parent;
      }
    }

    if (!root) throw new Error("no root");
    root.parent = preroot;
    root.eachBefore(function (node) {
      node.depth = node.parent.depth + 1;
      --n;
    }).eachBefore(_index.computeHeight);
    root.parent = null;
    if (n > 0) throw new Error("cycle");
    return root;
  }

  stratify.id = function (x) {
    return arguments.length ? (id = (0, _accessors.required)(x), stratify) : id;
  };

  stratify.parentId = function (x) {
    return arguments.length ? (parentId = (0, _accessors.required)(x), stratify) : parentId;
  };

  return stratify;
}
},{"./accessors.js":"../../node_modules/d3-hierarchy/src/accessors.js","./hierarchy/index.js":"../../node_modules/d3-hierarchy/src/hierarchy/index.js"}],"../../node_modules/d3-hierarchy/src/tree.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _index = require("./hierarchy/index.js");

function defaultSeparation(a, b) {
  return a.parent === b.parent ? 1 : 2;
} // function radialSeparation(a, b) {
//   return (a.parent === b.parent ? 1 : 2) / a.depth;
// }
// This function is used to traverse the left contour of a subtree (or
// subforest). It returns the successor of v on this contour. This successor is
// either given by the leftmost child of v or by the thread of v. The function
// returns null if and only if v is on the highest level of its subtree.


function nextLeft(v) {
  var children = v.children;
  return children ? children[0] : v.t;
} // This function works analogously to nextLeft.


function nextRight(v) {
  var children = v.children;
  return children ? children[children.length - 1] : v.t;
} // Shifts the current subtree rooted at w+. This is done by increasing
// prelim(w+) and mod(w+) by shift.


function moveSubtree(wm, wp, shift) {
  var change = shift / (wp.i - wm.i);
  wp.c -= change;
  wp.s += shift;
  wm.c += change;
  wp.z += shift;
  wp.m += shift;
} // All other shifts, applied to the smaller subtrees between w- and w+, are
// performed by this function. To prepare the shifts, we have to adjust
// change(w+), shift(w+), and change(w-).


function executeShifts(v) {
  var shift = 0,
      change = 0,
      children = v.children,
      i = children.length,
      w;

  while (--i >= 0) {
    w = children[i];
    w.z += shift;
    w.m += shift;
    shift += w.s + (change += w.c);
  }
} // If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,
// returns the specified (default) ancestor.


function nextAncestor(vim, v, ancestor) {
  return vim.a.parent === v.parent ? vim.a : ancestor;
}

function TreeNode(node, i) {
  this._ = node;
  this.parent = null;
  this.children = null;
  this.A = null; // default ancestor

  this.a = this; // ancestor

  this.z = 0; // prelim

  this.m = 0; // mod

  this.c = 0; // change

  this.s = 0; // shift

  this.t = null; // thread

  this.i = i; // number
}

TreeNode.prototype = Object.create(_index.Node.prototype);

function treeRoot(root) {
  var tree = new TreeNode(root, 0),
      node,
      nodes = [tree],
      child,
      children,
      i,
      n;

  while (node = nodes.pop()) {
    if (children = node._.children) {
      node.children = new Array(n = children.length);

      for (i = n - 1; i >= 0; --i) {
        nodes.push(child = node.children[i] = new TreeNode(children[i], i));
        child.parent = node;
      }
    }
  }

  (tree.parent = new TreeNode(null, 0)).children = [tree];
  return tree;
} // Node-link tree diagram using the Reingold-Tilford "tidy" algorithm


function _default() {
  var separation = defaultSeparation,
      dx = 1,
      dy = 1,
      nodeSize = null;

  function tree(root) {
    var t = treeRoot(root); // Compute the layout using Buchheim et al.’s algorithm.

    t.eachAfter(firstWalk), t.parent.m = -t.z;
    t.eachBefore(secondWalk); // If a fixed node size is specified, scale x and y.

    if (nodeSize) root.eachBefore(sizeNode); // If a fixed tree size is specified, scale x and y based on the extent.
    // Compute the left-most, right-most, and depth-most nodes for extents.
    else {
        var left = root,
            right = root,
            bottom = root;
        root.eachBefore(function (node) {
          if (node.x < left.x) left = node;
          if (node.x > right.x) right = node;
          if (node.depth > bottom.depth) bottom = node;
        });
        var s = left === right ? 1 : separation(left, right) / 2,
            tx = s - left.x,
            kx = dx / (right.x + s + tx),
            ky = dy / (bottom.depth || 1);
        root.eachBefore(function (node) {
          node.x = (node.x + tx) * kx;
          node.y = node.depth * ky;
        });
      }
    return root;
  } // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is
  // applied recursively to the children of v, as well as the function
  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the
  // node v is placed to the midpoint of its outermost children.


  function firstWalk(v) {
    var children = v.children,
        siblings = v.parent.children,
        w = v.i ? siblings[v.i - 1] : null;

    if (children) {
      executeShifts(v);
      var midpoint = (children[0].z + children[children.length - 1].z) / 2;

      if (w) {
        v.z = w.z + separation(v._, w._);
        v.m = v.z - midpoint;
      } else {
        v.z = midpoint;
      }
    } else if (w) {
      v.z = w.z + separation(v._, w._);
    }

    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);
  } // Computes all real x-coordinates by summing up the modifiers recursively.


  function secondWalk(v) {
    v._.x = v.z + v.parent.m;
    v.m += v.parent.m;
  } // The core of the algorithm. Here, a new subtree is combined with the
  // previous subtrees. Threads are used to traverse the inside and outside
  // contours of the left and right subtree up to the highest common level. The
  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the
  // superscript o means outside and i means inside, the subscript - means left
  // subtree and + means right subtree. For summing up the modifiers along the
  // contour, we use respective variables si+, si-, so-, and so+. Whenever two
  // nodes of the inside contours conflict, we compute the left one of the
  // greatest uncommon ancestors using the function ANCESTOR and call MOVE
  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.
  // Finally, we add a new thread (if necessary).


  function apportion(v, w, ancestor) {
    if (w) {
      var vip = v,
          vop = v,
          vim = w,
          vom = vip.parent.children[0],
          sip = vip.m,
          sop = vop.m,
          sim = vim.m,
          som = vom.m,
          shift;

      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {
        vom = nextLeft(vom);
        vop = nextRight(vop);
        vop.a = v;
        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);

        if (shift > 0) {
          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);
          sip += shift;
          sop += shift;
        }

        sim += vim.m;
        sip += vip.m;
        som += vom.m;
        sop += vop.m;
      }

      if (vim && !nextRight(vop)) {
        vop.t = vim;
        vop.m += sim - sop;
      }

      if (vip && !nextLeft(vom)) {
        vom.t = vip;
        vom.m += sip - som;
        ancestor = v;
      }
    }

    return ancestor;
  }

  function sizeNode(node) {
    node.x *= dx;
    node.y = node.depth * dy;
  }

  tree.separation = function (x) {
    return arguments.length ? (separation = x, tree) : separation;
  };

  tree.size = function (x) {
    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : nodeSize ? null : [dx, dy];
  };

  tree.nodeSize = function (x) {
    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : nodeSize ? [dx, dy] : null;
  };

  return tree;
}
},{"./hierarchy/index.js":"../../node_modules/d3-hierarchy/src/hierarchy/index.js"}],"../../node_modules/d3-hierarchy/src/treemap/slice.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(parent, x0, y0, x1, y1) {
  var nodes = parent.children,
      node,
      i = -1,
      n = nodes.length,
      k = parent.value && (y1 - y0) / parent.value;

  while (++i < n) {
    node = nodes[i], node.x0 = x0, node.x1 = x1;
    node.y0 = y0, node.y1 = y0 += node.value * k;
  }
}
},{}],"../../node_modules/d3-hierarchy/src/treemap/squarify.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.squarifyRatio = squarifyRatio;
exports.default = exports.phi = void 0;

var _dice = _interopRequireDefault(require("./dice.js"));

var _slice = _interopRequireDefault(require("./slice.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var phi = (1 + Math.sqrt(5)) / 2;
exports.phi = phi;

function squarifyRatio(ratio, parent, x0, y0, x1, y1) {
  var rows = [],
      nodes = parent.children,
      row,
      nodeValue,
      i0 = 0,
      i1 = 0,
      n = nodes.length,
      dx,
      dy,
      value = parent.value,
      sumValue,
      minValue,
      maxValue,
      newRatio,
      minRatio,
      alpha,
      beta;

  while (i0 < n) {
    dx = x1 - x0, dy = y1 - y0; // Find the next non-empty node.

    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);

    minValue = maxValue = sumValue;
    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);
    beta = sumValue * sumValue * alpha;
    minRatio = Math.max(maxValue / beta, beta / minValue); // Keep adding nodes while the aspect ratio maintains or improves.

    for (; i1 < n; ++i1) {
      sumValue += nodeValue = nodes[i1].value;
      if (nodeValue < minValue) minValue = nodeValue;
      if (nodeValue > maxValue) maxValue = nodeValue;
      beta = sumValue * sumValue * alpha;
      newRatio = Math.max(maxValue / beta, beta / minValue);

      if (newRatio > minRatio) {
        sumValue -= nodeValue;
        break;
      }

      minRatio = newRatio;
    } // Position and record the row orientation.


    rows.push(row = {
      value: sumValue,
      dice: dx < dy,
      children: nodes.slice(i0, i1)
    });
    if (row.dice) (0, _dice.default)(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);else (0, _slice.default)(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);
    value -= sumValue, i0 = i1;
  }

  return rows;
}

var _default = function custom(ratio) {
  function squarify(parent, x0, y0, x1, y1) {
    squarifyRatio(ratio, parent, x0, y0, x1, y1);
  }

  squarify.ratio = function (x) {
    return custom((x = +x) > 1 ? x : 1);
  };

  return squarify;
}(phi);

exports.default = _default;
},{"./dice.js":"../../node_modules/d3-hierarchy/src/treemap/dice.js","./slice.js":"../../node_modules/d3-hierarchy/src/treemap/slice.js"}],"../../node_modules/d3-hierarchy/src/treemap/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _round = _interopRequireDefault(require("./round.js"));

var _squarify = _interopRequireDefault(require("./squarify.js"));

var _accessors = require("../accessors.js");

var _constant = _interopRequireWildcard(require("../constant.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var tile = _squarify.default,
      round = false,
      dx = 1,
      dy = 1,
      paddingStack = [0],
      paddingInner = _constant.constantZero,
      paddingTop = _constant.constantZero,
      paddingRight = _constant.constantZero,
      paddingBottom = _constant.constantZero,
      paddingLeft = _constant.constantZero;

  function treemap(root) {
    root.x0 = root.y0 = 0;
    root.x1 = dx;
    root.y1 = dy;
    root.eachBefore(positionNode);
    paddingStack = [0];
    if (round) root.eachBefore(_round.default);
    return root;
  }

  function positionNode(node) {
    var p = paddingStack[node.depth],
        x0 = node.x0 + p,
        y0 = node.y0 + p,
        x1 = node.x1 - p,
        y1 = node.y1 - p;
    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
    node.x0 = x0;
    node.y0 = y0;
    node.x1 = x1;
    node.y1 = y1;

    if (node.children) {
      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;
      x0 += paddingLeft(node) - p;
      y0 += paddingTop(node) - p;
      x1 -= paddingRight(node) - p;
      y1 -= paddingBottom(node) - p;
      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;
      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;
      tile(node, x0, y0, x1, y1);
    }
  }

  treemap.round = function (x) {
    return arguments.length ? (round = !!x, treemap) : round;
  };

  treemap.size = function (x) {
    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];
  };

  treemap.tile = function (x) {
    return arguments.length ? (tile = (0, _accessors.required)(x), treemap) : tile;
  };

  treemap.padding = function (x) {
    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();
  };

  treemap.paddingInner = function (x) {
    return arguments.length ? (paddingInner = typeof x === "function" ? x : (0, _constant.default)(+x), treemap) : paddingInner;
  };

  treemap.paddingOuter = function (x) {
    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();
  };

  treemap.paddingTop = function (x) {
    return arguments.length ? (paddingTop = typeof x === "function" ? x : (0, _constant.default)(+x), treemap) : paddingTop;
  };

  treemap.paddingRight = function (x) {
    return arguments.length ? (paddingRight = typeof x === "function" ? x : (0, _constant.default)(+x), treemap) : paddingRight;
  };

  treemap.paddingBottom = function (x) {
    return arguments.length ? (paddingBottom = typeof x === "function" ? x : (0, _constant.default)(+x), treemap) : paddingBottom;
  };

  treemap.paddingLeft = function (x) {
    return arguments.length ? (paddingLeft = typeof x === "function" ? x : (0, _constant.default)(+x), treemap) : paddingLeft;
  };

  return treemap;
}
},{"./round.js":"../../node_modules/d3-hierarchy/src/treemap/round.js","./squarify.js":"../../node_modules/d3-hierarchy/src/treemap/squarify.js","../accessors.js":"../../node_modules/d3-hierarchy/src/accessors.js","../constant.js":"../../node_modules/d3-hierarchy/src/constant.js"}],"../../node_modules/d3-hierarchy/src/treemap/binary.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(parent, x0, y0, x1, y1) {
  var nodes = parent.children,
      i,
      n = nodes.length,
      sum,
      sums = new Array(n + 1);

  for (sums[0] = sum = i = 0; i < n; ++i) {
    sums[i + 1] = sum += nodes[i].value;
  }

  partition(0, n, parent.value, x0, y0, x1, y1);

  function partition(i, j, value, x0, y0, x1, y1) {
    if (i >= j - 1) {
      var node = nodes[i];
      node.x0 = x0, node.y0 = y0;
      node.x1 = x1, node.y1 = y1;
      return;
    }

    var valueOffset = sums[i],
        valueTarget = value / 2 + valueOffset,
        k = i + 1,
        hi = j - 1;

    while (k < hi) {
      var mid = k + hi >>> 1;
      if (sums[mid] < valueTarget) k = mid + 1;else hi = mid;
    }

    if (valueTarget - sums[k - 1] < sums[k] - valueTarget && i + 1 < k) --k;
    var valueLeft = sums[k] - valueOffset,
        valueRight = value - valueLeft;

    if (x1 - x0 > y1 - y0) {
      var xk = (x0 * valueRight + x1 * valueLeft) / value;
      partition(i, k, valueLeft, x0, y0, xk, y1);
      partition(k, j, valueRight, xk, y0, x1, y1);
    } else {
      var yk = (y0 * valueRight + y1 * valueLeft) / value;
      partition(i, k, valueLeft, x0, y0, x1, yk);
      partition(k, j, valueRight, x0, yk, x1, y1);
    }
  }
}
},{}],"../../node_modules/d3-hierarchy/src/treemap/sliceDice.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _dice = _interopRequireDefault(require("./dice.js"));

var _slice = _interopRequireDefault(require("./slice.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(parent, x0, y0, x1, y1) {
  (parent.depth & 1 ? _slice.default : _dice.default)(parent, x0, y0, x1, y1);
}
},{"./dice.js":"../../node_modules/d3-hierarchy/src/treemap/dice.js","./slice.js":"../../node_modules/d3-hierarchy/src/treemap/slice.js"}],"../../node_modules/d3-hierarchy/src/treemap/resquarify.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _dice = _interopRequireDefault(require("./dice.js"));

var _slice = _interopRequireDefault(require("./slice.js"));

var _squarify = require("./squarify.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function custom(ratio) {
  function resquarify(parent, x0, y0, x1, y1) {
    if ((rows = parent._squarify) && rows.ratio === ratio) {
      var rows,
          row,
          nodes,
          i,
          j = -1,
          n,
          m = rows.length,
          value = parent.value;

      while (++j < m) {
        row = rows[j], nodes = row.children;

        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;

        if (row.dice) (0, _dice.default)(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);else (0, _slice.default)(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);
        value -= row.value;
      }
    } else {
      parent._squarify = rows = (0, _squarify.squarifyRatio)(ratio, parent, x0, y0, x1, y1);
      rows.ratio = ratio;
    }
  }

  resquarify.ratio = function (x) {
    return custom((x = +x) > 1 ? x : 1);
  };

  return resquarify;
}(_squarify.phi);

exports.default = _default;
},{"./dice.js":"../../node_modules/d3-hierarchy/src/treemap/dice.js","./slice.js":"../../node_modules/d3-hierarchy/src/treemap/slice.js","./squarify.js":"../../node_modules/d3-hierarchy/src/treemap/squarify.js"}],"../../node_modules/d3-hierarchy/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "cluster", {
  enumerable: true,
  get: function () {
    return _cluster.default;
  }
});
Object.defineProperty(exports, "hierarchy", {
  enumerable: true,
  get: function () {
    return _index.default;
  }
});
Object.defineProperty(exports, "pack", {
  enumerable: true,
  get: function () {
    return _index2.default;
  }
});
Object.defineProperty(exports, "packSiblings", {
  enumerable: true,
  get: function () {
    return _siblings.default;
  }
});
Object.defineProperty(exports, "packEnclose", {
  enumerable: true,
  get: function () {
    return _enclose.default;
  }
});
Object.defineProperty(exports, "partition", {
  enumerable: true,
  get: function () {
    return _partition.default;
  }
});
Object.defineProperty(exports, "stratify", {
  enumerable: true,
  get: function () {
    return _stratify.default;
  }
});
Object.defineProperty(exports, "tree", {
  enumerable: true,
  get: function () {
    return _tree.default;
  }
});
Object.defineProperty(exports, "treemap", {
  enumerable: true,
  get: function () {
    return _index3.default;
  }
});
Object.defineProperty(exports, "treemapBinary", {
  enumerable: true,
  get: function () {
    return _binary.default;
  }
});
Object.defineProperty(exports, "treemapDice", {
  enumerable: true,
  get: function () {
    return _dice.default;
  }
});
Object.defineProperty(exports, "treemapSlice", {
  enumerable: true,
  get: function () {
    return _slice.default;
  }
});
Object.defineProperty(exports, "treemapSliceDice", {
  enumerable: true,
  get: function () {
    return _sliceDice.default;
  }
});
Object.defineProperty(exports, "treemapSquarify", {
  enumerable: true,
  get: function () {
    return _squarify.default;
  }
});
Object.defineProperty(exports, "treemapResquarify", {
  enumerable: true,
  get: function () {
    return _resquarify.default;
  }
});

var _cluster = _interopRequireDefault(require("./cluster.js"));

var _index = _interopRequireDefault(require("./hierarchy/index.js"));

var _index2 = _interopRequireDefault(require("./pack/index.js"));

var _siblings = _interopRequireDefault(require("./pack/siblings.js"));

var _enclose = _interopRequireDefault(require("./pack/enclose.js"));

var _partition = _interopRequireDefault(require("./partition.js"));

var _stratify = _interopRequireDefault(require("./stratify.js"));

var _tree = _interopRequireDefault(require("./tree.js"));

var _index3 = _interopRequireDefault(require("./treemap/index.js"));

var _binary = _interopRequireDefault(require("./treemap/binary.js"));

var _dice = _interopRequireDefault(require("./treemap/dice.js"));

var _slice = _interopRequireDefault(require("./treemap/slice.js"));

var _sliceDice = _interopRequireDefault(require("./treemap/sliceDice.js"));

var _squarify = _interopRequireDefault(require("./treemap/squarify.js"));

var _resquarify = _interopRequireDefault(require("./treemap/resquarify.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./cluster.js":"../../node_modules/d3-hierarchy/src/cluster.js","./hierarchy/index.js":"../../node_modules/d3-hierarchy/src/hierarchy/index.js","./pack/index.js":"../../node_modules/d3-hierarchy/src/pack/index.js","./pack/siblings.js":"../../node_modules/d3-hierarchy/src/pack/siblings.js","./pack/enclose.js":"../../node_modules/d3-hierarchy/src/pack/enclose.js","./partition.js":"../../node_modules/d3-hierarchy/src/partition.js","./stratify.js":"../../node_modules/d3-hierarchy/src/stratify.js","./tree.js":"../../node_modules/d3-hierarchy/src/tree.js","./treemap/index.js":"../../node_modules/d3-hierarchy/src/treemap/index.js","./treemap/binary.js":"../../node_modules/d3-hierarchy/src/treemap/binary.js","./treemap/dice.js":"../../node_modules/d3-hierarchy/src/treemap/dice.js","./treemap/slice.js":"../../node_modules/d3-hierarchy/src/treemap/slice.js","./treemap/sliceDice.js":"../../node_modules/d3-hierarchy/src/treemap/sliceDice.js","./treemap/squarify.js":"../../node_modules/d3-hierarchy/src/treemap/squarify.js","./treemap/resquarify.js":"../../node_modules/d3-hierarchy/src/treemap/resquarify.js"}],"../../node_modules/d3-polygon/src/area.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(polygon) {
  var i = -1,
      n = polygon.length,
      a,
      b = polygon[n - 1],
      area = 0;

  while (++i < n) {
    a = b;
    b = polygon[i];
    area += a[1] * b[0] - a[0] * b[1];
  }

  return area / 2;
}
},{}],"../../node_modules/d3-polygon/src/centroid.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(polygon) {
  var i = -1,
      n = polygon.length,
      x = 0,
      y = 0,
      a,
      b = polygon[n - 1],
      c,
      k = 0;

  while (++i < n) {
    a = b;
    b = polygon[i];
    k += c = a[0] * b[1] - b[0] * a[1];
    x += (a[0] + b[0]) * c;
    y += (a[1] + b[1]) * c;
  }

  return k *= 3, [x / k, y / k];
}
},{}],"../../node_modules/d3-polygon/src/cross.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of
// the 3D cross product in a quadrant I Cartesian coordinate system (+x is
// right, +y is up). Returns a positive value if ABC is counter-clockwise,
// negative if clockwise, and zero if the points are collinear.
function _default(a, b, c) {
  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);
}
},{}],"../../node_modules/d3-polygon/src/hull.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _cross = _interopRequireDefault(require("./cross.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function lexicographicOrder(a, b) {
  return a[0] - b[0] || a[1] - b[1];
} // Computes the upper convex hull per the monotone chain algorithm.
// Assumes points.length >= 3, is sorted by x, unique in y.
// Returns an array of indices into points in left-to-right order.


function computeUpperHullIndexes(points) {
  var n = points.length,
      indexes = [0, 1],
      size = 2;

  for (var i = 2; i < n; ++i) {
    while (size > 1 && (0, _cross.default)(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;

    indexes[size++] = i;
  }

  return indexes.slice(0, size); // remove popped points
}

function _default(points) {
  if ((n = points.length) < 3) return null;
  var i,
      n,
      sortedPoints = new Array(n),
      flippedPoints = new Array(n);

  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];

  sortedPoints.sort(lexicographicOrder);

  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];

  var upperIndexes = computeUpperHullIndexes(sortedPoints),
      lowerIndexes = computeUpperHullIndexes(flippedPoints); // Construct the hull polygon, removing possible duplicate endpoints.

  var skipLeft = lowerIndexes[0] === upperIndexes[0],
      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],
      hull = []; // Add upper hull in right-to-l order.
  // Then add lower hull in left-to-right order.

  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);

  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);

  return hull;
}
},{"./cross.js":"../../node_modules/d3-polygon/src/cross.js"}],"../../node_modules/d3-polygon/src/contains.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(polygon, point) {
  var n = polygon.length,
      p = polygon[n - 1],
      x = point[0],
      y = point[1],
      x0 = p[0],
      y0 = p[1],
      x1,
      y1,
      inside = false;

  for (var i = 0; i < n; ++i) {
    p = polygon[i], x1 = p[0], y1 = p[1];
    if (y1 > y !== y0 > y && x < (x0 - x1) * (y - y1) / (y0 - y1) + x1) inside = !inside;
    x0 = x1, y0 = y1;
  }

  return inside;
}
},{}],"../../node_modules/d3-polygon/src/length.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(polygon) {
  var i = -1,
      n = polygon.length,
      b = polygon[n - 1],
      xa,
      ya,
      xb = b[0],
      yb = b[1],
      perimeter = 0;

  while (++i < n) {
    xa = xb;
    ya = yb;
    b = polygon[i];
    xb = b[0];
    yb = b[1];
    xa -= xb;
    ya -= yb;
    perimeter += Math.sqrt(xa * xa + ya * ya);
  }

  return perimeter;
}
},{}],"../../node_modules/d3-polygon/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "polygonArea", {
  enumerable: true,
  get: function () {
    return _area.default;
  }
});
Object.defineProperty(exports, "polygonCentroid", {
  enumerable: true,
  get: function () {
    return _centroid.default;
  }
});
Object.defineProperty(exports, "polygonHull", {
  enumerable: true,
  get: function () {
    return _hull.default;
  }
});
Object.defineProperty(exports, "polygonContains", {
  enumerable: true,
  get: function () {
    return _contains.default;
  }
});
Object.defineProperty(exports, "polygonLength", {
  enumerable: true,
  get: function () {
    return _length.default;
  }
});

var _area = _interopRequireDefault(require("./area.js"));

var _centroid = _interopRequireDefault(require("./centroid.js"));

var _hull = _interopRequireDefault(require("./hull.js"));

var _contains = _interopRequireDefault(require("./contains.js"));

var _length = _interopRequireDefault(require("./length.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./area.js":"../../node_modules/d3-polygon/src/area.js","./centroid.js":"../../node_modules/d3-polygon/src/centroid.js","./hull.js":"../../node_modules/d3-polygon/src/hull.js","./contains.js":"../../node_modules/d3-polygon/src/contains.js","./length.js":"../../node_modules/d3-polygon/src/length.js"}],"../../node_modules/d3-random/src/defaultSource.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {
  return Math.random();
}
},{}],"../../node_modules/d3-random/src/uniform.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomUniform(source) {
  function randomUniform(min, max) {
    min = min == null ? 0 : +min;
    max = max == null ? 1 : +max;
    if (arguments.length === 1) max = min, min = 0;else max -= min;
    return function () {
      return source() * max + min;
    };
  }

  randomUniform.source = sourceRandomUniform;
  return randomUniform;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource":"../../node_modules/d3-random/src/defaultSource.js"}],"../../node_modules/d3-random/src/normal.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomNormal(source) {
  function randomNormal(mu, sigma) {
    var x, r;
    mu = mu == null ? 0 : +mu;
    sigma = sigma == null ? 1 : +sigma;
    return function () {
      var y; // If available, use the second previously-generated uniform random.

      if (x != null) y = x, x = null; // Otherwise, generate a new x and y.
      else do {
          x = source() * 2 - 1;
          y = source() * 2 - 1;
          r = x * x + y * y;
        } while (!r || r > 1);
      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);
    };
  }

  randomNormal.source = sourceRandomNormal;
  return randomNormal;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource":"../../node_modules/d3-random/src/defaultSource.js"}],"../../node_modules/d3-random/src/logNormal.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource"));

var _normal = _interopRequireDefault(require("./normal"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomLogNormal(source) {
  function randomLogNormal() {
    var randomNormal = _normal.default.source(source).apply(this, arguments);

    return function () {
      return Math.exp(randomNormal());
    };
  }

  randomLogNormal.source = sourceRandomLogNormal;
  return randomLogNormal;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource":"../../node_modules/d3-random/src/defaultSource.js","./normal":"../../node_modules/d3-random/src/normal.js"}],"../../node_modules/d3-random/src/irwinHall.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomIrwinHall(source) {
  function randomIrwinHall(n) {
    return function () {
      for (var sum = 0, i = 0; i < n; ++i) sum += source();

      return sum;
    };
  }

  randomIrwinHall.source = sourceRandomIrwinHall;
  return randomIrwinHall;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource":"../../node_modules/d3-random/src/defaultSource.js"}],"../../node_modules/d3-random/src/bates.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource"));

var _irwinHall = _interopRequireDefault(require("./irwinHall"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomBates(source) {
  function randomBates(n) {
    var randomIrwinHall = _irwinHall.default.source(source)(n);

    return function () {
      return randomIrwinHall() / n;
    };
  }

  randomBates.source = sourceRandomBates;
  return randomBates;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource":"../../node_modules/d3-random/src/defaultSource.js","./irwinHall":"../../node_modules/d3-random/src/irwinHall.js"}],"../../node_modules/d3-random/src/exponential.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _defaultSource = _interopRequireDefault(require("./defaultSource"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = function sourceRandomExponential(source) {
  function randomExponential(lambda) {
    return function () {
      return -Math.log(1 - source()) / lambda;
    };
  }

  randomExponential.source = sourceRandomExponential;
  return randomExponential;
}(_defaultSource.default);

exports.default = _default;
},{"./defaultSource":"../../node_modules/d3-random/src/defaultSource.js"}],"../../node_modules/d3-random/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "randomUniform", {
  enumerable: true,
  get: function () {
    return _uniform.default;
  }
});
Object.defineProperty(exports, "randomNormal", {
  enumerable: true,
  get: function () {
    return _normal.default;
  }
});
Object.defineProperty(exports, "randomLogNormal", {
  enumerable: true,
  get: function () {
    return _logNormal.default;
  }
});
Object.defineProperty(exports, "randomBates", {
  enumerable: true,
  get: function () {
    return _bates.default;
  }
});
Object.defineProperty(exports, "randomIrwinHall", {
  enumerable: true,
  get: function () {
    return _irwinHall.default;
  }
});
Object.defineProperty(exports, "randomExponential", {
  enumerable: true,
  get: function () {
    return _exponential.default;
  }
});

var _uniform = _interopRequireDefault(require("./uniform"));

var _normal = _interopRequireDefault(require("./normal"));

var _logNormal = _interopRequireDefault(require("./logNormal"));

var _bates = _interopRequireDefault(require("./bates"));

var _irwinHall = _interopRequireDefault(require("./irwinHall"));

var _exponential = _interopRequireDefault(require("./exponential"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./uniform":"../../node_modules/d3-random/src/uniform.js","./normal":"../../node_modules/d3-random/src/normal.js","./logNormal":"../../node_modules/d3-random/src/logNormal.js","./bates":"../../node_modules/d3-random/src/bates.js","./irwinHall":"../../node_modules/d3-random/src/irwinHall.js","./exponential":"../../node_modules/d3-random/src/exponential.js"}],"../../node_modules/d3-scale/src/init.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initRange = initRange;
exports.initInterpolator = initInterpolator;

function initRange(domain, range) {
  switch (arguments.length) {
    case 0:
      break;

    case 1:
      this.range(domain);
      break;

    default:
      this.range(range).domain(domain);
      break;
  }

  return this;
}

function initInterpolator(domain, interpolator) {
  switch (arguments.length) {
    case 0:
      break;

    case 1:
      this.interpolator(domain);
      break;

    default:
      this.interpolator(interpolator).domain(domain);
      break;
  }

  return this;
}
},{}],"../../node_modules/d3-scale/src/array.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.slice = exports.map = void 0;
var array = Array.prototype;
var map = array.map;
exports.map = map;
var slice = array.slice;
exports.slice = slice;
},{}],"../../node_modules/d3-scale/src/ordinal.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ordinal;
exports.implicit = void 0;

var _d3Collection = require("d3-collection");

var _array = require("./array");

var _init = require("./init");

var implicit = {
  name: "implicit"
};
exports.implicit = implicit;

function ordinal() {
  var index = (0, _d3Collection.map)(),
      domain = [],
      range = [],
      unknown = implicit;

  function scale(d) {
    var key = d + "",
        i = index.get(key);

    if (!i) {
      if (unknown !== implicit) return unknown;
      index.set(key, i = domain.push(d));
    }

    return range[(i - 1) % range.length];
  }

  scale.domain = function (_) {
    if (!arguments.length) return domain.slice();
    domain = [], index = (0, _d3Collection.map)();
    var i = -1,
        n = _.length,
        d,
        key;

    while (++i < n) if (!index.has(key = (d = _[i]) + "")) index.set(key, domain.push(d));

    return scale;
  };

  scale.range = function (_) {
    return arguments.length ? (range = _array.slice.call(_), scale) : range.slice();
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function () {
    return ordinal(domain, range).unknown(unknown);
  };

  _init.initRange.apply(scale, arguments);

  return scale;
}
},{"d3-collection":"../../node_modules/d3-collection/src/index.js","./array":"../../node_modules/d3-scale/src/array.js","./init":"../../node_modules/d3-scale/src/init.js"}],"../../node_modules/d3-scale/src/band.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = band;
exports.point = point;

var _d3Array = require("d3-array");

var _init = require("./init");

var _ordinal = _interopRequireDefault(require("./ordinal"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function band() {
  var scale = (0, _ordinal.default)().unknown(undefined),
      domain = scale.domain,
      ordinalRange = scale.range,
      range = [0, 1],
      step,
      bandwidth,
      round = false,
      paddingInner = 0,
      paddingOuter = 0,
      align = 0.5;
  delete scale.unknown;

  function rescale() {
    var n = domain().length,
        reverse = range[1] < range[0],
        start = range[reverse - 0],
        stop = range[1 - reverse];
    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);
    if (round) step = Math.floor(step);
    start += (stop - start - step * (n - paddingInner)) * align;
    bandwidth = step * (1 - paddingInner);
    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);
    var values = (0, _d3Array.range)(n).map(function (i) {
      return start + step * i;
    });
    return ordinalRange(reverse ? values.reverse() : values);
  }

  scale.domain = function (_) {
    return arguments.length ? (domain(_), rescale()) : domain();
  };

  scale.range = function (_) {
    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();
  };

  scale.rangeRound = function (_) {
    return range = [+_[0], +_[1]], round = true, rescale();
  };

  scale.bandwidth = function () {
    return bandwidth;
  };

  scale.step = function () {
    return step;
  };

  scale.round = function (_) {
    return arguments.length ? (round = !!_, rescale()) : round;
  };

  scale.padding = function (_) {
    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;
  };

  scale.paddingInner = function (_) {
    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;
  };

  scale.paddingOuter = function (_) {
    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;
  };

  scale.align = function (_) {
    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;
  };

  scale.copy = function () {
    return band(domain(), range).round(round).paddingInner(paddingInner).paddingOuter(paddingOuter).align(align);
  };

  return _init.initRange.apply(rescale(), arguments);
}

function pointish(scale) {
  var copy = scale.copy;
  scale.padding = scale.paddingOuter;
  delete scale.paddingInner;
  delete scale.paddingOuter;

  scale.copy = function () {
    return pointish(copy());
  };

  return scale;
}

function point() {
  return pointish(band.apply(null, arguments).paddingInner(1));
}
},{"d3-array":"../../node_modules/d3-array/src/index.js","./init":"../../node_modules/d3-scale/src/init.js","./ordinal":"../../node_modules/d3-scale/src/ordinal.js"}],"../../node_modules/d3-scale/src/constant.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return function () {
    return x;
  };
}
},{}],"../../node_modules/d3-scale/src/number.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return +x;
}
},{}],"../../node_modules/d3-scale/src/continuous.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.identity = identity;
exports.copy = copy;
exports.transformer = transformer;
exports.default = continuous;

var _d3Array = require("d3-array");

var _d3Interpolate = require("d3-interpolate");

var _array = require("./array");

var _constant = _interopRequireDefault(require("./constant"));

var _number = _interopRequireDefault(require("./number"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var unit = [0, 1];

function identity(x) {
  return x;
}

function normalize(a, b) {
  return (b -= a = +a) ? function (x) {
    return (x - a) / b;
  } : (0, _constant.default)(isNaN(b) ? NaN : 0.5);
}

function clamper(domain) {
  var a = domain[0],
      b = domain[domain.length - 1],
      t;
  if (a > b) t = a, a = b, b = t;
  return function (x) {
    return Math.max(a, Math.min(b, x));
  };
} // normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].
// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].


function bimap(domain, range, interpolate) {
  var d0 = domain[0],
      d1 = domain[1],
      r0 = range[0],
      r1 = range[1];
  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);
  return function (x) {
    return r0(d0(x));
  };
}

function polymap(domain, range, interpolate) {
  var j = Math.min(domain.length, range.length) - 1,
      d = new Array(j),
      r = new Array(j),
      i = -1; // Reverse descending domains.

  if (domain[j] < domain[0]) {
    domain = domain.slice().reverse();
    range = range.slice().reverse();
  }

  while (++i < j) {
    d[i] = normalize(domain[i], domain[i + 1]);
    r[i] = interpolate(range[i], range[i + 1]);
  }

  return function (x) {
    var i = (0, _d3Array.bisect)(domain, x, 1, j) - 1;
    return r[i](d[i](x));
  };
}

function copy(source, target) {
  return target.domain(source.domain()).range(source.range()).interpolate(source.interpolate()).clamp(source.clamp()).unknown(source.unknown());
}

function transformer() {
  var domain = unit,
      range = unit,
      interpolate = _d3Interpolate.interpolate,
      transform,
      untransform,
      unknown,
      clamp = identity,
      piecewise,
      output,
      input;

  function rescale() {
    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;
    output = input = null;
    return scale;
  }

  function scale(x) {
    return isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));
  }

  scale.invert = function (y) {
    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), _d3Interpolate.interpolateNumber)))(y)));
  };

  scale.domain = function (_) {
    return arguments.length ? (domain = _array.map.call(_, _number.default), clamp === identity || (clamp = clamper(domain)), rescale()) : domain.slice();
  };

  scale.range = function (_) {
    return arguments.length ? (range = _array.slice.call(_), rescale()) : range.slice();
  };

  scale.rangeRound = function (_) {
    return range = _array.slice.call(_), interpolate = _d3Interpolate.interpolateRound, rescale();
  };

  scale.clamp = function (_) {
    return arguments.length ? (clamp = _ ? clamper(domain) : identity, scale) : clamp !== identity;
  };

  scale.interpolate = function (_) {
    return arguments.length ? (interpolate = _, rescale()) : interpolate;
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  return function (t, u) {
    transform = t, untransform = u;
    return rescale();
  };
}

function continuous(transform, untransform) {
  return transformer()(transform, untransform);
}
},{"d3-array":"../../node_modules/d3-array/src/index.js","d3-interpolate":"../../node_modules/d3-interpolate/src/index.js","./array":"../../node_modules/d3-scale/src/array.js","./constant":"../../node_modules/d3-scale/src/constant.js","./number":"../../node_modules/d3-scale/src/number.js"}],"../../node_modules/d3-scale/src/tickFormat.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Array = require("d3-array");

var _d3Format = require("d3-format");

function _default(start, stop, count, specifier) {
  var step = (0, _d3Array.tickStep)(start, stop, count),
      precision;
  specifier = (0, _d3Format.formatSpecifier)(specifier == null ? ",f" : specifier);

  switch (specifier.type) {
    case "s":
      {
        var value = Math.max(Math.abs(start), Math.abs(stop));
        if (specifier.precision == null && !isNaN(precision = (0, _d3Format.precisionPrefix)(step, value))) specifier.precision = precision;
        return (0, _d3Format.formatPrefix)(specifier, value);
      }

    case "":
    case "e":
    case "g":
    case "p":
    case "r":
      {
        if (specifier.precision == null && !isNaN(precision = (0, _d3Format.precisionRound)(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === "e");
        break;
      }

    case "f":
    case "%":
      {
        if (specifier.precision == null && !isNaN(precision = (0, _d3Format.precisionFixed)(step))) specifier.precision = precision - (specifier.type === "%") * 2;
        break;
      }
  }

  return (0, _d3Format.format)(specifier);
}
},{"d3-array":"../../node_modules/d3-array/src/index.js","d3-format":"../../node_modules/d3-format/src/index.js"}],"../../node_modules/d3-scale/src/linear.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.linearish = linearish;
exports.default = linear;

var _d3Array = require("d3-array");

var _continuous = _interopRequireWildcard(require("./continuous"));

var _init = require("./init");

var _tickFormat = _interopRequireDefault(require("./tickFormat"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function linearish(scale) {
  var domain = scale.domain;

  scale.ticks = function (count) {
    var d = domain();
    return (0, _d3Array.ticks)(d[0], d[d.length - 1], count == null ? 10 : count);
  };

  scale.tickFormat = function (count, specifier) {
    var d = domain();
    return (0, _tickFormat.default)(d[0], d[d.length - 1], count == null ? 10 : count, specifier);
  };

  scale.nice = function (count) {
    if (count == null) count = 10;
    var d = domain(),
        i0 = 0,
        i1 = d.length - 1,
        start = d[i0],
        stop = d[i1],
        step;

    if (stop < start) {
      step = start, start = stop, stop = step;
      step = i0, i0 = i1, i1 = step;
    }

    step = (0, _d3Array.tickIncrement)(start, stop, count);

    if (step > 0) {
      start = Math.floor(start / step) * step;
      stop = Math.ceil(stop / step) * step;
      step = (0, _d3Array.tickIncrement)(start, stop, count);
    } else if (step < 0) {
      start = Math.ceil(start * step) / step;
      stop = Math.floor(stop * step) / step;
      step = (0, _d3Array.tickIncrement)(start, stop, count);
    }

    if (step > 0) {
      d[i0] = Math.floor(start / step) * step;
      d[i1] = Math.ceil(stop / step) * step;
      domain(d);
    } else if (step < 0) {
      d[i0] = Math.ceil(start * step) / step;
      d[i1] = Math.floor(stop * step) / step;
      domain(d);
    }

    return scale;
  };

  return scale;
}

function linear() {
  var scale = (0, _continuous.default)(_continuous.identity, _continuous.identity);

  scale.copy = function () {
    return (0, _continuous.copy)(scale, linear());
  };

  _init.initRange.apply(scale, arguments);

  return linearish(scale);
}
},{"d3-array":"../../node_modules/d3-array/src/index.js","./continuous":"../../node_modules/d3-scale/src/continuous.js","./init":"../../node_modules/d3-scale/src/init.js","./tickFormat":"../../node_modules/d3-scale/src/tickFormat.js"}],"../../node_modules/d3-scale/src/identity.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = identity;

var _array = require("./array");

var _linear = require("./linear");

var _number = _interopRequireDefault(require("./number"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function identity(domain) {
  var unknown;

  function scale(x) {
    return isNaN(x = +x) ? unknown : x;
  }

  scale.invert = scale;

  scale.domain = scale.range = function (_) {
    return arguments.length ? (domain = _array.map.call(_, _number.default), scale) : domain.slice();
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function () {
    return identity(domain).unknown(unknown);
  };

  domain = arguments.length ? _array.map.call(domain, _number.default) : [0, 1];
  return (0, _linear.linearish)(scale);
}
},{"./array":"../../node_modules/d3-scale/src/array.js","./linear":"../../node_modules/d3-scale/src/linear.js","./number":"../../node_modules/d3-scale/src/number.js"}],"../../node_modules/d3-scale/src/nice.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(domain, interval) {
  domain = domain.slice();
  var i0 = 0,
      i1 = domain.length - 1,
      x0 = domain[i0],
      x1 = domain[i1],
      t;

  if (x1 < x0) {
    t = i0, i0 = i1, i1 = t;
    t = x0, x0 = x1, x1 = t;
  }

  domain[i0] = interval.floor(x0);
  domain[i1] = interval.ceil(x1);
  return domain;
}
},{}],"../../node_modules/d3-scale/src/log.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.loggish = loggish;
exports.default = log;

var _d3Array = require("d3-array");

var _d3Format = require("d3-format");

var _nice = _interopRequireDefault(require("./nice"));

var _continuous = require("./continuous");

var _init = require("./init");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function transformLog(x) {
  return Math.log(x);
}

function transformExp(x) {
  return Math.exp(x);
}

function transformLogn(x) {
  return -Math.log(-x);
}

function transformExpn(x) {
  return -Math.exp(-x);
}

function pow10(x) {
  return isFinite(x) ? +("1e" + x) : x < 0 ? 0 : x;
}

function powp(base) {
  return base === 10 ? pow10 : base === Math.E ? Math.exp : function (x) {
    return Math.pow(base, x);
  };
}

function logp(base) {
  return base === Math.E ? Math.log : base === 10 && Math.log10 || base === 2 && Math.log2 || (base = Math.log(base), function (x) {
    return Math.log(x) / base;
  });
}

function reflect(f) {
  return function (x) {
    return -f(-x);
  };
}

function loggish(transform) {
  var scale = transform(transformLog, transformExp),
      domain = scale.domain,
      base = 10,
      logs,
      pows;

  function rescale() {
    logs = logp(base), pows = powp(base);

    if (domain()[0] < 0) {
      logs = reflect(logs), pows = reflect(pows);
      transform(transformLogn, transformExpn);
    } else {
      transform(transformLog, transformExp);
    }

    return scale;
  }

  scale.base = function (_) {
    return arguments.length ? (base = +_, rescale()) : base;
  };

  scale.domain = function (_) {
    return arguments.length ? (domain(_), rescale()) : domain();
  };

  scale.ticks = function (count) {
    var d = domain(),
        u = d[0],
        v = d[d.length - 1],
        r;
    if (r = v < u) i = u, u = v, v = i;
    var i = logs(u),
        j = logs(v),
        p,
        k,
        t,
        n = count == null ? 10 : +count,
        z = [];

    if (!(base % 1) && j - i < n) {
      i = Math.round(i) - 1, j = Math.round(j) + 1;
      if (u > 0) for (; i < j; ++i) {
        for (k = 1, p = pows(i); k < base; ++k) {
          t = p * k;
          if (t < u) continue;
          if (t > v) break;
          z.push(t);
        }
      } else for (; i < j; ++i) {
        for (k = base - 1, p = pows(i); k >= 1; --k) {
          t = p * k;
          if (t < u) continue;
          if (t > v) break;
          z.push(t);
        }
      }
    } else {
      z = (0, _d3Array.ticks)(i, j, Math.min(j - i, n)).map(pows);
    }

    return r ? z.reverse() : z;
  };

  scale.tickFormat = function (count, specifier) {
    if (specifier == null) specifier = base === 10 ? ".0e" : ",";
    if (typeof specifier !== "function") specifier = (0, _d3Format.format)(specifier);
    if (count === Infinity) return specifier;
    if (count == null) count = 10;
    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?

    return function (d) {
      var i = d / pows(Math.round(logs(d)));
      if (i * base < base - 0.5) i *= base;
      return i <= k ? specifier(d) : "";
    };
  };

  scale.nice = function () {
    return domain((0, _nice.default)(domain(), {
      floor: function (x) {
        return pows(Math.floor(logs(x)));
      },
      ceil: function (x) {
        return pows(Math.ceil(logs(x)));
      }
    }));
  };

  return scale;
}

function log() {
  var scale = loggish((0, _continuous.transformer)()).domain([1, 10]);

  scale.copy = function () {
    return (0, _continuous.copy)(scale, log()).base(scale.base());
  };

  _init.initRange.apply(scale, arguments);

  return scale;
}
},{"d3-array":"../../node_modules/d3-array/src/index.js","d3-format":"../../node_modules/d3-format/src/index.js","./nice":"../../node_modules/d3-scale/src/nice.js","./continuous":"../../node_modules/d3-scale/src/continuous.js","./init":"../../node_modules/d3-scale/src/init.js"}],"../../node_modules/d3-scale/src/symlog.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.symlogish = symlogish;
exports.default = symlog;

var _linear = require("./linear");

var _continuous = require("./continuous");

var _init = require("./init");

function transformSymlog(c) {
  return function (x) {
    return Math.sign(x) * Math.log1p(Math.abs(x / c));
  };
}

function transformSymexp(c) {
  return function (x) {
    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;
  };
}

function symlogish(transform) {
  var c = 1,
      scale = transform(transformSymlog(c), transformSymexp(c));

  scale.constant = function (_) {
    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;
  };

  return (0, _linear.linearish)(scale);
}

function symlog() {
  var scale = symlogish((0, _continuous.transformer)());

  scale.copy = function () {
    return (0, _continuous.copy)(scale, symlog()).constant(scale.constant());
  };

  return _init.initRange.apply(scale, arguments);
}
},{"./linear":"../../node_modules/d3-scale/src/linear.js","./continuous":"../../node_modules/d3-scale/src/continuous.js","./init":"../../node_modules/d3-scale/src/init.js"}],"../../node_modules/d3-scale/src/pow.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.powish = powish;
exports.default = pow;
exports.sqrt = sqrt;

var _linear = require("./linear");

var _continuous = require("./continuous");

var _init = require("./init");

function transformPow(exponent) {
  return function (x) {
    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);
  };
}

function transformSqrt(x) {
  return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);
}

function transformSquare(x) {
  return x < 0 ? -x * x : x * x;
}

function powish(transform) {
  var scale = transform(_continuous.identity, _continuous.identity),
      exponent = 1;

  function rescale() {
    return exponent === 1 ? transform(_continuous.identity, _continuous.identity) : exponent === 0.5 ? transform(transformSqrt, transformSquare) : transform(transformPow(exponent), transformPow(1 / exponent));
  }

  scale.exponent = function (_) {
    return arguments.length ? (exponent = +_, rescale()) : exponent;
  };

  return (0, _linear.linearish)(scale);
}

function pow() {
  var scale = powish((0, _continuous.transformer)());

  scale.copy = function () {
    return (0, _continuous.copy)(scale, pow()).exponent(scale.exponent());
  };

  _init.initRange.apply(scale, arguments);

  return scale;
}

function sqrt() {
  return pow.apply(null, arguments).exponent(0.5);
}
},{"./linear":"../../node_modules/d3-scale/src/linear.js","./continuous":"../../node_modules/d3-scale/src/continuous.js","./init":"../../node_modules/d3-scale/src/init.js"}],"../../node_modules/d3-scale/src/quantile.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = quantile;

var _d3Array = require("d3-array");

var _array = require("./array");

var _init = require("./init");

function quantile() {
  var domain = [],
      range = [],
      thresholds = [],
      unknown;

  function rescale() {
    var i = 0,
        n = Math.max(1, range.length);
    thresholds = new Array(n - 1);

    while (++i < n) thresholds[i - 1] = (0, _d3Array.quantile)(domain, i / n);

    return scale;
  }

  function scale(x) {
    return isNaN(x = +x) ? unknown : range[(0, _d3Array.bisect)(thresholds, x)];
  }

  scale.invertExtent = function (y) {
    var i = range.indexOf(y);
    return i < 0 ? [NaN, NaN] : [i > 0 ? thresholds[i - 1] : domain[0], i < thresholds.length ? thresholds[i] : domain[domain.length - 1]];
  };

  scale.domain = function (_) {
    if (!arguments.length) return domain.slice();
    domain = [];

    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);

    domain.sort(_d3Array.ascending);
    return rescale();
  };

  scale.range = function (_) {
    return arguments.length ? (range = _array.slice.call(_), rescale()) : range.slice();
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.quantiles = function () {
    return thresholds.slice();
  };

  scale.copy = function () {
    return quantile().domain(domain).range(range).unknown(unknown);
  };

  return _init.initRange.apply(scale, arguments);
}
},{"d3-array":"../../node_modules/d3-array/src/index.js","./array":"../../node_modules/d3-scale/src/array.js","./init":"../../node_modules/d3-scale/src/init.js"}],"../../node_modules/d3-scale/src/quantize.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = quantize;

var _d3Array = require("d3-array");

var _array = require("./array");

var _linear = require("./linear");

var _init = require("./init");

function quantize() {
  var x0 = 0,
      x1 = 1,
      n = 1,
      domain = [0.5],
      range = [0, 1],
      unknown;

  function scale(x) {
    return x <= x ? range[(0, _d3Array.bisect)(domain, x, 0, n)] : unknown;
  }

  function rescale() {
    var i = -1;
    domain = new Array(n);

    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);

    return scale;
  }

  scale.domain = function (_) {
    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];
  };

  scale.range = function (_) {
    return arguments.length ? (n = (range = _array.slice.call(_)).length - 1, rescale()) : range.slice();
  };

  scale.invertExtent = function (y) {
    var i = range.indexOf(y);
    return i < 0 ? [NaN, NaN] : i < 1 ? [x0, domain[0]] : i >= n ? [domain[n - 1], x1] : [domain[i - 1], domain[i]];
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : scale;
  };

  scale.thresholds = function () {
    return domain.slice();
  };

  scale.copy = function () {
    return quantize().domain([x0, x1]).range(range).unknown(unknown);
  };

  return _init.initRange.apply((0, _linear.linearish)(scale), arguments);
}
},{"d3-array":"../../node_modules/d3-array/src/index.js","./array":"../../node_modules/d3-scale/src/array.js","./linear":"../../node_modules/d3-scale/src/linear.js","./init":"../../node_modules/d3-scale/src/init.js"}],"../../node_modules/d3-scale/src/threshold.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = threshold;

var _d3Array = require("d3-array");

var _array = require("./array");

var _init = require("./init");

function threshold() {
  var domain = [0.5],
      range = [0, 1],
      unknown,
      n = 1;

  function scale(x) {
    return x <= x ? range[(0, _d3Array.bisect)(domain, x, 0, n)] : unknown;
  }

  scale.domain = function (_) {
    return arguments.length ? (domain = _array.slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();
  };

  scale.range = function (_) {
    return arguments.length ? (range = _array.slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();
  };

  scale.invertExtent = function (y) {
    var i = range.indexOf(y);
    return [domain[i - 1], domain[i]];
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  scale.copy = function () {
    return threshold().domain(domain).range(range).unknown(unknown);
  };

  return _init.initRange.apply(scale, arguments);
}
},{"d3-array":"../../node_modules/d3-array/src/index.js","./array":"../../node_modules/d3-scale/src/array.js","./init":"../../node_modules/d3-scale/src/init.js"}],"../../node_modules/d3-time/src/interval.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = newInterval;
var t0 = new Date(),
    t1 = new Date();

function newInterval(floori, offseti, count, field) {
  function interval(date) {
    return floori(date = arguments.length === 0 ? new Date() : new Date(+date)), date;
  }

  interval.floor = function (date) {
    return floori(date = new Date(+date)), date;
  };

  interval.ceil = function (date) {
    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;
  };

  interval.round = function (date) {
    var d0 = interval(date),
        d1 = interval.ceil(date);
    return date - d0 < d1 - date ? d0 : d1;
  };

  interval.offset = function (date, step) {
    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;
  };

  interval.range = function (start, stop, step) {
    var range = [],
        previous;
    start = interval.ceil(start);
    step = step == null ? 1 : Math.floor(step);
    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date

    do range.push(previous = new Date(+start)), offseti(start, step), floori(start); while (previous < start && start < stop);

    return range;
  };

  interval.filter = function (test) {
    return newInterval(function (date) {
      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);
    }, function (date, step) {
      if (date >= date) {
        if (step < 0) while (++step <= 0) {
          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty

        } else while (--step >= 0) {
          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty

        }
      }
    });
  };

  if (count) {
    interval.count = function (start, end) {
      t0.setTime(+start), t1.setTime(+end);
      floori(t0), floori(t1);
      return Math.floor(count(t0, t1));
    };

    interval.every = function (step) {
      step = Math.floor(step);
      return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? function (d) {
        return field(d) % step === 0;
      } : function (d) {
        return interval.count(0, d) % step === 0;
      });
    };
  }

  return interval;
}
},{}],"../../node_modules/d3-time/src/millisecond.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.milliseconds = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var millisecond = (0, _interval.default)(function () {// noop
}, function (date, step) {
  date.setTime(+date + step);
}, function (start, end) {
  return end - start;
}); // An optimized implementation for this simple case.

millisecond.every = function (k) {
  k = Math.floor(k);
  if (!isFinite(k) || !(k > 0)) return null;
  if (!(k > 1)) return millisecond;
  return (0, _interval.default)(function (date) {
    date.setTime(Math.floor(date / k) * k);
  }, function (date, step) {
    date.setTime(+date + step * k);
  }, function (start, end) {
    return (end - start) / k;
  });
};

var _default = millisecond;
exports.default = _default;
var milliseconds = millisecond.range;
exports.milliseconds = milliseconds;
},{"./interval.js":"../../node_modules/d3-time/src/interval.js"}],"../../node_modules/d3-time/src/duration.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.durationWeek = exports.durationDay = exports.durationHour = exports.durationMinute = exports.durationSecond = void 0;
var durationSecond = 1e3;
exports.durationSecond = durationSecond;
var durationMinute = 6e4;
exports.durationMinute = durationMinute;
var durationHour = 36e5;
exports.durationHour = durationHour;
var durationDay = 864e5;
exports.durationDay = durationDay;
var durationWeek = 6048e5;
exports.durationWeek = durationWeek;
},{}],"../../node_modules/d3-time/src/second.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.seconds = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var second = (0, _interval.default)(function (date) {
  date.setTime(date - date.getMilliseconds());
}, function (date, step) {
  date.setTime(+date + step * _duration.durationSecond);
}, function (start, end) {
  return (end - start) / _duration.durationSecond;
}, function (date) {
  return date.getUTCSeconds();
});
var _default = second;
exports.default = _default;
var seconds = second.range;
exports.seconds = seconds;
},{"./interval.js":"../../node_modules/d3-time/src/interval.js","./duration.js":"../../node_modules/d3-time/src/duration.js"}],"../../node_modules/d3-time/src/minute.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.minutes = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var minute = (0, _interval.default)(function (date) {
  date.setTime(date - date.getMilliseconds() - date.getSeconds() * _duration.durationSecond);
}, function (date, step) {
  date.setTime(+date + step * _duration.durationMinute);
}, function (start, end) {
  return (end - start) / _duration.durationMinute;
}, function (date) {
  return date.getMinutes();
});
var _default = minute;
exports.default = _default;
var minutes = minute.range;
exports.minutes = minutes;
},{"./interval.js":"../../node_modules/d3-time/src/interval.js","./duration.js":"../../node_modules/d3-time/src/duration.js"}],"../../node_modules/d3-time/src/hour.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hours = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var hour = (0, _interval.default)(function (date) {
  date.setTime(date - date.getMilliseconds() - date.getSeconds() * _duration.durationSecond - date.getMinutes() * _duration.durationMinute);
}, function (date, step) {
  date.setTime(+date + step * _duration.durationHour);
}, function (start, end) {
  return (end - start) / _duration.durationHour;
}, function (date) {
  return date.getHours();
});
var _default = hour;
exports.default = _default;
var hours = hour.range;
exports.hours = hours;
},{"./interval.js":"../../node_modules/d3-time/src/interval.js","./duration.js":"../../node_modules/d3-time/src/duration.js"}],"../../node_modules/d3-time/src/day.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.days = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var day = (0, _interval.default)(function (date) {
  date.setHours(0, 0, 0, 0);
}, function (date, step) {
  date.setDate(date.getDate() + step);
}, function (start, end) {
  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * _duration.durationMinute) / _duration.durationDay;
}, function (date) {
  return date.getDate() - 1;
});
var _default = day;
exports.default = _default;
var days = day.range;
exports.days = days;
},{"./interval.js":"../../node_modules/d3-time/src/interval.js","./duration.js":"../../node_modules/d3-time/src/duration.js"}],"../../node_modules/d3-time/src/week.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.saturdays = exports.fridays = exports.thursdays = exports.wednesdays = exports.tuesdays = exports.mondays = exports.sundays = exports.saturday = exports.friday = exports.thursday = exports.wednesday = exports.tuesday = exports.monday = exports.sunday = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function weekday(i) {
  return (0, _interval.default)(function (date) {
    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);
    date.setHours(0, 0, 0, 0);
  }, function (date, step) {
    date.setDate(date.getDate() + step * 7);
  }, function (start, end) {
    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * _duration.durationMinute) / _duration.durationWeek;
  });
}

var sunday = weekday(0);
exports.sunday = sunday;
var monday = weekday(1);
exports.monday = monday;
var tuesday = weekday(2);
exports.tuesday = tuesday;
var wednesday = weekday(3);
exports.wednesday = wednesday;
var thursday = weekday(4);
exports.thursday = thursday;
var friday = weekday(5);
exports.friday = friday;
var saturday = weekday(6);
exports.saturday = saturday;
var sundays = sunday.range;
exports.sundays = sundays;
var mondays = monday.range;
exports.mondays = mondays;
var tuesdays = tuesday.range;
exports.tuesdays = tuesdays;
var wednesdays = wednesday.range;
exports.wednesdays = wednesdays;
var thursdays = thursday.range;
exports.thursdays = thursdays;
var fridays = friday.range;
exports.fridays = fridays;
var saturdays = saturday.range;
exports.saturdays = saturdays;
},{"./interval.js":"../../node_modules/d3-time/src/interval.js","./duration.js":"../../node_modules/d3-time/src/duration.js"}],"../../node_modules/d3-time/src/month.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.months = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var month = (0, _interval.default)(function (date) {
  date.setDate(1);
  date.setHours(0, 0, 0, 0);
}, function (date, step) {
  date.setMonth(date.getMonth() + step);
}, function (start, end) {
  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;
}, function (date) {
  return date.getMonth();
});
var _default = month;
exports.default = _default;
var months = month.range;
exports.months = months;
},{"./interval.js":"../../node_modules/d3-time/src/interval.js"}],"../../node_modules/d3-time/src/year.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.years = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var year = (0, _interval.default)(function (date) {
  date.setMonth(0, 1);
  date.setHours(0, 0, 0, 0);
}, function (date, step) {
  date.setFullYear(date.getFullYear() + step);
}, function (start, end) {
  return end.getFullYear() - start.getFullYear();
}, function (date) {
  return date.getFullYear();
}); // An optimized implementation for this simple case.

year.every = function (k) {
  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : (0, _interval.default)(function (date) {
    date.setFullYear(Math.floor(date.getFullYear() / k) * k);
    date.setMonth(0, 1);
    date.setHours(0, 0, 0, 0);
  }, function (date, step) {
    date.setFullYear(date.getFullYear() + step * k);
  });
};

var _default = year;
exports.default = _default;
var years = year.range;
exports.years = years;
},{"./interval.js":"../../node_modules/d3-time/src/interval.js"}],"../../node_modules/d3-time/src/utcMinute.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.utcMinutes = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var utcMinute = (0, _interval.default)(function (date) {
  date.setUTCSeconds(0, 0);
}, function (date, step) {
  date.setTime(+date + step * _duration.durationMinute);
}, function (start, end) {
  return (end - start) / _duration.durationMinute;
}, function (date) {
  return date.getUTCMinutes();
});
var _default = utcMinute;
exports.default = _default;
var utcMinutes = utcMinute.range;
exports.utcMinutes = utcMinutes;
},{"./interval.js":"../../node_modules/d3-time/src/interval.js","./duration.js":"../../node_modules/d3-time/src/duration.js"}],"../../node_modules/d3-time/src/utcHour.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.utcHours = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var utcHour = (0, _interval.default)(function (date) {
  date.setUTCMinutes(0, 0, 0);
}, function (date, step) {
  date.setTime(+date + step * _duration.durationHour);
}, function (start, end) {
  return (end - start) / _duration.durationHour;
}, function (date) {
  return date.getUTCHours();
});
var _default = utcHour;
exports.default = _default;
var utcHours = utcHour.range;
exports.utcHours = utcHours;
},{"./interval.js":"../../node_modules/d3-time/src/interval.js","./duration.js":"../../node_modules/d3-time/src/duration.js"}],"../../node_modules/d3-time/src/utcDay.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.utcDays = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var utcDay = (0, _interval.default)(function (date) {
  date.setUTCHours(0, 0, 0, 0);
}, function (date, step) {
  date.setUTCDate(date.getUTCDate() + step);
}, function (start, end) {
  return (end - start) / _duration.durationDay;
}, function (date) {
  return date.getUTCDate() - 1;
});
var _default = utcDay;
exports.default = _default;
var utcDays = utcDay.range;
exports.utcDays = utcDays;
},{"./interval.js":"../../node_modules/d3-time/src/interval.js","./duration.js":"../../node_modules/d3-time/src/duration.js"}],"../../node_modules/d3-time/src/utcWeek.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.utcSaturdays = exports.utcFridays = exports.utcThursdays = exports.utcWednesdays = exports.utcTuesdays = exports.utcMondays = exports.utcSundays = exports.utcSaturday = exports.utcFriday = exports.utcThursday = exports.utcWednesday = exports.utcTuesday = exports.utcMonday = exports.utcSunday = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

var _duration = require("./duration.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function utcWeekday(i) {
  return (0, _interval.default)(function (date) {
    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);
    date.setUTCHours(0, 0, 0, 0);
  }, function (date, step) {
    date.setUTCDate(date.getUTCDate() + step * 7);
  }, function (start, end) {
    return (end - start) / _duration.durationWeek;
  });
}

var utcSunday = utcWeekday(0);
exports.utcSunday = utcSunday;
var utcMonday = utcWeekday(1);
exports.utcMonday = utcMonday;
var utcTuesday = utcWeekday(2);
exports.utcTuesday = utcTuesday;
var utcWednesday = utcWeekday(3);
exports.utcWednesday = utcWednesday;
var utcThursday = utcWeekday(4);
exports.utcThursday = utcThursday;
var utcFriday = utcWeekday(5);
exports.utcFriday = utcFriday;
var utcSaturday = utcWeekday(6);
exports.utcSaturday = utcSaturday;
var utcSundays = utcSunday.range;
exports.utcSundays = utcSundays;
var utcMondays = utcMonday.range;
exports.utcMondays = utcMondays;
var utcTuesdays = utcTuesday.range;
exports.utcTuesdays = utcTuesdays;
var utcWednesdays = utcWednesday.range;
exports.utcWednesdays = utcWednesdays;
var utcThursdays = utcThursday.range;
exports.utcThursdays = utcThursdays;
var utcFridays = utcFriday.range;
exports.utcFridays = utcFridays;
var utcSaturdays = utcSaturday.range;
exports.utcSaturdays = utcSaturdays;
},{"./interval.js":"../../node_modules/d3-time/src/interval.js","./duration.js":"../../node_modules/d3-time/src/duration.js"}],"../../node_modules/d3-time/src/utcMonth.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.utcMonths = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var utcMonth = (0, _interval.default)(function (date) {
  date.setUTCDate(1);
  date.setUTCHours(0, 0, 0, 0);
}, function (date, step) {
  date.setUTCMonth(date.getUTCMonth() + step);
}, function (start, end) {
  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;
}, function (date) {
  return date.getUTCMonth();
});
var _default = utcMonth;
exports.default = _default;
var utcMonths = utcMonth.range;
exports.utcMonths = utcMonths;
},{"./interval.js":"../../node_modules/d3-time/src/interval.js"}],"../../node_modules/d3-time/src/utcYear.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.utcYears = exports.default = void 0;

var _interval = _interopRequireDefault(require("./interval.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var utcYear = (0, _interval.default)(function (date) {
  date.setUTCMonth(0, 1);
  date.setUTCHours(0, 0, 0, 0);
}, function (date, step) {
  date.setUTCFullYear(date.getUTCFullYear() + step);
}, function (start, end) {
  return end.getUTCFullYear() - start.getUTCFullYear();
}, function (date) {
  return date.getUTCFullYear();
}); // An optimized implementation for this simple case.

utcYear.every = function (k) {
  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : (0, _interval.default)(function (date) {
    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);
    date.setUTCMonth(0, 1);
    date.setUTCHours(0, 0, 0, 0);
  }, function (date, step) {
    date.setUTCFullYear(date.getUTCFullYear() + step * k);
  });
};

var _default = utcYear;
exports.default = _default;
var utcYears = utcYear.range;
exports.utcYears = utcYears;
},{"./interval.js":"../../node_modules/d3-time/src/interval.js"}],"../../node_modules/d3-time/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "timeInterval", {
  enumerable: true,
  get: function () {
    return _interval.default;
  }
});
Object.defineProperty(exports, "timeMillisecond", {
  enumerable: true,
  get: function () {
    return _millisecond.default;
  }
});
Object.defineProperty(exports, "timeMilliseconds", {
  enumerable: true,
  get: function () {
    return _millisecond.milliseconds;
  }
});
Object.defineProperty(exports, "utcMillisecond", {
  enumerable: true,
  get: function () {
    return _millisecond.default;
  }
});
Object.defineProperty(exports, "utcMilliseconds", {
  enumerable: true,
  get: function () {
    return _millisecond.milliseconds;
  }
});
Object.defineProperty(exports, "timeSecond", {
  enumerable: true,
  get: function () {
    return _second.default;
  }
});
Object.defineProperty(exports, "timeSeconds", {
  enumerable: true,
  get: function () {
    return _second.seconds;
  }
});
Object.defineProperty(exports, "utcSecond", {
  enumerable: true,
  get: function () {
    return _second.default;
  }
});
Object.defineProperty(exports, "utcSeconds", {
  enumerable: true,
  get: function () {
    return _second.seconds;
  }
});
Object.defineProperty(exports, "timeMinute", {
  enumerable: true,
  get: function () {
    return _minute.default;
  }
});
Object.defineProperty(exports, "timeMinutes", {
  enumerable: true,
  get: function () {
    return _minute.minutes;
  }
});
Object.defineProperty(exports, "timeHour", {
  enumerable: true,
  get: function () {
    return _hour.default;
  }
});
Object.defineProperty(exports, "timeHours", {
  enumerable: true,
  get: function () {
    return _hour.hours;
  }
});
Object.defineProperty(exports, "timeDay", {
  enumerable: true,
  get: function () {
    return _day.default;
  }
});
Object.defineProperty(exports, "timeDays", {
  enumerable: true,
  get: function () {
    return _day.days;
  }
});
Object.defineProperty(exports, "timeWeek", {
  enumerable: true,
  get: function () {
    return _week.sunday;
  }
});
Object.defineProperty(exports, "timeWeeks", {
  enumerable: true,
  get: function () {
    return _week.sundays;
  }
});
Object.defineProperty(exports, "timeSunday", {
  enumerable: true,
  get: function () {
    return _week.sunday;
  }
});
Object.defineProperty(exports, "timeSundays", {
  enumerable: true,
  get: function () {
    return _week.sundays;
  }
});
Object.defineProperty(exports, "timeMonday", {
  enumerable: true,
  get: function () {
    return _week.monday;
  }
});
Object.defineProperty(exports, "timeMondays", {
  enumerable: true,
  get: function () {
    return _week.mondays;
  }
});
Object.defineProperty(exports, "timeTuesday", {
  enumerable: true,
  get: function () {
    return _week.tuesday;
  }
});
Object.defineProperty(exports, "timeTuesdays", {
  enumerable: true,
  get: function () {
    return _week.tuesdays;
  }
});
Object.defineProperty(exports, "timeWednesday", {
  enumerable: true,
  get: function () {
    return _week.wednesday;
  }
});
Object.defineProperty(exports, "timeWednesdays", {
  enumerable: true,
  get: function () {
    return _week.wednesdays;
  }
});
Object.defineProperty(exports, "timeThursday", {
  enumerable: true,
  get: function () {
    return _week.thursday;
  }
});
Object.defineProperty(exports, "timeThursdays", {
  enumerable: true,
  get: function () {
    return _week.thursdays;
  }
});
Object.defineProperty(exports, "timeFriday", {
  enumerable: true,
  get: function () {
    return _week.friday;
  }
});
Object.defineProperty(exports, "timeFridays", {
  enumerable: true,
  get: function () {
    return _week.fridays;
  }
});
Object.defineProperty(exports, "timeSaturday", {
  enumerable: true,
  get: function () {
    return _week.saturday;
  }
});
Object.defineProperty(exports, "timeSaturdays", {
  enumerable: true,
  get: function () {
    return _week.saturdays;
  }
});
Object.defineProperty(exports, "timeMonth", {
  enumerable: true,
  get: function () {
    return _month.default;
  }
});
Object.defineProperty(exports, "timeMonths", {
  enumerable: true,
  get: function () {
    return _month.months;
  }
});
Object.defineProperty(exports, "timeYear", {
  enumerable: true,
  get: function () {
    return _year.default;
  }
});
Object.defineProperty(exports, "timeYears", {
  enumerable: true,
  get: function () {
    return _year.years;
  }
});
Object.defineProperty(exports, "utcMinute", {
  enumerable: true,
  get: function () {
    return _utcMinute.default;
  }
});
Object.defineProperty(exports, "utcMinutes", {
  enumerable: true,
  get: function () {
    return _utcMinute.utcMinutes;
  }
});
Object.defineProperty(exports, "utcHour", {
  enumerable: true,
  get: function () {
    return _utcHour.default;
  }
});
Object.defineProperty(exports, "utcHours", {
  enumerable: true,
  get: function () {
    return _utcHour.utcHours;
  }
});
Object.defineProperty(exports, "utcDay", {
  enumerable: true,
  get: function () {
    return _utcDay.default;
  }
});
Object.defineProperty(exports, "utcDays", {
  enumerable: true,
  get: function () {
    return _utcDay.utcDays;
  }
});
Object.defineProperty(exports, "utcWeek", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcSunday;
  }
});
Object.defineProperty(exports, "utcWeeks", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcSundays;
  }
});
Object.defineProperty(exports, "utcSunday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcSunday;
  }
});
Object.defineProperty(exports, "utcSundays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcSundays;
  }
});
Object.defineProperty(exports, "utcMonday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcMonday;
  }
});
Object.defineProperty(exports, "utcMondays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcMondays;
  }
});
Object.defineProperty(exports, "utcTuesday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcTuesday;
  }
});
Object.defineProperty(exports, "utcTuesdays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcTuesdays;
  }
});
Object.defineProperty(exports, "utcWednesday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcWednesday;
  }
});
Object.defineProperty(exports, "utcWednesdays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcWednesdays;
  }
});
Object.defineProperty(exports, "utcThursday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcThursday;
  }
});
Object.defineProperty(exports, "utcThursdays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcThursdays;
  }
});
Object.defineProperty(exports, "utcFriday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcFriday;
  }
});
Object.defineProperty(exports, "utcFridays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcFridays;
  }
});
Object.defineProperty(exports, "utcSaturday", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcSaturday;
  }
});
Object.defineProperty(exports, "utcSaturdays", {
  enumerable: true,
  get: function () {
    return _utcWeek.utcSaturdays;
  }
});
Object.defineProperty(exports, "utcMonth", {
  enumerable: true,
  get: function () {
    return _utcMonth.default;
  }
});
Object.defineProperty(exports, "utcMonths", {
  enumerable: true,
  get: function () {
    return _utcMonth.utcMonths;
  }
});
Object.defineProperty(exports, "utcYear", {
  enumerable: true,
  get: function () {
    return _utcYear.default;
  }
});
Object.defineProperty(exports, "utcYears", {
  enumerable: true,
  get: function () {
    return _utcYear.utcYears;
  }
});

var _interval = _interopRequireDefault(require("./interval.js"));

var _millisecond = _interopRequireWildcard(require("./millisecond.js"));

var _second = _interopRequireWildcard(require("./second.js"));

var _minute = _interopRequireWildcard(require("./minute.js"));

var _hour = _interopRequireWildcard(require("./hour.js"));

var _day = _interopRequireWildcard(require("./day.js"));

var _week = require("./week.js");

var _month = _interopRequireWildcard(require("./month.js"));

var _year = _interopRequireWildcard(require("./year.js"));

var _utcMinute = _interopRequireWildcard(require("./utcMinute.js"));

var _utcHour = _interopRequireWildcard(require("./utcHour.js"));

var _utcDay = _interopRequireWildcard(require("./utcDay.js"));

var _utcWeek = require("./utcWeek.js");

var _utcMonth = _interopRequireWildcard(require("./utcMonth.js"));

var _utcYear = _interopRequireWildcard(require("./utcYear.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./interval.js":"../../node_modules/d3-time/src/interval.js","./millisecond.js":"../../node_modules/d3-time/src/millisecond.js","./second.js":"../../node_modules/d3-time/src/second.js","./minute.js":"../../node_modules/d3-time/src/minute.js","./hour.js":"../../node_modules/d3-time/src/hour.js","./day.js":"../../node_modules/d3-time/src/day.js","./week.js":"../../node_modules/d3-time/src/week.js","./month.js":"../../node_modules/d3-time/src/month.js","./year.js":"../../node_modules/d3-time/src/year.js","./utcMinute.js":"../../node_modules/d3-time/src/utcMinute.js","./utcHour.js":"../../node_modules/d3-time/src/utcHour.js","./utcDay.js":"../../node_modules/d3-time/src/utcDay.js","./utcWeek.js":"../../node_modules/d3-time/src/utcWeek.js","./utcMonth.js":"../../node_modules/d3-time/src/utcMonth.js","./utcYear.js":"../../node_modules/d3-time/src/utcYear.js"}],"../../node_modules/d3-time-format/src/locale.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = formatLocale;

var _d3Time = require("d3-time");

function localDate(d) {
  if (0 <= d.y && d.y < 100) {
    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);
    date.setFullYear(d.y);
    return date;
  }

  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);
}

function utcDate(d) {
  if (0 <= d.y && d.y < 100) {
    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));
    date.setUTCFullYear(d.y);
    return date;
  }

  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));
}

function newDate(y, m, d) {
  return {
    y: y,
    m: m,
    d: d,
    H: 0,
    M: 0,
    S: 0,
    L: 0
  };
}

function formatLocale(locale) {
  var locale_dateTime = locale.dateTime,
      locale_date = locale.date,
      locale_time = locale.time,
      locale_periods = locale.periods,
      locale_weekdays = locale.days,
      locale_shortWeekdays = locale.shortDays,
      locale_months = locale.months,
      locale_shortMonths = locale.shortMonths;
  var periodRe = formatRe(locale_periods),
      periodLookup = formatLookup(locale_periods),
      weekdayRe = formatRe(locale_weekdays),
      weekdayLookup = formatLookup(locale_weekdays),
      shortWeekdayRe = formatRe(locale_shortWeekdays),
      shortWeekdayLookup = formatLookup(locale_shortWeekdays),
      monthRe = formatRe(locale_months),
      monthLookup = formatLookup(locale_months),
      shortMonthRe = formatRe(locale_shortMonths),
      shortMonthLookup = formatLookup(locale_shortMonths);
  var formats = {
    "a": formatShortWeekday,
    "A": formatWeekday,
    "b": formatShortMonth,
    "B": formatMonth,
    "c": null,
    "d": formatDayOfMonth,
    "e": formatDayOfMonth,
    "f": formatMicroseconds,
    "H": formatHour24,
    "I": formatHour12,
    "j": formatDayOfYear,
    "L": formatMilliseconds,
    "m": formatMonthNumber,
    "M": formatMinutes,
    "p": formatPeriod,
    "q": formatQuarter,
    "Q": formatUnixTimestamp,
    "s": formatUnixTimestampSeconds,
    "S": formatSeconds,
    "u": formatWeekdayNumberMonday,
    "U": formatWeekNumberSunday,
    "V": formatWeekNumberISO,
    "w": formatWeekdayNumberSunday,
    "W": formatWeekNumberMonday,
    "x": null,
    "X": null,
    "y": formatYear,
    "Y": formatFullYear,
    "Z": formatZone,
    "%": formatLiteralPercent
  };
  var utcFormats = {
    "a": formatUTCShortWeekday,
    "A": formatUTCWeekday,
    "b": formatUTCShortMonth,
    "B": formatUTCMonth,
    "c": null,
    "d": formatUTCDayOfMonth,
    "e": formatUTCDayOfMonth,
    "f": formatUTCMicroseconds,
    "H": formatUTCHour24,
    "I": formatUTCHour12,
    "j": formatUTCDayOfYear,
    "L": formatUTCMilliseconds,
    "m": formatUTCMonthNumber,
    "M": formatUTCMinutes,
    "p": formatUTCPeriod,
    "q": formatUTCQuarter,
    "Q": formatUnixTimestamp,
    "s": formatUnixTimestampSeconds,
    "S": formatUTCSeconds,
    "u": formatUTCWeekdayNumberMonday,
    "U": formatUTCWeekNumberSunday,
    "V": formatUTCWeekNumberISO,
    "w": formatUTCWeekdayNumberSunday,
    "W": formatUTCWeekNumberMonday,
    "x": null,
    "X": null,
    "y": formatUTCYear,
    "Y": formatUTCFullYear,
    "Z": formatUTCZone,
    "%": formatLiteralPercent
  };
  var parses = {
    "a": parseShortWeekday,
    "A": parseWeekday,
    "b": parseShortMonth,
    "B": parseMonth,
    "c": parseLocaleDateTime,
    "d": parseDayOfMonth,
    "e": parseDayOfMonth,
    "f": parseMicroseconds,
    "H": parseHour24,
    "I": parseHour24,
    "j": parseDayOfYear,
    "L": parseMilliseconds,
    "m": parseMonthNumber,
    "M": parseMinutes,
    "p": parsePeriod,
    "q": parseQuarter,
    "Q": parseUnixTimestamp,
    "s": parseUnixTimestampSeconds,
    "S": parseSeconds,
    "u": parseWeekdayNumberMonday,
    "U": parseWeekNumberSunday,
    "V": parseWeekNumberISO,
    "w": parseWeekdayNumberSunday,
    "W": parseWeekNumberMonday,
    "x": parseLocaleDate,
    "X": parseLocaleTime,
    "y": parseYear,
    "Y": parseFullYear,
    "Z": parseZone,
    "%": parseLiteralPercent
  }; // These recursive directive definitions must be deferred.

  formats.x = newFormat(locale_date, formats);
  formats.X = newFormat(locale_time, formats);
  formats.c = newFormat(locale_dateTime, formats);
  utcFormats.x = newFormat(locale_date, utcFormats);
  utcFormats.X = newFormat(locale_time, utcFormats);
  utcFormats.c = newFormat(locale_dateTime, utcFormats);

  function newFormat(specifier, formats) {
    return function (date) {
      var string = [],
          i = -1,
          j = 0,
          n = specifier.length,
          c,
          pad,
          format;
      if (!(date instanceof Date)) date = new Date(+date);

      while (++i < n) {
        if (specifier.charCodeAt(i) === 37) {
          string.push(specifier.slice(j, i));
          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);else pad = c === "e" ? " " : "0";
          if (format = formats[c]) c = format(date, pad);
          string.push(c);
          j = i + 1;
        }
      }

      string.push(specifier.slice(j, i));
      return string.join("");
    };
  }

  function newParse(specifier, Z) {
    return function (string) {
      var d = newDate(1900, undefined, 1),
          i = parseSpecifier(d, specifier, string += "", 0),
          week,
          day;
      if (i != string.length) return null; // If a UNIX timestamp is specified, return it.

      if ("Q" in d) return new Date(d.Q);
      if ("s" in d) return new Date(d.s * 1000 + ("L" in d ? d.L : 0)); // If this is utcParse, never use the local timezone.

      if (Z && !("Z" in d)) d.Z = 0; // The am-pm flag is 0 for AM, and 1 for PM.

      if ("p" in d) d.H = d.H % 12 + d.p * 12; // If the month was not specified, inherit from the quarter.

      if (d.m === undefined) d.m = "q" in d ? d.q : 0; // Convert day-of-week and week-of-year to day-of-year.

      if ("V" in d) {
        if (d.V < 1 || d.V > 53) return null;
        if (!("w" in d)) d.w = 1;

        if ("Z" in d) {
          week = utcDate(newDate(d.y, 0, 1)), day = week.getUTCDay();
          week = day > 4 || day === 0 ? _d3Time.utcMonday.ceil(week) : (0, _d3Time.utcMonday)(week);
          week = _d3Time.utcDay.offset(week, (d.V - 1) * 7);
          d.y = week.getUTCFullYear();
          d.m = week.getUTCMonth();
          d.d = week.getUTCDate() + (d.w + 6) % 7;
        } else {
          week = localDate(newDate(d.y, 0, 1)), day = week.getDay();
          week = day > 4 || day === 0 ? _d3Time.timeMonday.ceil(week) : (0, _d3Time.timeMonday)(week);
          week = _d3Time.timeDay.offset(week, (d.V - 1) * 7);
          d.y = week.getFullYear();
          d.m = week.getMonth();
          d.d = week.getDate() + (d.w + 6) % 7;
        }
      } else if ("W" in d || "U" in d) {
        if (!("w" in d)) d.w = "u" in d ? d.u % 7 : "W" in d ? 1 : 0;
        day = "Z" in d ? utcDate(newDate(d.y, 0, 1)).getUTCDay() : localDate(newDate(d.y, 0, 1)).getDay();
        d.m = 0;
        d.d = "W" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;
      } // If a time zone is specified, all fields are interpreted as UTC and then
      // offset according to the specified time zone.


      if ("Z" in d) {
        d.H += d.Z / 100 | 0;
        d.M += d.Z % 100;
        return utcDate(d);
      } // Otherwise, all fields are in local time.


      return localDate(d);
    };
  }

  function parseSpecifier(d, specifier, string, j) {
    var i = 0,
        n = specifier.length,
        m = string.length,
        c,
        parse;

    while (i < n) {
      if (j >= m) return -1;
      c = specifier.charCodeAt(i++);

      if (c === 37) {
        c = specifier.charAt(i++);
        parse = parses[c in pads ? specifier.charAt(i++) : c];
        if (!parse || (j = parse(d, string, j)) < 0) return -1;
      } else if (c != string.charCodeAt(j++)) {
        return -1;
      }
    }

    return j;
  }

  function parsePeriod(d, string, i) {
    var n = periodRe.exec(string.slice(i));
    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;
  }

  function parseShortWeekday(d, string, i) {
    var n = shortWeekdayRe.exec(string.slice(i));
    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;
  }

  function parseWeekday(d, string, i) {
    var n = weekdayRe.exec(string.slice(i));
    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;
  }

  function parseShortMonth(d, string, i) {
    var n = shortMonthRe.exec(string.slice(i));
    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;
  }

  function parseMonth(d, string, i) {
    var n = monthRe.exec(string.slice(i));
    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;
  }

  function parseLocaleDateTime(d, string, i) {
    return parseSpecifier(d, locale_dateTime, string, i);
  }

  function parseLocaleDate(d, string, i) {
    return parseSpecifier(d, locale_date, string, i);
  }

  function parseLocaleTime(d, string, i) {
    return parseSpecifier(d, locale_time, string, i);
  }

  function formatShortWeekday(d) {
    return locale_shortWeekdays[d.getDay()];
  }

  function formatWeekday(d) {
    return locale_weekdays[d.getDay()];
  }

  function formatShortMonth(d) {
    return locale_shortMonths[d.getMonth()];
  }

  function formatMonth(d) {
    return locale_months[d.getMonth()];
  }

  function formatPeriod(d) {
    return locale_periods[+(d.getHours() >= 12)];
  }

  function formatQuarter(d) {
    return 1 + ~~(d.getMonth() / 3);
  }

  function formatUTCShortWeekday(d) {
    return locale_shortWeekdays[d.getUTCDay()];
  }

  function formatUTCWeekday(d) {
    return locale_weekdays[d.getUTCDay()];
  }

  function formatUTCShortMonth(d) {
    return locale_shortMonths[d.getUTCMonth()];
  }

  function formatUTCMonth(d) {
    return locale_months[d.getUTCMonth()];
  }

  function formatUTCPeriod(d) {
    return locale_periods[+(d.getUTCHours() >= 12)];
  }

  function formatUTCQuarter(d) {
    return 1 + ~~(d.getUTCMonth() / 3);
  }

  return {
    format: function (specifier) {
      var f = newFormat(specifier += "", formats);

      f.toString = function () {
        return specifier;
      };

      return f;
    },
    parse: function (specifier) {
      var p = newParse(specifier += "", false);

      p.toString = function () {
        return specifier;
      };

      return p;
    },
    utcFormat: function (specifier) {
      var f = newFormat(specifier += "", utcFormats);

      f.toString = function () {
        return specifier;
      };

      return f;
    },
    utcParse: function (specifier) {
      var p = newParse(specifier += "", true);

      p.toString = function () {
        return specifier;
      };

      return p;
    }
  };
}

var pads = {
  "-": "",
  "_": " ",
  "0": "0"
},
    numberRe = /^\s*\d+/,
    // note: ignores next directive
percentRe = /^%/,
    requoteRe = /[\\^$*+?|[\]().{}]/g;

function pad(value, fill, width) {
  var sign = value < 0 ? "-" : "",
      string = (sign ? -value : value) + "",
      length = string.length;
  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
}

function requote(s) {
  return s.replace(requoteRe, "\\$&");
}

function formatRe(names) {
  return new RegExp("^(?:" + names.map(requote).join("|") + ")", "i");
}

function formatLookup(names) {
  var map = {},
      i = -1,
      n = names.length;

  while (++i < n) map[names[i].toLowerCase()] = i;

  return map;
}

function parseWeekdayNumberSunday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.w = +n[0], i + n[0].length) : -1;
}

function parseWeekdayNumberMonday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.u = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberSunday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.U = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberISO(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.V = +n[0], i + n[0].length) : -1;
}

function parseWeekNumberMonday(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.W = +n[0], i + n[0].length) : -1;
}

function parseFullYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 4));
  return n ? (d.y = +n[0], i + n[0].length) : -1;
}

function parseYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;
}

function parseZone(d, string, i) {
  var n = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(string.slice(i, i + 6));
  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || "00")), i + n[0].length) : -1;
}

function parseQuarter(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 1));
  return n ? (d.q = n[0] * 3 - 3, i + n[0].length) : -1;
}

function parseMonthNumber(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;
}

function parseDayOfMonth(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.d = +n[0], i + n[0].length) : -1;
}

function parseDayOfYear(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 3));
  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;
}

function parseHour24(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.H = +n[0], i + n[0].length) : -1;
}

function parseMinutes(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.M = +n[0], i + n[0].length) : -1;
}

function parseSeconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 2));
  return n ? (d.S = +n[0], i + n[0].length) : -1;
}

function parseMilliseconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 3));
  return n ? (d.L = +n[0], i + n[0].length) : -1;
}

function parseMicroseconds(d, string, i) {
  var n = numberRe.exec(string.slice(i, i + 6));
  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;
}

function parseLiteralPercent(d, string, i) {
  var n = percentRe.exec(string.slice(i, i + 1));
  return n ? i + n[0].length : -1;
}

function parseUnixTimestamp(d, string, i) {
  var n = numberRe.exec(string.slice(i));
  return n ? (d.Q = +n[0], i + n[0].length) : -1;
}

function parseUnixTimestampSeconds(d, string, i) {
  var n = numberRe.exec(string.slice(i));
  return n ? (d.s = +n[0], i + n[0].length) : -1;
}

function formatDayOfMonth(d, p) {
  return pad(d.getDate(), p, 2);
}

function formatHour24(d, p) {
  return pad(d.getHours(), p, 2);
}

function formatHour12(d, p) {
  return pad(d.getHours() % 12 || 12, p, 2);
}

function formatDayOfYear(d, p) {
  return pad(1 + _d3Time.timeDay.count((0, _d3Time.timeYear)(d), d), p, 3);
}

function formatMilliseconds(d, p) {
  return pad(d.getMilliseconds(), p, 3);
}

function formatMicroseconds(d, p) {
  return formatMilliseconds(d, p) + "000";
}

function formatMonthNumber(d, p) {
  return pad(d.getMonth() + 1, p, 2);
}

function formatMinutes(d, p) {
  return pad(d.getMinutes(), p, 2);
}

function formatSeconds(d, p) {
  return pad(d.getSeconds(), p, 2);
}

function formatWeekdayNumberMonday(d) {
  var day = d.getDay();
  return day === 0 ? 7 : day;
}

function formatWeekNumberSunday(d, p) {
  return pad(_d3Time.timeSunday.count((0, _d3Time.timeYear)(d) - 1, d), p, 2);
}

function formatWeekNumberISO(d, p) {
  var day = d.getDay();
  d = day >= 4 || day === 0 ? (0, _d3Time.timeThursday)(d) : _d3Time.timeThursday.ceil(d);
  return pad(_d3Time.timeThursday.count((0, _d3Time.timeYear)(d), d) + ((0, _d3Time.timeYear)(d).getDay() === 4), p, 2);
}

function formatWeekdayNumberSunday(d) {
  return d.getDay();
}

function formatWeekNumberMonday(d, p) {
  return pad(_d3Time.timeMonday.count((0, _d3Time.timeYear)(d) - 1, d), p, 2);
}

function formatYear(d, p) {
  return pad(d.getFullYear() % 100, p, 2);
}

function formatFullYear(d, p) {
  return pad(d.getFullYear() % 10000, p, 4);
}

function formatZone(d) {
  var z = d.getTimezoneOffset();
  return (z > 0 ? "-" : (z *= -1, "+")) + pad(z / 60 | 0, "0", 2) + pad(z % 60, "0", 2);
}

function formatUTCDayOfMonth(d, p) {
  return pad(d.getUTCDate(), p, 2);
}

function formatUTCHour24(d, p) {
  return pad(d.getUTCHours(), p, 2);
}

function formatUTCHour12(d, p) {
  return pad(d.getUTCHours() % 12 || 12, p, 2);
}

function formatUTCDayOfYear(d, p) {
  return pad(1 + _d3Time.utcDay.count((0, _d3Time.utcYear)(d), d), p, 3);
}

function formatUTCMilliseconds(d, p) {
  return pad(d.getUTCMilliseconds(), p, 3);
}

function formatUTCMicroseconds(d, p) {
  return formatUTCMilliseconds(d, p) + "000";
}

function formatUTCMonthNumber(d, p) {
  return pad(d.getUTCMonth() + 1, p, 2);
}

function formatUTCMinutes(d, p) {
  return pad(d.getUTCMinutes(), p, 2);
}

function formatUTCSeconds(d, p) {
  return pad(d.getUTCSeconds(), p, 2);
}

function formatUTCWeekdayNumberMonday(d) {
  var dow = d.getUTCDay();
  return dow === 0 ? 7 : dow;
}

function formatUTCWeekNumberSunday(d, p) {
  return pad(_d3Time.utcSunday.count((0, _d3Time.utcYear)(d) - 1, d), p, 2);
}

function formatUTCWeekNumberISO(d, p) {
  var day = d.getUTCDay();
  d = day >= 4 || day === 0 ? (0, _d3Time.utcThursday)(d) : _d3Time.utcThursday.ceil(d);
  return pad(_d3Time.utcThursday.count((0, _d3Time.utcYear)(d), d) + ((0, _d3Time.utcYear)(d).getUTCDay() === 4), p, 2);
}

function formatUTCWeekdayNumberSunday(d) {
  return d.getUTCDay();
}

function formatUTCWeekNumberMonday(d, p) {
  return pad(_d3Time.utcMonday.count((0, _d3Time.utcYear)(d) - 1, d), p, 2);
}

function formatUTCYear(d, p) {
  return pad(d.getUTCFullYear() % 100, p, 2);
}

function formatUTCFullYear(d, p) {
  return pad(d.getUTCFullYear() % 10000, p, 4);
}

function formatUTCZone() {
  return "+0000";
}

function formatLiteralPercent() {
  return "%";
}

function formatUnixTimestamp(d) {
  return +d;
}

function formatUnixTimestampSeconds(d) {
  return Math.floor(+d / 1000);
}
},{"d3-time":"../../node_modules/d3-time/src/index.js"}],"../../node_modules/d3-time-format/src/defaultLocale.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = defaultLocale;
exports.utcParse = exports.utcFormat = exports.timeParse = exports.timeFormat = void 0;

var _locale = _interopRequireDefault(require("./locale.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var locale;
var timeFormat;
exports.timeFormat = timeFormat;
var timeParse;
exports.timeParse = timeParse;
var utcFormat;
exports.utcFormat = utcFormat;
var utcParse;
exports.utcParse = utcParse;
defaultLocale({
  dateTime: "%x, %X",
  date: "%-m/%-d/%Y",
  time: "%-I:%M:%S %p",
  periods: ["AM", "PM"],
  days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
  shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
  months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
  shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
});

function defaultLocale(definition) {
  locale = (0, _locale.default)(definition);
  exports.timeFormat = timeFormat = locale.format;
  exports.timeParse = timeParse = locale.parse;
  exports.utcFormat = utcFormat = locale.utcFormat;
  exports.utcParse = utcParse = locale.utcParse;
  return locale;
}
},{"./locale.js":"../../node_modules/d3-time-format/src/locale.js"}],"../../node_modules/d3-time-format/src/isoFormat.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.isoSpecifier = void 0;

var _defaultLocale = require("./defaultLocale.js");

var isoSpecifier = "%Y-%m-%dT%H:%M:%S.%LZ";
exports.isoSpecifier = isoSpecifier;

function formatIsoNative(date) {
  return date.toISOString();
}

var formatIso = Date.prototype.toISOString ? formatIsoNative : (0, _defaultLocale.utcFormat)(isoSpecifier);
var _default = formatIso;
exports.default = _default;
},{"./defaultLocale.js":"../../node_modules/d3-time-format/src/defaultLocale.js"}],"../../node_modules/d3-time-format/src/isoParse.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _isoFormat = require("./isoFormat.js");

var _defaultLocale = require("./defaultLocale.js");

function parseIsoNative(string) {
  var date = new Date(string);
  return isNaN(date) ? null : date;
}

var parseIso = +new Date("2000-01-01T00:00:00.000Z") ? parseIsoNative : (0, _defaultLocale.utcParse)(_isoFormat.isoSpecifier);
var _default = parseIso;
exports.default = _default;
},{"./isoFormat.js":"../../node_modules/d3-time-format/src/isoFormat.js","./defaultLocale.js":"../../node_modules/d3-time-format/src/defaultLocale.js"}],"../../node_modules/d3-time-format/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "timeFormatDefaultLocale", {
  enumerable: true,
  get: function () {
    return _defaultLocale.default;
  }
});
Object.defineProperty(exports, "timeFormat", {
  enumerable: true,
  get: function () {
    return _defaultLocale.timeFormat;
  }
});
Object.defineProperty(exports, "timeParse", {
  enumerable: true,
  get: function () {
    return _defaultLocale.timeParse;
  }
});
Object.defineProperty(exports, "utcFormat", {
  enumerable: true,
  get: function () {
    return _defaultLocale.utcFormat;
  }
});
Object.defineProperty(exports, "utcParse", {
  enumerable: true,
  get: function () {
    return _defaultLocale.utcParse;
  }
});
Object.defineProperty(exports, "timeFormatLocale", {
  enumerable: true,
  get: function () {
    return _locale.default;
  }
});
Object.defineProperty(exports, "isoFormat", {
  enumerable: true,
  get: function () {
    return _isoFormat.default;
  }
});
Object.defineProperty(exports, "isoParse", {
  enumerable: true,
  get: function () {
    return _isoParse.default;
  }
});

var _defaultLocale = _interopRequireWildcard(require("./defaultLocale.js"));

var _locale = _interopRequireDefault(require("./locale.js"));

var _isoFormat = _interopRequireDefault(require("./isoFormat.js"));

var _isoParse = _interopRequireDefault(require("./isoParse.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./defaultLocale.js":"../../node_modules/d3-time-format/src/defaultLocale.js","./locale.js":"../../node_modules/d3-time-format/src/locale.js","./isoFormat.js":"../../node_modules/d3-time-format/src/isoFormat.js","./isoParse.js":"../../node_modules/d3-time-format/src/isoParse.js"}],"../../node_modules/d3-scale/src/time.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.calendar = calendar;
exports.default = _default;

var _d3Array = require("d3-array");

var _d3Time = require("d3-time");

var _d3TimeFormat = require("d3-time-format");

var _array = require("./array");

var _continuous = _interopRequireWildcard(require("./continuous"));

var _init = require("./init");

var _nice = _interopRequireDefault(require("./nice"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var durationSecond = 1000,
    durationMinute = durationSecond * 60,
    durationHour = durationMinute * 60,
    durationDay = durationHour * 24,
    durationWeek = durationDay * 7,
    durationMonth = durationDay * 30,
    durationYear = durationDay * 365;

function date(t) {
  return new Date(t);
}

function number(t) {
  return t instanceof Date ? +t : +new Date(+t);
}

function calendar(year, month, week, day, hour, minute, second, millisecond, format) {
  var scale = (0, _continuous.default)(_continuous.identity, _continuous.identity),
      invert = scale.invert,
      domain = scale.domain;
  var formatMillisecond = format(".%L"),
      formatSecond = format(":%S"),
      formatMinute = format("%I:%M"),
      formatHour = format("%I %p"),
      formatDay = format("%a %d"),
      formatWeek = format("%b %d"),
      formatMonth = format("%B"),
      formatYear = format("%Y");
  var tickIntervals = [[second, 1, durationSecond], [second, 5, 5 * durationSecond], [second, 15, 15 * durationSecond], [second, 30, 30 * durationSecond], [minute, 1, durationMinute], [minute, 5, 5 * durationMinute], [minute, 15, 15 * durationMinute], [minute, 30, 30 * durationMinute], [hour, 1, durationHour], [hour, 3, 3 * durationHour], [hour, 6, 6 * durationHour], [hour, 12, 12 * durationHour], [day, 1, durationDay], [day, 2, 2 * durationDay], [week, 1, durationWeek], [month, 1, durationMonth], [month, 3, 3 * durationMonth], [year, 1, durationYear]];

  function tickFormat(date) {
    return (second(date) < date ? formatMillisecond : minute(date) < date ? formatSecond : hour(date) < date ? formatMinute : day(date) < date ? formatHour : month(date) < date ? week(date) < date ? formatDay : formatWeek : year(date) < date ? formatMonth : formatYear)(date);
  }

  function tickInterval(interval, start, stop, step) {
    if (interval == null) interval = 10; // If a desired tick count is specified, pick a reasonable tick interval
    // based on the extent of the domain and a rough estimate of tick size.
    // Otherwise, assume interval is already a time interval and use it.

    if (typeof interval === "number") {
      var target = Math.abs(stop - start) / interval,
          i = (0, _d3Array.bisector)(function (i) {
        return i[2];
      }).right(tickIntervals, target);

      if (i === tickIntervals.length) {
        step = (0, _d3Array.tickStep)(start / durationYear, stop / durationYear, interval);
        interval = year;
      } else if (i) {
        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];
        step = i[1];
        interval = i[0];
      } else {
        step = Math.max((0, _d3Array.tickStep)(start, stop, interval), 1);
        interval = millisecond;
      }
    }

    return step == null ? interval : interval.every(step);
  }

  scale.invert = function (y) {
    return new Date(invert(y));
  };

  scale.domain = function (_) {
    return arguments.length ? domain(_array.map.call(_, number)) : domain().map(date);
  };

  scale.ticks = function (interval, step) {
    var d = domain(),
        t0 = d[0],
        t1 = d[d.length - 1],
        r = t1 < t0,
        t;
    if (r) t = t0, t0 = t1, t1 = t;
    t = tickInterval(interval, t0, t1, step);
    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop

    return r ? t.reverse() : t;
  };

  scale.tickFormat = function (count, specifier) {
    return specifier == null ? tickFormat : format(specifier);
  };

  scale.nice = function (interval, step) {
    var d = domain();
    return (interval = tickInterval(interval, d[0], d[d.length - 1], step)) ? domain((0, _nice.default)(d, interval)) : scale;
  };

  scale.copy = function () {
    return (0, _continuous.copy)(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));
  };

  return scale;
}

function _default() {
  return _init.initRange.apply(calendar(_d3Time.timeYear, _d3Time.timeMonth, _d3Time.timeWeek, _d3Time.timeDay, _d3Time.timeHour, _d3Time.timeMinute, _d3Time.timeSecond, _d3Time.timeMillisecond, _d3TimeFormat.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);
}
},{"d3-array":"../../node_modules/d3-array/src/index.js","d3-time":"../../node_modules/d3-time/src/index.js","d3-time-format":"../../node_modules/d3-time-format/src/index.js","./array":"../../node_modules/d3-scale/src/array.js","./continuous":"../../node_modules/d3-scale/src/continuous.js","./init":"../../node_modules/d3-scale/src/init.js","./nice":"../../node_modules/d3-scale/src/nice.js"}],"../../node_modules/d3-scale/src/utcTime.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _time = require("./time");

var _d3TimeFormat = require("d3-time-format");

var _d3Time = require("d3-time");

var _init = require("./init");

function _default() {
  return _init.initRange.apply((0, _time.calendar)(_d3Time.utcYear, _d3Time.utcMonth, _d3Time.utcWeek, _d3Time.utcDay, _d3Time.utcHour, _d3Time.utcMinute, _d3Time.utcSecond, _d3Time.utcMillisecond, _d3TimeFormat.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);
}
},{"./time":"../../node_modules/d3-scale/src/time.js","d3-time-format":"../../node_modules/d3-time-format/src/index.js","d3-time":"../../node_modules/d3-time/src/index.js","./init":"../../node_modules/d3-scale/src/init.js"}],"../../node_modules/d3-scale/src/sequential.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.copy = copy;
exports.default = sequential;
exports.sequentialLog = sequentialLog;
exports.sequentialSymlog = sequentialSymlog;
exports.sequentialPow = sequentialPow;
exports.sequentialSqrt = sequentialSqrt;

var _continuous = require("./continuous");

var _init = require("./init");

var _linear = require("./linear");

var _log = require("./log");

var _symlog = require("./symlog");

var _pow = require("./pow");

function transformer() {
  var x0 = 0,
      x1 = 1,
      t0,
      t1,
      k10,
      transform,
      interpolator = _continuous.identity,
      clamp = false,
      unknown;

  function scale(x) {
    return isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));
  }

  scale.domain = function (_) {
    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];
  };

  scale.clamp = function (_) {
    return arguments.length ? (clamp = !!_, scale) : clamp;
  };

  scale.interpolator = function (_) {
    return arguments.length ? (interpolator = _, scale) : interpolator;
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  return function (t) {
    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);
    return scale;
  };
}

function copy(source, target) {
  return target.domain(source.domain()).interpolator(source.interpolator()).clamp(source.clamp()).unknown(source.unknown());
}

function sequential() {
  var scale = (0, _linear.linearish)(transformer()(_continuous.identity));

  scale.copy = function () {
    return copy(scale, sequential());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function sequentialLog() {
  var scale = (0, _log.loggish)(transformer()).domain([1, 10]);

  scale.copy = function () {
    return copy(scale, sequentialLog()).base(scale.base());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function sequentialSymlog() {
  var scale = (0, _symlog.symlogish)(transformer());

  scale.copy = function () {
    return copy(scale, sequentialSymlog()).constant(scale.constant());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function sequentialPow() {
  var scale = (0, _pow.powish)(transformer());

  scale.copy = function () {
    return copy(scale, sequentialPow()).exponent(scale.exponent());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function sequentialSqrt() {
  return sequentialPow.apply(null, arguments).exponent(0.5);
}
},{"./continuous":"../../node_modules/d3-scale/src/continuous.js","./init":"../../node_modules/d3-scale/src/init.js","./linear":"../../node_modules/d3-scale/src/linear.js","./log":"../../node_modules/d3-scale/src/log.js","./symlog":"../../node_modules/d3-scale/src/symlog.js","./pow":"../../node_modules/d3-scale/src/pow.js"}],"../../node_modules/d3-scale/src/sequentialQuantile.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = sequentialQuantile;

var _d3Array = require("d3-array");

var _continuous = require("./continuous");

var _init = require("./init");

function sequentialQuantile() {
  var domain = [],
      interpolator = _continuous.identity;

  function scale(x) {
    if (!isNaN(x = +x)) return interpolator(((0, _d3Array.bisect)(domain, x) - 1) / (domain.length - 1));
  }

  scale.domain = function (_) {
    if (!arguments.length) return domain.slice();
    domain = [];

    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);

    domain.sort(_d3Array.ascending);
    return scale;
  };

  scale.interpolator = function (_) {
    return arguments.length ? (interpolator = _, scale) : interpolator;
  };

  scale.copy = function () {
    return sequentialQuantile(interpolator).domain(domain);
  };

  return _init.initInterpolator.apply(scale, arguments);
}
},{"d3-array":"../../node_modules/d3-array/src/index.js","./continuous":"../../node_modules/d3-scale/src/continuous.js","./init":"../../node_modules/d3-scale/src/init.js"}],"../../node_modules/d3-scale/src/diverging.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = diverging;
exports.divergingLog = divergingLog;
exports.divergingSymlog = divergingSymlog;
exports.divergingPow = divergingPow;
exports.divergingSqrt = divergingSqrt;

var _continuous = require("./continuous");

var _init = require("./init");

var _linear = require("./linear");

var _log = require("./log");

var _sequential = require("./sequential");

var _symlog = require("./symlog");

var _pow = require("./pow");

function transformer() {
  var x0 = 0,
      x1 = 0.5,
      x2 = 1,
      t0,
      t1,
      t2,
      k10,
      k21,
      interpolator = _continuous.identity,
      transform,
      clamp = false,
      unknown;

  function scale(x) {
    return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (x < t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));
  }

  scale.domain = function (_) {
    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), t2 = transform(x2 = +_[2]), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), scale) : [x0, x1, x2];
  };

  scale.clamp = function (_) {
    return arguments.length ? (clamp = !!_, scale) : clamp;
  };

  scale.interpolator = function (_) {
    return arguments.length ? (interpolator = _, scale) : interpolator;
  };

  scale.unknown = function (_) {
    return arguments.length ? (unknown = _, scale) : unknown;
  };

  return function (t) {
    transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1);
    return scale;
  };
}

function diverging() {
  var scale = (0, _linear.linearish)(transformer()(_continuous.identity));

  scale.copy = function () {
    return (0, _sequential.copy)(scale, diverging());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function divergingLog() {
  var scale = (0, _log.loggish)(transformer()).domain([0.1, 1, 10]);

  scale.copy = function () {
    return (0, _sequential.copy)(scale, divergingLog()).base(scale.base());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function divergingSymlog() {
  var scale = (0, _symlog.symlogish)(transformer());

  scale.copy = function () {
    return (0, _sequential.copy)(scale, divergingSymlog()).constant(scale.constant());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function divergingPow() {
  var scale = (0, _pow.powish)(transformer());

  scale.copy = function () {
    return (0, _sequential.copy)(scale, divergingPow()).exponent(scale.exponent());
  };

  return _init.initInterpolator.apply(scale, arguments);
}

function divergingSqrt() {
  return divergingPow.apply(null, arguments).exponent(0.5);
}
},{"./continuous":"../../node_modules/d3-scale/src/continuous.js","./init":"../../node_modules/d3-scale/src/init.js","./linear":"../../node_modules/d3-scale/src/linear.js","./log":"../../node_modules/d3-scale/src/log.js","./sequential":"../../node_modules/d3-scale/src/sequential.js","./symlog":"../../node_modules/d3-scale/src/symlog.js","./pow":"../../node_modules/d3-scale/src/pow.js"}],"../../node_modules/d3-scale/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "scaleBand", {
  enumerable: true,
  get: function () {
    return _band.default;
  }
});
Object.defineProperty(exports, "scalePoint", {
  enumerable: true,
  get: function () {
    return _band.point;
  }
});
Object.defineProperty(exports, "scaleIdentity", {
  enumerable: true,
  get: function () {
    return _identity.default;
  }
});
Object.defineProperty(exports, "scaleLinear", {
  enumerable: true,
  get: function () {
    return _linear.default;
  }
});
Object.defineProperty(exports, "scaleLog", {
  enumerable: true,
  get: function () {
    return _log.default;
  }
});
Object.defineProperty(exports, "scaleSymlog", {
  enumerable: true,
  get: function () {
    return _symlog.default;
  }
});
Object.defineProperty(exports, "scaleOrdinal", {
  enumerable: true,
  get: function () {
    return _ordinal.default;
  }
});
Object.defineProperty(exports, "scaleImplicit", {
  enumerable: true,
  get: function () {
    return _ordinal.implicit;
  }
});
Object.defineProperty(exports, "scalePow", {
  enumerable: true,
  get: function () {
    return _pow.default;
  }
});
Object.defineProperty(exports, "scaleSqrt", {
  enumerable: true,
  get: function () {
    return _pow.sqrt;
  }
});
Object.defineProperty(exports, "scaleQuantile", {
  enumerable: true,
  get: function () {
    return _quantile.default;
  }
});
Object.defineProperty(exports, "scaleQuantize", {
  enumerable: true,
  get: function () {
    return _quantize.default;
  }
});
Object.defineProperty(exports, "scaleThreshold", {
  enumerable: true,
  get: function () {
    return _threshold.default;
  }
});
Object.defineProperty(exports, "scaleTime", {
  enumerable: true,
  get: function () {
    return _time.default;
  }
});
Object.defineProperty(exports, "scaleUtc", {
  enumerable: true,
  get: function () {
    return _utcTime.default;
  }
});
Object.defineProperty(exports, "scaleSequential", {
  enumerable: true,
  get: function () {
    return _sequential.default;
  }
});
Object.defineProperty(exports, "scaleSequentialLog", {
  enumerable: true,
  get: function () {
    return _sequential.sequentialLog;
  }
});
Object.defineProperty(exports, "scaleSequentialPow", {
  enumerable: true,
  get: function () {
    return _sequential.sequentialPow;
  }
});
Object.defineProperty(exports, "scaleSequentialSqrt", {
  enumerable: true,
  get: function () {
    return _sequential.sequentialSqrt;
  }
});
Object.defineProperty(exports, "scaleSequentialSymlog", {
  enumerable: true,
  get: function () {
    return _sequential.sequentialSymlog;
  }
});
Object.defineProperty(exports, "scaleSequentialQuantile", {
  enumerable: true,
  get: function () {
    return _sequentialQuantile.default;
  }
});
Object.defineProperty(exports, "scaleDiverging", {
  enumerable: true,
  get: function () {
    return _diverging.default;
  }
});
Object.defineProperty(exports, "scaleDivergingLog", {
  enumerable: true,
  get: function () {
    return _diverging.divergingLog;
  }
});
Object.defineProperty(exports, "scaleDivergingPow", {
  enumerable: true,
  get: function () {
    return _diverging.divergingPow;
  }
});
Object.defineProperty(exports, "scaleDivergingSqrt", {
  enumerable: true,
  get: function () {
    return _diverging.divergingSqrt;
  }
});
Object.defineProperty(exports, "scaleDivergingSymlog", {
  enumerable: true,
  get: function () {
    return _diverging.divergingSymlog;
  }
});
Object.defineProperty(exports, "tickFormat", {
  enumerable: true,
  get: function () {
    return _tickFormat.default;
  }
});

var _band = _interopRequireWildcard(require("./band"));

var _identity = _interopRequireDefault(require("./identity"));

var _linear = _interopRequireDefault(require("./linear"));

var _log = _interopRequireDefault(require("./log"));

var _symlog = _interopRequireDefault(require("./symlog"));

var _ordinal = _interopRequireWildcard(require("./ordinal"));

var _pow = _interopRequireWildcard(require("./pow"));

var _quantile = _interopRequireDefault(require("./quantile"));

var _quantize = _interopRequireDefault(require("./quantize"));

var _threshold = _interopRequireDefault(require("./threshold"));

var _time = _interopRequireDefault(require("./time"));

var _utcTime = _interopRequireDefault(require("./utcTime"));

var _sequential = _interopRequireWildcard(require("./sequential"));

var _sequentialQuantile = _interopRequireDefault(require("./sequentialQuantile"));

var _diverging = _interopRequireWildcard(require("./diverging"));

var _tickFormat = _interopRequireDefault(require("./tickFormat"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
},{"./band":"../../node_modules/d3-scale/src/band.js","./identity":"../../node_modules/d3-scale/src/identity.js","./linear":"../../node_modules/d3-scale/src/linear.js","./log":"../../node_modules/d3-scale/src/log.js","./symlog":"../../node_modules/d3-scale/src/symlog.js","./ordinal":"../../node_modules/d3-scale/src/ordinal.js","./pow":"../../node_modules/d3-scale/src/pow.js","./quantile":"../../node_modules/d3-scale/src/quantile.js","./quantize":"../../node_modules/d3-scale/src/quantize.js","./threshold":"../../node_modules/d3-scale/src/threshold.js","./time":"../../node_modules/d3-scale/src/time.js","./utcTime":"../../node_modules/d3-scale/src/utcTime.js","./sequential":"../../node_modules/d3-scale/src/sequential.js","./sequentialQuantile":"../../node_modules/d3-scale/src/sequentialQuantile.js","./diverging":"../../node_modules/d3-scale/src/diverging.js","./tickFormat":"../../node_modules/d3-scale/src/tickFormat.js"}],"../../node_modules/d3-scale-chromatic/src/colors.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(specifier) {
  var n = specifier.length / 6 | 0,
      colors = new Array(n),
      i = 0;

  while (i < n) colors[i] = "#" + specifier.slice(i * 6, ++i * 6);

  return colors;
}
},{}],"../../node_modules/d3-scale-chromatic/src/categorical/category10.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf");

exports.default = _default;
},{"../colors.js":"../../node_modules/d3-scale-chromatic/src/colors.js"}],"../../node_modules/d3-scale-chromatic/src/categorical/Accent.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666");

exports.default = _default;
},{"../colors.js":"../../node_modules/d3-scale-chromatic/src/colors.js"}],"../../node_modules/d3-scale-chromatic/src/categorical/Dark2.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666");

exports.default = _default;
},{"../colors.js":"../../node_modules/d3-scale-chromatic/src/colors.js"}],"../../node_modules/d3-scale-chromatic/src/categorical/Paired.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928");

exports.default = _default;
},{"../colors.js":"../../node_modules/d3-scale-chromatic/src/colors.js"}],"../../node_modules/d3-scale-chromatic/src/categorical/Pastel1.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2");

exports.default = _default;
},{"../colors.js":"../../node_modules/d3-scale-chromatic/src/colors.js"}],"../../node_modules/d3-scale-chromatic/src/categorical/Pastel2.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc");

exports.default = _default;
},{"../colors.js":"../../node_modules/d3-scale-chromatic/src/colors.js"}],"../../node_modules/d3-scale-chromatic/src/categorical/Set1.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999");

exports.default = _default;
},{"../colors.js":"../../node_modules/d3-scale-chromatic/src/colors.js"}],"../../node_modules/d3-scale-chromatic/src/categorical/Set2.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3");

exports.default = _default;
},{"../colors.js":"../../node_modules/d3-scale-chromatic/src/colors.js"}],"../../node_modules/d3-scale-chromatic/src/categorical/Set3.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f");

exports.default = _default;
},{"../colors.js":"../../node_modules/d3-scale-chromatic/src/colors.js"}],"../../node_modules/d3-scale-chromatic/src/categorical/Tableau10.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _default = (0, _colors.default)("4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab");

exports.default = _default;
},{"../colors.js":"../../node_modules/d3-scale-chromatic/src/colors.js"}],"../../node_modules/d3-scale-chromatic/src/ramp.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Interpolate = require("d3-interpolate");

function _default(scheme) {
  return (0, _d3Interpolate.interpolateRgbBasis)(scheme[scheme.length - 1]);
}
},{"d3-interpolate":"../../node_modules/d3-interpolate/src/index.js"}],"../../node_modules/d3-scale-chromatic/src/diverging/BrBG.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("d8b365f5f5f55ab4ac", "a6611adfc27d80cdc1018571", "a6611adfc27df5f5f580cdc1018571", "8c510ad8b365f6e8c3c7eae55ab4ac01665e", "8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e", "8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e", "8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e", "5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30", "5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../../node_modules/d3-scale-chromatic/src/ramp.js"}],"../../node_modules/d3-scale-chromatic/src/diverging/PRGn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("af8dc3f7f7f77fbf7b", "7b3294c2a5cfa6dba0008837", "7b3294c2a5cff7f7f7a6dba0008837", "762a83af8dc3e7d4e8d9f0d37fbf7b1b7837", "762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837", "762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837", "762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837", "40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b", "40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../../node_modules/d3-scale-chromatic/src/ramp.js"}],"../../node_modules/d3-scale-chromatic/src/diverging/PiYG.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("e9a3c9f7f7f7a1d76a", "d01c8bf1b6dab8e1864dac26", "d01c8bf1b6daf7f7f7b8e1864dac26", "c51b7de9a3c9fde0efe6f5d0a1d76a4d9221", "c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221", "c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221", "c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221", "8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419", "8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../../node_modules/d3-scale-chromatic/src/ramp.js"}],"../../node_modules/d3-scale-chromatic/src/diverging/PuOr.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("998ec3f7f7f7f1a340", "5e3c99b2abd2fdb863e66101", "5e3c99b2abd2f7f7f7fdb863e66101", "542788998ec3d8daebfee0b6f1a340b35806", "542788998ec3d8daebf7f7f7fee0b6f1a340b35806", "5427888073acb2abd2d8daebfee0b6fdb863e08214b35806", "5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806", "2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08", "2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../../node_modules/d3-scale-chromatic/src/ramp.js"}],"../../node_modules/d3-scale-chromatic/src/diverging/RdBu.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("ef8a62f7f7f767a9cf", "ca0020f4a58292c5de0571b0", "ca0020f4a582f7f7f792c5de0571b0", "b2182bef8a62fddbc7d1e5f067a9cf2166ac", "b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac", "b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac", "b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac", "67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061", "67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../../node_modules/d3-scale-chromatic/src/ramp.js"}],"../../node_modules/d3-scale-chromatic/src/diverging/RdGy.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("ef8a62ffffff999999", "ca0020f4a582bababa404040", "ca0020f4a582ffffffbababa404040", "b2182bef8a62fddbc7e0e0e09999994d4d4d", "b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d", "b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d", "b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d", "67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a", "67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../../node_modules/d3-scale-chromatic/src/ramp.js"}],"../../node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fc8d59ffffbf91bfdb", "d7191cfdae61abd9e92c7bb6", "d7191cfdae61ffffbfabd9e92c7bb6", "d73027fc8d59fee090e0f3f891bfdb4575b4", "d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4", "d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4", "d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4", "a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695", "a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../../node_modules/d3-scale-chromatic/src/ramp.js"}],"../../node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fc8d59ffffbf91cf60", "d7191cfdae61a6d96a1a9641", "d7191cfdae61ffffbfa6d96a1a9641", "d73027fc8d59fee08bd9ef8b91cf601a9850", "d73027fc8d59fee08bffffbfd9ef8b91cf601a9850", "d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850", "d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850", "a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837", "a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../../node_modules/d3-scale-chromatic/src/ramp.js"}],"../../node_modules/d3-scale-chromatic/src/diverging/Spectral.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fc8d59ffffbf99d594", "d7191cfdae61abdda42b83ba", "d7191cfdae61ffffbfabdda42b83ba", "d53e4ffc8d59fee08be6f59899d5943288bd", "d53e4ffc8d59fee08bffffbfe6f59899d5943288bd", "d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd", "d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd", "9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2", "9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../../node_modules/d3-scale-chromatic/src/ramp.js"}],"../../node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("e5f5f999d8c92ca25f", "edf8fbb2e2e266c2a4238b45", "edf8fbb2e2e266c2a42ca25f006d2c", "edf8fbccece699d8c966c2a42ca25f006d2c", "edf8fbccece699d8c966c2a441ae76238b45005824", "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824", "f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../../node_modules/d3-scale-chromatic/src/ramp.js"}],"../../node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("e0ecf49ebcda8856a7", "edf8fbb3cde38c96c688419d", "edf8fbb3cde38c96c68856a7810f7c", "edf8fbbfd3e69ebcda8c96c68856a7810f7c", "edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b", "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b", "f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../../node_modules/d3-scale-chromatic/src/ramp.js"}],"../../node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("e0f3dba8ddb543a2ca", "f0f9e8bae4bc7bccc42b8cbe", "f0f9e8bae4bc7bccc443a2ca0868ac", "f0f9e8ccebc5a8ddb57bccc443a2ca0868ac", "f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e", "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e", "f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../../node_modules/d3-scale-chromatic/src/ramp.js"}],"../../node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fee8c8fdbb84e34a33", "fef0d9fdcc8afc8d59d7301f", "fef0d9fdcc8afc8d59e34a33b30000", "fef0d9fdd49efdbb84fc8d59e34a33b30000", "fef0d9fdd49efdbb84fc8d59ef6548d7301f990000", "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000", "fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../../node_modules/d3-scale-chromatic/src/ramp.js"}],"../../node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("ece2f0a6bddb1c9099", "f6eff7bdc9e167a9cf02818a", "f6eff7bdc9e167a9cf1c9099016c59", "f6eff7d0d1e6a6bddb67a9cf1c9099016c59", "f6eff7d0d1e6a6bddb67a9cf3690c002818a016450", "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450", "fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../../node_modules/d3-scale-chromatic/src/ramp.js"}],"../../node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("ece7f2a6bddb2b8cbe", "f1eef6bdc9e174a9cf0570b0", "f1eef6bdc9e174a9cf2b8cbe045a8d", "f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d", "f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b", "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b", "fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../../node_modules/d3-scale-chromatic/src/ramp.js"}],"../../node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("e7e1efc994c7dd1c77", "f1eef6d7b5d8df65b0ce1256", "f1eef6d7b5d8df65b0dd1c77980043", "f1eef6d4b9dac994c7df65b0dd1c77980043", "f1eef6d4b9dac994c7df65b0e7298ace125691003f", "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f", "f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../../node_modules/d3-scale-chromatic/src/ramp.js"}],"../../node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fde0ddfa9fb5c51b8a", "feebe2fbb4b9f768a1ae017e", "feebe2fbb4b9f768a1c51b8a7a0177", "feebe2fcc5c0fa9fb5f768a1c51b8a7a0177", "feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177", "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177", "fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../../node_modules/d3-scale-chromatic/src/ramp.js"}],"../../node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("edf8b17fcdbb2c7fb8", "ffffcca1dab441b6c4225ea8", "ffffcca1dab441b6c42c7fb8253494", "ffffccc7e9b47fcdbb41b6c42c7fb8253494", "ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84", "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84", "ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../../node_modules/d3-scale-chromatic/src/ramp.js"}],"../../node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("f7fcb9addd8e31a354", "ffffccc2e69978c679238443", "ffffccc2e69978c67931a354006837", "ffffccd9f0a3addd8e78c67931a354006837", "ffffccd9f0a3addd8e78c67941ab5d238443005a32", "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32", "ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../../node_modules/d3-scale-chromatic/src/ramp.js"}],"../../node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fff7bcfec44fd95f0e", "ffffd4fed98efe9929cc4c02", "ffffd4fed98efe9929d95f0e993404", "ffffd4fee391fec44ffe9929d95f0e993404", "ffffd4fee391fec44ffe9929ec7014cc4c028c2d04", "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04", "ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../../node_modules/d3-scale-chromatic/src/ramp.js"}],"../../node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("ffeda0feb24cf03b20", "ffffb2fecc5cfd8d3ce31a1c", "ffffb2fecc5cfd8d3cf03b20bd0026", "ffffb2fed976feb24cfd8d3cf03b20bd0026", "ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026", "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026", "ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../../node_modules/d3-scale-chromatic/src/ramp.js"}],"../../node_modules/d3-scale-chromatic/src/sequential-single/Blues.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("deebf79ecae13182bd", "eff3ffbdd7e76baed62171b5", "eff3ffbdd7e76baed63182bd08519c", "eff3ffc6dbef9ecae16baed63182bd08519c", "eff3ffc6dbef9ecae16baed64292c62171b5084594", "f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594", "f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../../node_modules/d3-scale-chromatic/src/ramp.js"}],"../../node_modules/d3-scale-chromatic/src/sequential-single/Greens.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("e5f5e0a1d99b31a354", "edf8e9bae4b374c476238b45", "edf8e9bae4b374c47631a354006d2c", "edf8e9c7e9c0a1d99b74c47631a354006d2c", "edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32", "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32", "f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../../node_modules/d3-scale-chromatic/src/ramp.js"}],"../../node_modules/d3-scale-chromatic/src/sequential-single/Greys.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("f0f0f0bdbdbd636363", "f7f7f7cccccc969696525252", "f7f7f7cccccc969696636363252525", "f7f7f7d9d9d9bdbdbd969696636363252525", "f7f7f7d9d9d9bdbdbd969696737373525252252525", "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525", "fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../../node_modules/d3-scale-chromatic/src/ramp.js"}],"../../node_modules/d3-scale-chromatic/src/sequential-single/Purples.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("efedf5bcbddc756bb1", "f2f0f7cbc9e29e9ac86a51a3", "f2f0f7cbc9e29e9ac8756bb154278f", "f2f0f7dadaebbcbddc9e9ac8756bb154278f", "f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486", "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486", "fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../../node_modules/d3-scale-chromatic/src/ramp.js"}],"../../node_modules/d3-scale-chromatic/src/sequential-single/Reds.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fee0d2fc9272de2d26", "fee5d9fcae91fb6a4acb181d", "fee5d9fcae91fb6a4ade2d26a50f15", "fee5d9fcbba1fc9272fb6a4ade2d26a50f15", "fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d", "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d", "fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../../node_modules/d3-scale-chromatic/src/ramp.js"}],"../../node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.scheme = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

var _ramp = _interopRequireDefault(require("../ramp.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var scheme = new Array(3).concat("fee6cefdae6be6550d", "feeddefdbe85fd8d3cd94701", "feeddefdbe85fd8d3ce6550da63603", "feeddefdd0a2fdae6bfd8d3ce6550da63603", "feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04", "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04", "fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map(_colors.default);
exports.scheme = scheme;

var _default = (0, _ramp.default)(scheme);

exports.default = _default;
},{"../colors.js":"../../node_modules/d3-scale-chromatic/src/colors.js","../ramp.js":"../../node_modules/d3-scale-chromatic/src/ramp.js"}],"../../node_modules/d3-scale-chromatic/src/sequential-multi/cividis.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(t) {
  t = Math.max(0, Math.min(1, t));
  return "rgb(" + Math.max(0, Math.min(255, Math.round(-4.54 - t * (35.34 - t * (2381.73 - t * (6402.7 - t * (7024.72 - t * 2710.57))))))) + ", " + Math.max(0, Math.min(255, Math.round(32.49 + t * (170.73 + t * (52.82 - t * (131.46 - t * (176.58 - t * 67.37))))))) + ", " + Math.max(0, Math.min(255, Math.round(81.24 + t * (442.36 - t * (2482.43 - t * (6167.24 - t * (6614.94 - t * 2475.67))))))) + ")";
}
},{}],"../../node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _d3Color = require("d3-color");

var _d3Interpolate = require("d3-interpolate");

var _default = (0, _d3Interpolate.interpolateCubehelixLong)((0, _d3Color.cubehelix)(300, 0.5, 0.0), (0, _d3Color.cubehelix)(-240, 0.5, 1.0));

exports.default = _default;
},{"d3-color":"../../node_modules/d3-color/src/index.js","d3-interpolate":"../../node_modules/d3-interpolate/src/index.js"}],"../../node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.cool = exports.warm = void 0;

var _d3Color = require("d3-color");

var _d3Interpolate = require("d3-interpolate");

var warm = (0, _d3Interpolate.interpolateCubehelixLong)((0, _d3Color.cubehelix)(-100, 0.75, 0.35), (0, _d3Color.cubehelix)(80, 1.50, 0.8));
exports.warm = warm;
var cool = (0, _d3Interpolate.interpolateCubehelixLong)((0, _d3Color.cubehelix)(260, 0.75, 0.35), (0, _d3Color.cubehelix)(80, 1.50, 0.8));
exports.cool = cool;
var c = (0, _d3Color.cubehelix)();

function _default(t) {
  if (t < 0 || t > 1) t -= Math.floor(t);
  var ts = Math.abs(t - 0.5);
  c.h = 360 * t - 100;
  c.s = 1.5 - 1.5 * ts;
  c.l = 0.8 - 0.9 * ts;
  return c + "";
}
},{"d3-color":"../../node_modules/d3-color/src/index.js","d3-interpolate":"../../node_modules/d3-interpolate/src/index.js"}],"../../node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Color = require("d3-color");

var c = (0, _d3Color.rgb)(),
    pi_1_3 = Math.PI / 3,
    pi_2_3 = Math.PI * 2 / 3;

function _default(t) {
  var x;
  t = (0.5 - t) * Math.PI;
  c.r = 255 * (x = Math.sin(t)) * x;
  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;
  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;
  return c + "";
}
},{"d3-color":"../../node_modules/d3-color/src/index.js"}],"../../node_modules/d3-scale-chromatic/src/sequential-multi/turbo.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(t) {
  t = Math.max(0, Math.min(1, t));
  return "rgb(" + Math.max(0, Math.min(255, Math.round(34.61 + t * (1172.33 - t * (10793.56 - t * (33300.12 - t * (38394.49 - t * 14825.05))))))) + ", " + Math.max(0, Math.min(255, Math.round(23.31 + t * (557.33 + t * (1225.33 - t * (3574.96 - t * (1073.77 + t * 707.56))))))) + ", " + Math.max(0, Math.min(255, Math.round(27.2 + t * (3211.1 - t * (15327.97 - t * (27814 - t * (22569.18 - t * 6838.66))))))) + ")";
}
},{}],"../../node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.plasma = exports.inferno = exports.magma = exports.default = void 0;

var _colors = _interopRequireDefault(require("../colors.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ramp(range) {
  var n = range.length;
  return function (t) {
    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
  };
}

var _default = ramp((0, _colors.default)("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725"));

exports.default = _default;
var magma = ramp((0, _colors.default)("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf"));
exports.magma = magma;
var inferno = ramp((0, _colors.default)("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4"));
exports.inferno = inferno;
var plasma = ramp((0, _colors.default)("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));
exports.plasma = plasma;
},{"../colors.js":"../../node_modules/d3-scale-chromatic/src/colors.js"}],"../../node_modules/d3-scale-chromatic/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "schemeCategory10", {
  enumerable: true,
  get: function () {
    return _category.default;
  }
});
Object.defineProperty(exports, "schemeAccent", {
  enumerable: true,
  get: function () {
    return _Accent.default;
  }
});
Object.defineProperty(exports, "schemeDark2", {
  enumerable: true,
  get: function () {
    return _Dark.default;
  }
});
Object.defineProperty(exports, "schemePaired", {
  enumerable: true,
  get: function () {
    return _Paired.default;
  }
});
Object.defineProperty(exports, "schemePastel1", {
  enumerable: true,
  get: function () {
    return _Pastel.default;
  }
});
Object.defineProperty(exports, "schemePastel2", {
  enumerable: true,
  get: function () {
    return _Pastel2.default;
  }
});
Object.defineProperty(exports, "schemeSet1", {
  enumerable: true,
  get: function () {
    return _Set.default;
  }
});
Object.defineProperty(exports, "schemeSet2", {
  enumerable: true,
  get: function () {
    return _Set2.default;
  }
});
Object.defineProperty(exports, "schemeSet3", {
  enumerable: true,
  get: function () {
    return _Set3.default;
  }
});
Object.defineProperty(exports, "schemeTableau10", {
  enumerable: true,
  get: function () {
    return _Tableau.default;
  }
});
Object.defineProperty(exports, "interpolateBrBG", {
  enumerable: true,
  get: function () {
    return _BrBG.default;
  }
});
Object.defineProperty(exports, "schemeBrBG", {
  enumerable: true,
  get: function () {
    return _BrBG.scheme;
  }
});
Object.defineProperty(exports, "interpolatePRGn", {
  enumerable: true,
  get: function () {
    return _PRGn.default;
  }
});
Object.defineProperty(exports, "schemePRGn", {
  enumerable: true,
  get: function () {
    return _PRGn.scheme;
  }
});
Object.defineProperty(exports, "interpolatePiYG", {
  enumerable: true,
  get: function () {
    return _PiYG.default;
  }
});
Object.defineProperty(exports, "schemePiYG", {
  enumerable: true,
  get: function () {
    return _PiYG.scheme;
  }
});
Object.defineProperty(exports, "interpolatePuOr", {
  enumerable: true,
  get: function () {
    return _PuOr.default;
  }
});
Object.defineProperty(exports, "schemePuOr", {
  enumerable: true,
  get: function () {
    return _PuOr.scheme;
  }
});
Object.defineProperty(exports, "interpolateRdBu", {
  enumerable: true,
  get: function () {
    return _RdBu.default;
  }
});
Object.defineProperty(exports, "schemeRdBu", {
  enumerable: true,
  get: function () {
    return _RdBu.scheme;
  }
});
Object.defineProperty(exports, "interpolateRdGy", {
  enumerable: true,
  get: function () {
    return _RdGy.default;
  }
});
Object.defineProperty(exports, "schemeRdGy", {
  enumerable: true,
  get: function () {
    return _RdGy.scheme;
  }
});
Object.defineProperty(exports, "interpolateRdYlBu", {
  enumerable: true,
  get: function () {
    return _RdYlBu.default;
  }
});
Object.defineProperty(exports, "schemeRdYlBu", {
  enumerable: true,
  get: function () {
    return _RdYlBu.scheme;
  }
});
Object.defineProperty(exports, "interpolateRdYlGn", {
  enumerable: true,
  get: function () {
    return _RdYlGn.default;
  }
});
Object.defineProperty(exports, "schemeRdYlGn", {
  enumerable: true,
  get: function () {
    return _RdYlGn.scheme;
  }
});
Object.defineProperty(exports, "interpolateSpectral", {
  enumerable: true,
  get: function () {
    return _Spectral.default;
  }
});
Object.defineProperty(exports, "schemeSpectral", {
  enumerable: true,
  get: function () {
    return _Spectral.scheme;
  }
});
Object.defineProperty(exports, "interpolateBuGn", {
  enumerable: true,
  get: function () {
    return _BuGn.default;
  }
});
Object.defineProperty(exports, "schemeBuGn", {
  enumerable: true,
  get: function () {
    return _BuGn.scheme;
  }
});
Object.defineProperty(exports, "interpolateBuPu", {
  enumerable: true,
  get: function () {
    return _BuPu.default;
  }
});
Object.defineProperty(exports, "schemeBuPu", {
  enumerable: true,
  get: function () {
    return _BuPu.scheme;
  }
});
Object.defineProperty(exports, "interpolateGnBu", {
  enumerable: true,
  get: function () {
    return _GnBu.default;
  }
});
Object.defineProperty(exports, "schemeGnBu", {
  enumerable: true,
  get: function () {
    return _GnBu.scheme;
  }
});
Object.defineProperty(exports, "interpolateOrRd", {
  enumerable: true,
  get: function () {
    return _OrRd.default;
  }
});
Object.defineProperty(exports, "schemeOrRd", {
  enumerable: true,
  get: function () {
    return _OrRd.scheme;
  }
});
Object.defineProperty(exports, "interpolatePuBuGn", {
  enumerable: true,
  get: function () {
    return _PuBuGn.default;
  }
});
Object.defineProperty(exports, "schemePuBuGn", {
  enumerable: true,
  get: function () {
    return _PuBuGn.scheme;
  }
});
Object.defineProperty(exports, "interpolatePuBu", {
  enumerable: true,
  get: function () {
    return _PuBu.default;
  }
});
Object.defineProperty(exports, "schemePuBu", {
  enumerable: true,
  get: function () {
    return _PuBu.scheme;
  }
});
Object.defineProperty(exports, "interpolatePuRd", {
  enumerable: true,
  get: function () {
    return _PuRd.default;
  }
});
Object.defineProperty(exports, "schemePuRd", {
  enumerable: true,
  get: function () {
    return _PuRd.scheme;
  }
});
Object.defineProperty(exports, "interpolateRdPu", {
  enumerable: true,
  get: function () {
    return _RdPu.default;
  }
});
Object.defineProperty(exports, "schemeRdPu", {
  enumerable: true,
  get: function () {
    return _RdPu.scheme;
  }
});
Object.defineProperty(exports, "interpolateYlGnBu", {
  enumerable: true,
  get: function () {
    return _YlGnBu.default;
  }
});
Object.defineProperty(exports, "schemeYlGnBu", {
  enumerable: true,
  get: function () {
    return _YlGnBu.scheme;
  }
});
Object.defineProperty(exports, "interpolateYlGn", {
  enumerable: true,
  get: function () {
    return _YlGn.default;
  }
});
Object.defineProperty(exports, "schemeYlGn", {
  enumerable: true,
  get: function () {
    return _YlGn.scheme;
  }
});
Object.defineProperty(exports, "interpolateYlOrBr", {
  enumerable: true,
  get: function () {
    return _YlOrBr.default;
  }
});
Object.defineProperty(exports, "schemeYlOrBr", {
  enumerable: true,
  get: function () {
    return _YlOrBr.scheme;
  }
});
Object.defineProperty(exports, "interpolateYlOrRd", {
  enumerable: true,
  get: function () {
    return _YlOrRd.default;
  }
});
Object.defineProperty(exports, "schemeYlOrRd", {
  enumerable: true,
  get: function () {
    return _YlOrRd.scheme;
  }
});
Object.defineProperty(exports, "interpolateBlues", {
  enumerable: true,
  get: function () {
    return _Blues.default;
  }
});
Object.defineProperty(exports, "schemeBlues", {
  enumerable: true,
  get: function () {
    return _Blues.scheme;
  }
});
Object.defineProperty(exports, "interpolateGreens", {
  enumerable: true,
  get: function () {
    return _Greens.default;
  }
});
Object.defineProperty(exports, "schemeGreens", {
  enumerable: true,
  get: function () {
    return _Greens.scheme;
  }
});
Object.defineProperty(exports, "interpolateGreys", {
  enumerable: true,
  get: function () {
    return _Greys.default;
  }
});
Object.defineProperty(exports, "schemeGreys", {
  enumerable: true,
  get: function () {
    return _Greys.scheme;
  }
});
Object.defineProperty(exports, "interpolatePurples", {
  enumerable: true,
  get: function () {
    return _Purples.default;
  }
});
Object.defineProperty(exports, "schemePurples", {
  enumerable: true,
  get: function () {
    return _Purples.scheme;
  }
});
Object.defineProperty(exports, "interpolateReds", {
  enumerable: true,
  get: function () {
    return _Reds.default;
  }
});
Object.defineProperty(exports, "schemeReds", {
  enumerable: true,
  get: function () {
    return _Reds.scheme;
  }
});
Object.defineProperty(exports, "interpolateOranges", {
  enumerable: true,
  get: function () {
    return _Oranges.default;
  }
});
Object.defineProperty(exports, "schemeOranges", {
  enumerable: true,
  get: function () {
    return _Oranges.scheme;
  }
});
Object.defineProperty(exports, "interpolateCividis", {
  enumerable: true,
  get: function () {
    return _cividis.default;
  }
});
Object.defineProperty(exports, "interpolateCubehelixDefault", {
  enumerable: true,
  get: function () {
    return _cubehelix.default;
  }
});
Object.defineProperty(exports, "interpolateRainbow", {
  enumerable: true,
  get: function () {
    return _rainbow.default;
  }
});
Object.defineProperty(exports, "interpolateWarm", {
  enumerable: true,
  get: function () {
    return _rainbow.warm;
  }
});
Object.defineProperty(exports, "interpolateCool", {
  enumerable: true,
  get: function () {
    return _rainbow.cool;
  }
});
Object.defineProperty(exports, "interpolateSinebow", {
  enumerable: true,
  get: function () {
    return _sinebow.default;
  }
});
Object.defineProperty(exports, "interpolateTurbo", {
  enumerable: true,
  get: function () {
    return _turbo.default;
  }
});
Object.defineProperty(exports, "interpolateViridis", {
  enumerable: true,
  get: function () {
    return _viridis.default;
  }
});
Object.defineProperty(exports, "interpolateMagma", {
  enumerable: true,
  get: function () {
    return _viridis.magma;
  }
});
Object.defineProperty(exports, "interpolateInferno", {
  enumerable: true,
  get: function () {
    return _viridis.inferno;
  }
});
Object.defineProperty(exports, "interpolatePlasma", {
  enumerable: true,
  get: function () {
    return _viridis.plasma;
  }
});

var _category = _interopRequireDefault(require("./categorical/category10.js"));

var _Accent = _interopRequireDefault(require("./categorical/Accent.js"));

var _Dark = _interopRequireDefault(require("./categorical/Dark2.js"));

var _Paired = _interopRequireDefault(require("./categorical/Paired.js"));

var _Pastel = _interopRequireDefault(require("./categorical/Pastel1.js"));

var _Pastel2 = _interopRequireDefault(require("./categorical/Pastel2.js"));

var _Set = _interopRequireDefault(require("./categorical/Set1.js"));

var _Set2 = _interopRequireDefault(require("./categorical/Set2.js"));

var _Set3 = _interopRequireDefault(require("./categorical/Set3.js"));

var _Tableau = _interopRequireDefault(require("./categorical/Tableau10.js"));

var _BrBG = _interopRequireWildcard(require("./diverging/BrBG.js"));

var _PRGn = _interopRequireWildcard(require("./diverging/PRGn.js"));

var _PiYG = _interopRequireWildcard(require("./diverging/PiYG.js"));

var _PuOr = _interopRequireWildcard(require("./diverging/PuOr.js"));

var _RdBu = _interopRequireWildcard(require("./diverging/RdBu.js"));

var _RdGy = _interopRequireWildcard(require("./diverging/RdGy.js"));

var _RdYlBu = _interopRequireWildcard(require("./diverging/RdYlBu.js"));

var _RdYlGn = _interopRequireWildcard(require("./diverging/RdYlGn.js"));

var _Spectral = _interopRequireWildcard(require("./diverging/Spectral.js"));

var _BuGn = _interopRequireWildcard(require("./sequential-multi/BuGn.js"));

var _BuPu = _interopRequireWildcard(require("./sequential-multi/BuPu.js"));

var _GnBu = _interopRequireWildcard(require("./sequential-multi/GnBu.js"));

var _OrRd = _interopRequireWildcard(require("./sequential-multi/OrRd.js"));

var _PuBuGn = _interopRequireWildcard(require("./sequential-multi/PuBuGn.js"));

var _PuBu = _interopRequireWildcard(require("./sequential-multi/PuBu.js"));

var _PuRd = _interopRequireWildcard(require("./sequential-multi/PuRd.js"));

var _RdPu = _interopRequireWildcard(require("./sequential-multi/RdPu.js"));

var _YlGnBu = _interopRequireWildcard(require("./sequential-multi/YlGnBu.js"));

var _YlGn = _interopRequireWildcard(require("./sequential-multi/YlGn.js"));

var _YlOrBr = _interopRequireWildcard(require("./sequential-multi/YlOrBr.js"));

var _YlOrRd = _interopRequireWildcard(require("./sequential-multi/YlOrRd.js"));

var _Blues = _interopRequireWildcard(require("./sequential-single/Blues.js"));

var _Greens = _interopRequireWildcard(require("./sequential-single/Greens.js"));

var _Greys = _interopRequireWildcard(require("./sequential-single/Greys.js"));

var _Purples = _interopRequireWildcard(require("./sequential-single/Purples.js"));

var _Reds = _interopRequireWildcard(require("./sequential-single/Reds.js"));

var _Oranges = _interopRequireWildcard(require("./sequential-single/Oranges.js"));

var _cividis = _interopRequireDefault(require("./sequential-multi/cividis.js"));

var _cubehelix = _interopRequireDefault(require("./sequential-multi/cubehelix.js"));

var _rainbow = _interopRequireWildcard(require("./sequential-multi/rainbow.js"));

var _sinebow = _interopRequireDefault(require("./sequential-multi/sinebow.js"));

var _turbo = _interopRequireDefault(require("./sequential-multi/turbo.js"));

var _viridis = _interopRequireWildcard(require("./sequential-multi/viridis.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./categorical/category10.js":"../../node_modules/d3-scale-chromatic/src/categorical/category10.js","./categorical/Accent.js":"../../node_modules/d3-scale-chromatic/src/categorical/Accent.js","./categorical/Dark2.js":"../../node_modules/d3-scale-chromatic/src/categorical/Dark2.js","./categorical/Paired.js":"../../node_modules/d3-scale-chromatic/src/categorical/Paired.js","./categorical/Pastel1.js":"../../node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","./categorical/Pastel2.js":"../../node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","./categorical/Set1.js":"../../node_modules/d3-scale-chromatic/src/categorical/Set1.js","./categorical/Set2.js":"../../node_modules/d3-scale-chromatic/src/categorical/Set2.js","./categorical/Set3.js":"../../node_modules/d3-scale-chromatic/src/categorical/Set3.js","./categorical/Tableau10.js":"../../node_modules/d3-scale-chromatic/src/categorical/Tableau10.js","./diverging/BrBG.js":"../../node_modules/d3-scale-chromatic/src/diverging/BrBG.js","./diverging/PRGn.js":"../../node_modules/d3-scale-chromatic/src/diverging/PRGn.js","./diverging/PiYG.js":"../../node_modules/d3-scale-chromatic/src/diverging/PiYG.js","./diverging/PuOr.js":"../../node_modules/d3-scale-chromatic/src/diverging/PuOr.js","./diverging/RdBu.js":"../../node_modules/d3-scale-chromatic/src/diverging/RdBu.js","./diverging/RdGy.js":"../../node_modules/d3-scale-chromatic/src/diverging/RdGy.js","./diverging/RdYlBu.js":"../../node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","./diverging/RdYlGn.js":"../../node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","./diverging/Spectral.js":"../../node_modules/d3-scale-chromatic/src/diverging/Spectral.js","./sequential-multi/BuGn.js":"../../node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","./sequential-multi/BuPu.js":"../../node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","./sequential-multi/GnBu.js":"../../node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","./sequential-multi/OrRd.js":"../../node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","./sequential-multi/PuBuGn.js":"../../node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","./sequential-multi/PuBu.js":"../../node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","./sequential-multi/PuRd.js":"../../node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","./sequential-multi/RdPu.js":"../../node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","./sequential-multi/YlGnBu.js":"../../node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","./sequential-multi/YlGn.js":"../../node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","./sequential-multi/YlOrBr.js":"../../node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","./sequential-multi/YlOrRd.js":"../../node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","./sequential-single/Blues.js":"../../node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","./sequential-single/Greens.js":"../../node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","./sequential-single/Greys.js":"../../node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","./sequential-single/Purples.js":"../../node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","./sequential-single/Reds.js":"../../node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","./sequential-single/Oranges.js":"../../node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","./sequential-multi/cividis.js":"../../node_modules/d3-scale-chromatic/src/sequential-multi/cividis.js","./sequential-multi/cubehelix.js":"../../node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","./sequential-multi/rainbow.js":"../../node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","./sequential-multi/sinebow.js":"../../node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","./sequential-multi/turbo.js":"../../node_modules/d3-scale-chromatic/src/sequential-multi/turbo.js","./sequential-multi/viridis.js":"../../node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js"}],"../../node_modules/d3-shape/src/constant.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return function constant() {
    return x;
  };
}
},{}],"../../node_modules/d3-shape/src/math.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.acos = acos;
exports.asin = asin;
exports.tau = exports.halfPi = exports.pi = exports.epsilon = exports.sqrt = exports.sin = exports.min = exports.max = exports.cos = exports.atan2 = exports.abs = void 0;
var abs = Math.abs;
exports.abs = abs;
var atan2 = Math.atan2;
exports.atan2 = atan2;
var cos = Math.cos;
exports.cos = cos;
var max = Math.max;
exports.max = max;
var min = Math.min;
exports.min = min;
var sin = Math.sin;
exports.sin = sin;
var sqrt = Math.sqrt;
exports.sqrt = sqrt;
var epsilon = 1e-12;
exports.epsilon = epsilon;
var pi = Math.PI;
exports.pi = pi;
var halfPi = pi / 2;
exports.halfPi = halfPi;
var tau = 2 * pi;
exports.tau = tau;

function acos(x) {
  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);
}

function asin(x) {
  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);
}
},{}],"../../node_modules/d3-shape/src/arc.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Path = require("d3-path");

var _constant = _interopRequireDefault(require("./constant.js"));

var _math = require("./math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function arcInnerRadius(d) {
  return d.innerRadius;
}

function arcOuterRadius(d) {
  return d.outerRadius;
}

function arcStartAngle(d) {
  return d.startAngle;
}

function arcEndAngle(d) {
  return d.endAngle;
}

function arcPadAngle(d) {
  return d && d.padAngle; // Note: optional!
}

function intersect(x0, y0, x1, y1, x2, y2, x3, y3) {
  var x10 = x1 - x0,
      y10 = y1 - y0,
      x32 = x3 - x2,
      y32 = y3 - y2,
      t = y32 * x10 - x32 * y10;
  if (t * t < _math.epsilon) return;
  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;
  return [x0 + t * x10, y0 + t * y10];
} // Compute perpendicular offset line of length rc.
// http://mathworld.wolfram.com/Circle-LineIntersection.html


function cornerTangents(x0, y0, x1, y1, r1, rc, cw) {
  var x01 = x0 - x1,
      y01 = y0 - y1,
      lo = (cw ? rc : -rc) / (0, _math.sqrt)(x01 * x01 + y01 * y01),
      ox = lo * y01,
      oy = -lo * x01,
      x11 = x0 + ox,
      y11 = y0 + oy,
      x10 = x1 + ox,
      y10 = y1 + oy,
      x00 = (x11 + x10) / 2,
      y00 = (y11 + y10) / 2,
      dx = x10 - x11,
      dy = y10 - y11,
      d2 = dx * dx + dy * dy,
      r = r1 - rc,
      D = x11 * y10 - x10 * y11,
      d = (dy < 0 ? -1 : 1) * (0, _math.sqrt)((0, _math.max)(0, r * r * d2 - D * D)),
      cx0 = (D * dy - dx * d) / d2,
      cy0 = (-D * dx - dy * d) / d2,
      cx1 = (D * dy + dx * d) / d2,
      cy1 = (-D * dx + dy * d) / d2,
      dx0 = cx0 - x00,
      dy0 = cy0 - y00,
      dx1 = cx1 - x00,
      dy1 = cy1 - y00; // Pick the closer of the two intersection points.
  // TODO Is there a faster way to determine which intersection to use?

  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;
  return {
    cx: cx0,
    cy: cy0,
    x01: -ox,
    y01: -oy,
    x11: cx0 * (r1 / r - 1),
    y11: cy0 * (r1 / r - 1)
  };
}

function _default() {
  var innerRadius = arcInnerRadius,
      outerRadius = arcOuterRadius,
      cornerRadius = (0, _constant.default)(0),
      padRadius = null,
      startAngle = arcStartAngle,
      endAngle = arcEndAngle,
      padAngle = arcPadAngle,
      context = null;

  function arc() {
    var buffer,
        r,
        r0 = +innerRadius.apply(this, arguments),
        r1 = +outerRadius.apply(this, arguments),
        a0 = startAngle.apply(this, arguments) - _math.halfPi,
        a1 = endAngle.apply(this, arguments) - _math.halfPi,
        da = (0, _math.abs)(a1 - a0),
        cw = a1 > a0;

    if (!context) context = buffer = (0, _d3Path.path)(); // Ensure that the outer radius is always larger than the inner radius.

    if (r1 < r0) r = r1, r1 = r0, r0 = r; // Is it a point?

    if (!(r1 > _math.epsilon)) context.moveTo(0, 0); // Or is it a circle or annulus?
    else if (da > _math.tau - _math.epsilon) {
        context.moveTo(r1 * (0, _math.cos)(a0), r1 * (0, _math.sin)(a0));
        context.arc(0, 0, r1, a0, a1, !cw);

        if (r0 > _math.epsilon) {
          context.moveTo(r0 * (0, _math.cos)(a1), r0 * (0, _math.sin)(a1));
          context.arc(0, 0, r0, a1, a0, cw);
        }
      } // Or is it a circular or annular sector?
      else {
          var a01 = a0,
              a11 = a1,
              a00 = a0,
              a10 = a1,
              da0 = da,
              da1 = da,
              ap = padAngle.apply(this, arguments) / 2,
              rp = ap > _math.epsilon && (padRadius ? +padRadius.apply(this, arguments) : (0, _math.sqrt)(r0 * r0 + r1 * r1)),
              rc = (0, _math.min)((0, _math.abs)(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),
              rc0 = rc,
              rc1 = rc,
              t0,
              t1; // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.

          if (rp > _math.epsilon) {
            var p0 = (0, _math.asin)(rp / r0 * (0, _math.sin)(ap)),
                p1 = (0, _math.asin)(rp / r1 * (0, _math.sin)(ap));
            if ((da0 -= p0 * 2) > _math.epsilon) p0 *= cw ? 1 : -1, a00 += p0, a10 -= p0;else da0 = 0, a00 = a10 = (a0 + a1) / 2;
            if ((da1 -= p1 * 2) > _math.epsilon) p1 *= cw ? 1 : -1, a01 += p1, a11 -= p1;else da1 = 0, a01 = a11 = (a0 + a1) / 2;
          }

          var x01 = r1 * (0, _math.cos)(a01),
              y01 = r1 * (0, _math.sin)(a01),
              x10 = r0 * (0, _math.cos)(a10),
              y10 = r0 * (0, _math.sin)(a10); // Apply rounded corners?

          if (rc > _math.epsilon) {
            var x11 = r1 * (0, _math.cos)(a11),
                y11 = r1 * (0, _math.sin)(a11),
                x00 = r0 * (0, _math.cos)(a00),
                y00 = r0 * (0, _math.sin)(a00),
                oc; // Restrict the corner radius according to the sector angle.

            if (da < _math.pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {
              var ax = x01 - oc[0],
                  ay = y01 - oc[1],
                  bx = x11 - oc[0],
                  by = y11 - oc[1],
                  kc = 1 / (0, _math.sin)((0, _math.acos)((ax * bx + ay * by) / ((0, _math.sqrt)(ax * ax + ay * ay) * (0, _math.sqrt)(bx * bx + by * by))) / 2),
                  lc = (0, _math.sqrt)(oc[0] * oc[0] + oc[1] * oc[1]);
              rc0 = (0, _math.min)(rc, (r0 - lc) / (kc - 1));
              rc1 = (0, _math.min)(rc, (r1 - lc) / (kc + 1));
            }
          } // Is the sector collapsed to a line?


          if (!(da1 > _math.epsilon)) context.moveTo(x01, y01); // Does the sector’s outer ring have rounded corners?
          else if (rc1 > _math.epsilon) {
              t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);
              t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);
              context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01); // Have the corners merged?

              if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, (0, _math.atan2)(t0.y01, t0.x01), (0, _math.atan2)(t1.y01, t1.x01), !cw); // Otherwise, draw the two corners and the ring.
              else {
                  context.arc(t0.cx, t0.cy, rc1, (0, _math.atan2)(t0.y01, t0.x01), (0, _math.atan2)(t0.y11, t0.x11), !cw);
                  context.arc(0, 0, r1, (0, _math.atan2)(t0.cy + t0.y11, t0.cx + t0.x11), (0, _math.atan2)(t1.cy + t1.y11, t1.cx + t1.x11), !cw);
                  context.arc(t1.cx, t1.cy, rc1, (0, _math.atan2)(t1.y11, t1.x11), (0, _math.atan2)(t1.y01, t1.x01), !cw);
                }
            } // Or is the outer ring just a circular arc?
            else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw); // Is there no inner ring, and it’s a circular sector?
          // Or perhaps it’s an annular sector collapsed due to padding?

          if (!(r0 > _math.epsilon) || !(da0 > _math.epsilon)) context.lineTo(x10, y10); // Does the sector’s inner ring (or point) have rounded corners?
          else if (rc0 > _math.epsilon) {
              t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);
              t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);
              context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01); // Have the corners merged?

              if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, (0, _math.atan2)(t0.y01, t0.x01), (0, _math.atan2)(t1.y01, t1.x01), !cw); // Otherwise, draw the two corners and the ring.
              else {
                  context.arc(t0.cx, t0.cy, rc0, (0, _math.atan2)(t0.y01, t0.x01), (0, _math.atan2)(t0.y11, t0.x11), !cw);
                  context.arc(0, 0, r0, (0, _math.atan2)(t0.cy + t0.y11, t0.cx + t0.x11), (0, _math.atan2)(t1.cy + t1.y11, t1.cx + t1.x11), cw);
                  context.arc(t1.cx, t1.cy, rc0, (0, _math.atan2)(t1.y11, t1.x11), (0, _math.atan2)(t1.y01, t1.x01), !cw);
                }
            } // Or is the inner ring just a circular arc?
            else context.arc(0, 0, r0, a10, a00, cw);
        }
    context.closePath();
    if (buffer) return context = null, buffer + "" || null;
  }

  arc.centroid = function () {
    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,
        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - _math.pi / 2;
    return [(0, _math.cos)(a) * r, (0, _math.sin)(a) * r];
  };

  arc.innerRadius = function (_) {
    return arguments.length ? (innerRadius = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : innerRadius;
  };

  arc.outerRadius = function (_) {
    return arguments.length ? (outerRadius = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : outerRadius;
  };

  arc.cornerRadius = function (_) {
    return arguments.length ? (cornerRadius = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : cornerRadius;
  };

  arc.padRadius = function (_) {
    return arguments.length ? (padRadius = _ == null ? null : typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : padRadius;
  };

  arc.startAngle = function (_) {
    return arguments.length ? (startAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : startAngle;
  };

  arc.endAngle = function (_) {
    return arguments.length ? (endAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : endAngle;
  };

  arc.padAngle = function (_) {
    return arguments.length ? (padAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), arc) : padAngle;
  };

  arc.context = function (_) {
    return arguments.length ? (context = _ == null ? null : _, arc) : context;
  };

  return arc;
}
},{"d3-path":"../../node_modules/d3-path/src/index.js","./constant.js":"../../node_modules/d3-shape/src/constant.js","./math.js":"../../node_modules/d3-shape/src/math.js"}],"../../node_modules/d3-shape/src/curve/linear.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function Linear(context) {
  this._context = context;
}

Linear.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._point = 0;
  },
  lineEnd: function () {
    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
      // proceed

      default:
        this._context.lineTo(x, y);

        break;
    }
  }
};

function _default(context) {
  return new Linear(context);
}
},{}],"../../node_modules/d3-shape/src/point.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.x = x;
exports.y = y;

function x(p) {
  return p[0];
}

function y(p) {
  return p[1];
}
},{}],"../../node_modules/d3-shape/src/line.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Path = require("d3-path");

var _constant = _interopRequireDefault(require("./constant.js"));

var _linear = _interopRequireDefault(require("./curve/linear.js"));

var _point = require("./point.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var x = _point.x,
      y = _point.y,
      defined = (0, _constant.default)(true),
      context = null,
      curve = _linear.default,
      output = null;

  function line(data) {
    var i,
        n = data.length,
        d,
        defined0 = false,
        buffer;
    if (context == null) output = curve(buffer = (0, _d3Path.path)());

    for (i = 0; i <= n; ++i) {
      if (!(i < n && defined(d = data[i], i, data)) === defined0) {
        if (defined0 = !defined0) output.lineStart();else output.lineEnd();
      }

      if (defined0) output.point(+x(d, i, data), +y(d, i, data));
    }

    if (buffer) return output = null, buffer + "" || null;
  }

  line.x = function (_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : (0, _constant.default)(+_), line) : x;
  };

  line.y = function (_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : (0, _constant.default)(+_), line) : y;
  };

  line.defined = function (_) {
    return arguments.length ? (defined = typeof _ === "function" ? _ : (0, _constant.default)(!!_), line) : defined;
  };

  line.curve = function (_) {
    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;
  };

  line.context = function (_) {
    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;
  };

  return line;
}
},{"d3-path":"../../node_modules/d3-path/src/index.js","./constant.js":"../../node_modules/d3-shape/src/constant.js","./curve/linear.js":"../../node_modules/d3-shape/src/curve/linear.js","./point.js":"../../node_modules/d3-shape/src/point.js"}],"../../node_modules/d3-shape/src/area.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Path = require("d3-path");

var _constant = _interopRequireDefault(require("./constant.js"));

var _linear = _interopRequireDefault(require("./curve/linear.js"));

var _line = _interopRequireDefault(require("./line.js"));

var _point = require("./point.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var x0 = _point.x,
      x1 = null,
      y0 = (0, _constant.default)(0),
      y1 = _point.y,
      defined = (0, _constant.default)(true),
      context = null,
      curve = _linear.default,
      output = null;

  function area(data) {
    var i,
        j,
        k,
        n = data.length,
        d,
        defined0 = false,
        buffer,
        x0z = new Array(n),
        y0z = new Array(n);
    if (context == null) output = curve(buffer = (0, _d3Path.path)());

    for (i = 0; i <= n; ++i) {
      if (!(i < n && defined(d = data[i], i, data)) === defined0) {
        if (defined0 = !defined0) {
          j = i;
          output.areaStart();
          output.lineStart();
        } else {
          output.lineEnd();
          output.lineStart();

          for (k = i - 1; k >= j; --k) {
            output.point(x0z[k], y0z[k]);
          }

          output.lineEnd();
          output.areaEnd();
        }
      }

      if (defined0) {
        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);
        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);
      }
    }

    if (buffer) return output = null, buffer + "" || null;
  }

  function arealine() {
    return (0, _line.default)().defined(defined).curve(curve).context(context);
  }

  area.x = function (_) {
    return arguments.length ? (x0 = typeof _ === "function" ? _ : (0, _constant.default)(+_), x1 = null, area) : x0;
  };

  area.x0 = function (_) {
    return arguments.length ? (x0 = typeof _ === "function" ? _ : (0, _constant.default)(+_), area) : x0;
  };

  area.x1 = function (_) {
    return arguments.length ? (x1 = _ == null ? null : typeof _ === "function" ? _ : (0, _constant.default)(+_), area) : x1;
  };

  area.y = function (_) {
    return arguments.length ? (y0 = typeof _ === "function" ? _ : (0, _constant.default)(+_), y1 = null, area) : y0;
  };

  area.y0 = function (_) {
    return arguments.length ? (y0 = typeof _ === "function" ? _ : (0, _constant.default)(+_), area) : y0;
  };

  area.y1 = function (_) {
    return arguments.length ? (y1 = _ == null ? null : typeof _ === "function" ? _ : (0, _constant.default)(+_), area) : y1;
  };

  area.lineX0 = area.lineY0 = function () {
    return arealine().x(x0).y(y0);
  };

  area.lineY1 = function () {
    return arealine().x(x0).y(y1);
  };

  area.lineX1 = function () {
    return arealine().x(x1).y(y0);
  };

  area.defined = function (_) {
    return arguments.length ? (defined = typeof _ === "function" ? _ : (0, _constant.default)(!!_), area) : defined;
  };

  area.curve = function (_) {
    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;
  };

  area.context = function (_) {
    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;
  };

  return area;
}
},{"d3-path":"../../node_modules/d3-path/src/index.js","./constant.js":"../../node_modules/d3-shape/src/constant.js","./curve/linear.js":"../../node_modules/d3-shape/src/curve/linear.js","./line.js":"../../node_modules/d3-shape/src/line.js","./point.js":"../../node_modules/d3-shape/src/point.js"}],"../../node_modules/d3-shape/src/descending.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(a, b) {
  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
}
},{}],"../../node_modules/d3-shape/src/identity.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(d) {
  return d;
}
},{}],"../../node_modules/d3-shape/src/pie.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant.js"));

var _descending = _interopRequireDefault(require("./descending.js"));

var _identity = _interopRequireDefault(require("./identity.js"));

var _math = require("./math.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var value = _identity.default,
      sortValues = _descending.default,
      sort = null,
      startAngle = (0, _constant.default)(0),
      endAngle = (0, _constant.default)(_math.tau),
      padAngle = (0, _constant.default)(0);

  function pie(data) {
    var i,
        n = data.length,
        j,
        k,
        sum = 0,
        index = new Array(n),
        arcs = new Array(n),
        a0 = +startAngle.apply(this, arguments),
        da = Math.min(_math.tau, Math.max(-_math.tau, endAngle.apply(this, arguments) - a0)),
        a1,
        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),
        pa = p * (da < 0 ? -1 : 1),
        v;

    for (i = 0; i < n; ++i) {
      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {
        sum += v;
      }
    } // Optionally sort the arcs by previously-computed values or by data.


    if (sortValues != null) index.sort(function (i, j) {
      return sortValues(arcs[i], arcs[j]);
    });else if (sort != null) index.sort(function (i, j) {
      return sort(data[i], data[j]);
    }); // Compute the arcs! They are stored in the original data's order.

    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {
      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {
        data: data[j],
        index: i,
        value: v,
        startAngle: a0,
        endAngle: a1,
        padAngle: p
      };
    }

    return arcs;
  }

  pie.value = function (_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : (0, _constant.default)(+_), pie) : value;
  };

  pie.sortValues = function (_) {
    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;
  };

  pie.sort = function (_) {
    return arguments.length ? (sort = _, sortValues = null, pie) : sort;
  };

  pie.startAngle = function (_) {
    return arguments.length ? (startAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), pie) : startAngle;
  };

  pie.endAngle = function (_) {
    return arguments.length ? (endAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), pie) : endAngle;
  };

  pie.padAngle = function (_) {
    return arguments.length ? (padAngle = typeof _ === "function" ? _ : (0, _constant.default)(+_), pie) : padAngle;
  };

  return pie;
}
},{"./constant.js":"../../node_modules/d3-shape/src/constant.js","./descending.js":"../../node_modules/d3-shape/src/descending.js","./identity.js":"../../node_modules/d3-shape/src/identity.js","./math.js":"../../node_modules/d3-shape/src/math.js"}],"../../node_modules/d3-shape/src/curve/radial.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = curveRadial;
exports.curveRadialLinear = void 0;

var _linear = _interopRequireDefault(require("./linear.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var curveRadialLinear = curveRadial(_linear.default);
exports.curveRadialLinear = curveRadialLinear;

function Radial(curve) {
  this._curve = curve;
}

Radial.prototype = {
  areaStart: function () {
    this._curve.areaStart();
  },
  areaEnd: function () {
    this._curve.areaEnd();
  },
  lineStart: function () {
    this._curve.lineStart();
  },
  lineEnd: function () {
    this._curve.lineEnd();
  },
  point: function (a, r) {
    this._curve.point(r * Math.sin(a), r * -Math.cos(a));
  }
};

function curveRadial(curve) {
  function radial(context) {
    return new Radial(curve(context));
  }

  radial._curve = curve;
  return radial;
}
},{"./linear.js":"../../node_modules/d3-shape/src/curve/linear.js"}],"../../node_modules/d3-shape/src/lineRadial.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.lineRadial = lineRadial;
exports.default = _default;

var _radial = _interopRequireWildcard(require("./curve/radial.js"));

var _line = _interopRequireDefault(require("./line.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function lineRadial(l) {
  var c = l.curve;
  l.angle = l.x, delete l.x;
  l.radius = l.y, delete l.y;

  l.curve = function (_) {
    return arguments.length ? c((0, _radial.default)(_)) : c()._curve;
  };

  return l;
}

function _default() {
  return lineRadial((0, _line.default)().curve(_radial.curveRadialLinear));
}
},{"./curve/radial.js":"../../node_modules/d3-shape/src/curve/radial.js","./line.js":"../../node_modules/d3-shape/src/line.js"}],"../../node_modules/d3-shape/src/areaRadial.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _radial = _interopRequireWildcard(require("./curve/radial.js"));

var _area = _interopRequireDefault(require("./area.js"));

var _lineRadial = require("./lineRadial.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _default() {
  var a = (0, _area.default)().curve(_radial.curveRadialLinear),
      c = a.curve,
      x0 = a.lineX0,
      x1 = a.lineX1,
      y0 = a.lineY0,
      y1 = a.lineY1;
  a.angle = a.x, delete a.x;
  a.startAngle = a.x0, delete a.x0;
  a.endAngle = a.x1, delete a.x1;
  a.radius = a.y, delete a.y;
  a.innerRadius = a.y0, delete a.y0;
  a.outerRadius = a.y1, delete a.y1;
  a.lineStartAngle = function () {
    return (0, _lineRadial.lineRadial)(x0());
  }, delete a.lineX0;
  a.lineEndAngle = function () {
    return (0, _lineRadial.lineRadial)(x1());
  }, delete a.lineX1;
  a.lineInnerRadius = function () {
    return (0, _lineRadial.lineRadial)(y0());
  }, delete a.lineY0;
  a.lineOuterRadius = function () {
    return (0, _lineRadial.lineRadial)(y1());
  }, delete a.lineY1;

  a.curve = function (_) {
    return arguments.length ? c((0, _radial.default)(_)) : c()._curve;
  };

  return a;
}
},{"./curve/radial.js":"../../node_modules/d3-shape/src/curve/radial.js","./area.js":"../../node_modules/d3-shape/src/area.js","./lineRadial.js":"../../node_modules/d3-shape/src/lineRadial.js"}],"../../node_modules/d3-shape/src/pointRadial.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x, y) {
  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];
}
},{}],"../../node_modules/d3-shape/src/array.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.slice = void 0;
var slice = Array.prototype.slice;
exports.slice = slice;
},{}],"../../node_modules/d3-shape/src/link/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.linkHorizontal = linkHorizontal;
exports.linkVertical = linkVertical;
exports.linkRadial = linkRadial;

var _d3Path = require("d3-path");

var _array = require("../array.js");

var _constant = _interopRequireDefault(require("../constant.js"));

var _point = require("../point.js");

var _pointRadial = _interopRequireDefault(require("../pointRadial.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function linkSource(d) {
  return d.source;
}

function linkTarget(d) {
  return d.target;
}

function link(curve) {
  var source = linkSource,
      target = linkTarget,
      x = _point.x,
      y = _point.y,
      context = null;

  function link() {
    var buffer,
        argv = _array.slice.call(arguments),
        s = source.apply(this, argv),
        t = target.apply(this, argv);

    if (!context) context = buffer = (0, _d3Path.path)();
    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));
    if (buffer) return context = null, buffer + "" || null;
  }

  link.source = function (_) {
    return arguments.length ? (source = _, link) : source;
  };

  link.target = function (_) {
    return arguments.length ? (target = _, link) : target;
  };

  link.x = function (_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : (0, _constant.default)(+_), link) : x;
  };

  link.y = function (_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : (0, _constant.default)(+_), link) : y;
  };

  link.context = function (_) {
    return arguments.length ? (context = _ == null ? null : _, link) : context;
  };

  return link;
}

function curveHorizontal(context, x0, y0, x1, y1) {
  context.moveTo(x0, y0);
  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);
}

function curveVertical(context, x0, y0, x1, y1) {
  context.moveTo(x0, y0);
  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);
}

function curveRadial(context, x0, y0, x1, y1) {
  var p0 = (0, _pointRadial.default)(x0, y0),
      p1 = (0, _pointRadial.default)(x0, y0 = (y0 + y1) / 2),
      p2 = (0, _pointRadial.default)(x1, y0),
      p3 = (0, _pointRadial.default)(x1, y1);
  context.moveTo(p0[0], p0[1]);
  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);
}

function linkHorizontal() {
  return link(curveHorizontal);
}

function linkVertical() {
  return link(curveVertical);
}

function linkRadial() {
  var l = link(curveRadial);
  l.angle = l.x, delete l.x;
  l.radius = l.y, delete l.y;
  return l;
}
},{"d3-path":"../../node_modules/d3-path/src/index.js","../array.js":"../../node_modules/d3-shape/src/array.js","../constant.js":"../../node_modules/d3-shape/src/constant.js","../point.js":"../../node_modules/d3-shape/src/point.js","../pointRadial.js":"../../node_modules/d3-shape/src/pointRadial.js"}],"../../node_modules/d3-shape/src/symbol/circle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _math = require("../math.js");

var _default = {
  draw: function (context, size) {
    var r = Math.sqrt(size / _math.pi);
    context.moveTo(r, 0);
    context.arc(0, 0, r, 0, _math.tau);
  }
};
exports.default = _default;
},{"../math.js":"../../node_modules/d3-shape/src/math.js"}],"../../node_modules/d3-shape/src/symbol/cross.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _default = {
  draw: function (context, size) {
    var r = Math.sqrt(size / 5) / 2;
    context.moveTo(-3 * r, -r);
    context.lineTo(-r, -r);
    context.lineTo(-r, -3 * r);
    context.lineTo(r, -3 * r);
    context.lineTo(r, -r);
    context.lineTo(3 * r, -r);
    context.lineTo(3 * r, r);
    context.lineTo(r, r);
    context.lineTo(r, 3 * r);
    context.lineTo(-r, 3 * r);
    context.lineTo(-r, r);
    context.lineTo(-3 * r, r);
    context.closePath();
  }
};
exports.default = _default;
},{}],"../../node_modules/d3-shape/src/symbol/diamond.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var tan30 = Math.sqrt(1 / 3),
    tan30_2 = tan30 * 2;
var _default = {
  draw: function (context, size) {
    var y = Math.sqrt(size / tan30_2),
        x = y * tan30;
    context.moveTo(0, -y);
    context.lineTo(x, 0);
    context.lineTo(0, y);
    context.lineTo(-x, 0);
    context.closePath();
  }
};
exports.default = _default;
},{}],"../../node_modules/d3-shape/src/symbol/star.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _math = require("../math.js");

var ka = 0.89081309152928522810,
    kr = Math.sin(_math.pi / 10) / Math.sin(7 * _math.pi / 10),
    kx = Math.sin(_math.tau / 10) * kr,
    ky = -Math.cos(_math.tau / 10) * kr;
var _default = {
  draw: function (context, size) {
    var r = Math.sqrt(size * ka),
        x = kx * r,
        y = ky * r;
    context.moveTo(0, -r);
    context.lineTo(x, y);

    for (var i = 1; i < 5; ++i) {
      var a = _math.tau * i / 5,
          c = Math.cos(a),
          s = Math.sin(a);
      context.lineTo(s * r, -c * r);
      context.lineTo(c * x - s * y, s * x + c * y);
    }

    context.closePath();
  }
};
exports.default = _default;
},{"../math.js":"../../node_modules/d3-shape/src/math.js"}],"../../node_modules/d3-shape/src/symbol/square.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _default = {
  draw: function (context, size) {
    var w = Math.sqrt(size),
        x = -w / 2;
    context.rect(x, x, w, w);
  }
};
exports.default = _default;
},{}],"../../node_modules/d3-shape/src/symbol/triangle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var sqrt3 = Math.sqrt(3);
var _default = {
  draw: function (context, size) {
    var y = -Math.sqrt(size / (sqrt3 * 3));
    context.moveTo(0, y * 2);
    context.lineTo(-sqrt3 * y, -y);
    context.lineTo(sqrt3 * y, -y);
    context.closePath();
  }
};
exports.default = _default;
},{}],"../../node_modules/d3-shape/src/symbol/wye.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var c = -0.5,
    s = Math.sqrt(3) / 2,
    k = 1 / Math.sqrt(12),
    a = (k / 2 + 1) * 3;
var _default = {
  draw: function (context, size) {
    var r = Math.sqrt(size / a),
        x0 = r / 2,
        y0 = r * k,
        x1 = x0,
        y1 = r * k + r,
        x2 = -x1,
        y2 = y1;
    context.moveTo(x0, y0);
    context.lineTo(x1, y1);
    context.lineTo(x2, y2);
    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);
    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);
    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);
    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);
    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);
    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);
    context.closePath();
  }
};
exports.default = _default;
},{}],"../../node_modules/d3-shape/src/symbol.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.symbols = void 0;

var _d3Path = require("d3-path");

var _circle = _interopRequireDefault(require("./symbol/circle.js"));

var _cross = _interopRequireDefault(require("./symbol/cross.js"));

var _diamond = _interopRequireDefault(require("./symbol/diamond.js"));

var _star = _interopRequireDefault(require("./symbol/star.js"));

var _square = _interopRequireDefault(require("./symbol/square.js"));

var _triangle = _interopRequireDefault(require("./symbol/triangle.js"));

var _wye = _interopRequireDefault(require("./symbol/wye.js"));

var _constant = _interopRequireDefault(require("./constant.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var symbols = [_circle.default, _cross.default, _diamond.default, _square.default, _star.default, _triangle.default, _wye.default];
exports.symbols = symbols;

function _default() {
  var type = (0, _constant.default)(_circle.default),
      size = (0, _constant.default)(64),
      context = null;

  function symbol() {
    var buffer;
    if (!context) context = buffer = (0, _d3Path.path)();
    type.apply(this, arguments).draw(context, +size.apply(this, arguments));
    if (buffer) return context = null, buffer + "" || null;
  }

  symbol.type = function (_) {
    return arguments.length ? (type = typeof _ === "function" ? _ : (0, _constant.default)(_), symbol) : type;
  };

  symbol.size = function (_) {
    return arguments.length ? (size = typeof _ === "function" ? _ : (0, _constant.default)(+_), symbol) : size;
  };

  symbol.context = function (_) {
    return arguments.length ? (context = _ == null ? null : _, symbol) : context;
  };

  return symbol;
}
},{"d3-path":"../../node_modules/d3-path/src/index.js","./symbol/circle.js":"../../node_modules/d3-shape/src/symbol/circle.js","./symbol/cross.js":"../../node_modules/d3-shape/src/symbol/cross.js","./symbol/diamond.js":"../../node_modules/d3-shape/src/symbol/diamond.js","./symbol/star.js":"../../node_modules/d3-shape/src/symbol/star.js","./symbol/square.js":"../../node_modules/d3-shape/src/symbol/square.js","./symbol/triangle.js":"../../node_modules/d3-shape/src/symbol/triangle.js","./symbol/wye.js":"../../node_modules/d3-shape/src/symbol/wye.js","./constant.js":"../../node_modules/d3-shape/src/constant.js"}],"../../node_modules/d3-shape/src/noop.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default() {}
},{}],"../../node_modules/d3-shape/src/curve/basis.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.point = point;
exports.Basis = Basis;
exports.default = _default;

function point(that, x, y) {
  that._context.bezierCurveTo((2 * that._x0 + that._x1) / 3, (2 * that._y0 + that._y1) / 3, (that._x0 + 2 * that._x1) / 3, (that._y0 + 2 * that._y1) / 3, (that._x0 + 4 * that._x1 + x) / 6, (that._y0 + 4 * that._y1 + y) / 6);
}

function Basis(context) {
  this._context = context;
}

Basis.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 3:
        point(this, this._x1, this._y1);
      // proceed

      case 2:
        this._context.lineTo(this._x1, this._y1);

        break;
    }

    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;

        this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6);

      // proceed

      default:
        point(this, x, y);
        break;
    }

    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
  }
};

function _default(context) {
  return new Basis(context);
}
},{}],"../../node_modules/d3-shape/src/curve/basisClosed.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _noop = _interopRequireDefault(require("../noop.js"));

var _basis = require("./basis.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function BasisClosed(context) {
  this._context = context;
}

BasisClosed.prototype = {
  areaStart: _noop.default,
  areaEnd: _noop.default,
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 1:
        {
          this._context.moveTo(this._x2, this._y2);

          this._context.closePath();

          break;
        }

      case 2:
        {
          this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);

          this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);

          this._context.closePath();

          break;
        }

      case 3:
        {
          this.point(this._x2, this._y2);
          this.point(this._x3, this._y3);
          this.point(this._x4, this._y4);
          break;
        }
    }
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._x2 = x, this._y2 = y;
        break;

      case 1:
        this._point = 2;
        this._x3 = x, this._y3 = y;
        break;

      case 2:
        this._point = 3;
        this._x4 = x, this._y4 = y;

        this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6);

        break;

      default:
        (0, _basis.point)(this, x, y);
        break;
    }

    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
  }
};

function _default(context) {
  return new BasisClosed(context);
}
},{"../noop.js":"../../node_modules/d3-shape/src/noop.js","./basis.js":"../../node_modules/d3-shape/src/curve/basis.js"}],"../../node_modules/d3-shape/src/curve/basisOpen.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _basis = require("./basis.js");

function BasisOpen(context) {
  this._context = context;
}

BasisOpen.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._y0 = this._y1 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;
        var x0 = (this._x0 + 4 * this._x1 + x) / 6,
            y0 = (this._y0 + 4 * this._y1 + y) / 6;
        this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0);
        break;

      case 3:
        this._point = 4;
      // proceed

      default:
        (0, _basis.point)(this, x, y);
        break;
    }

    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
  }
};

function _default(context) {
  return new BasisOpen(context);
}
},{"./basis.js":"../../node_modules/d3-shape/src/curve/basis.js"}],"../../node_modules/d3-shape/src/curve/bundle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _basis = require("./basis.js");

function Bundle(context, beta) {
  this._basis = new _basis.Basis(context);
  this._beta = beta;
}

Bundle.prototype = {
  lineStart: function () {
    this._x = [];
    this._y = [];

    this._basis.lineStart();
  },
  lineEnd: function () {
    var x = this._x,
        y = this._y,
        j = x.length - 1;

    if (j > 0) {
      var x0 = x[0],
          y0 = y[0],
          dx = x[j] - x0,
          dy = y[j] - y0,
          i = -1,
          t;

      while (++i <= j) {
        t = i / j;

        this._basis.point(this._beta * x[i] + (1 - this._beta) * (x0 + t * dx), this._beta * y[i] + (1 - this._beta) * (y0 + t * dy));
      }
    }

    this._x = this._y = null;

    this._basis.lineEnd();
  },
  point: function (x, y) {
    this._x.push(+x);

    this._y.push(+y);
  }
};

var _default = function custom(beta) {
  function bundle(context) {
    return beta === 1 ? new _basis.Basis(context) : new Bundle(context, beta);
  }

  bundle.beta = function (beta) {
    return custom(+beta);
  };

  return bundle;
}(0.85);

exports.default = _default;
},{"./basis.js":"../../node_modules/d3-shape/src/curve/basis.js"}],"../../node_modules/d3-shape/src/curve/cardinal.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.point = point;
exports.Cardinal = Cardinal;
exports.default = void 0;

function point(that, x, y) {
  that._context.bezierCurveTo(that._x1 + that._k * (that._x2 - that._x0), that._y1 + that._k * (that._y2 - that._y0), that._x2 + that._k * (that._x1 - x), that._y2 + that._k * (that._y1 - y), that._x2, that._y2);
}

function Cardinal(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}

Cardinal.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x2, this._y2);

        break;

      case 3:
        point(this, this._x1, this._y1);
        break;
    }

    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
        this._x1 = x, this._y1 = y;
        break;

      case 2:
        this._point = 3;
      // proceed

      default:
        point(this, x, y);
        break;
    }

    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var _default = function custom(tension) {
  function cardinal(context) {
    return new Cardinal(context, tension);
  }

  cardinal.tension = function (tension) {
    return custom(+tension);
  };

  return cardinal;
}(0);

exports.default = _default;
},{}],"../../node_modules/d3-shape/src/curve/cardinalClosed.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CardinalClosed = CardinalClosed;
exports.default = void 0;

var _noop = _interopRequireDefault(require("../noop.js"));

var _cardinal = require("./cardinal.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function CardinalClosed(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}

CardinalClosed.prototype = {
  areaStart: _noop.default,
  areaEnd: _noop.default,
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 1:
        {
          this._context.moveTo(this._x3, this._y3);

          this._context.closePath();

          break;
        }

      case 2:
        {
          this._context.lineTo(this._x3, this._y3);

          this._context.closePath();

          break;
        }

      case 3:
        {
          this.point(this._x3, this._y3);
          this.point(this._x4, this._y4);
          this.point(this._x5, this._y5);
          break;
        }
    }
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._x3 = x, this._y3 = y;
        break;

      case 1:
        this._point = 2;

        this._context.moveTo(this._x4 = x, this._y4 = y);

        break;

      case 2:
        this._point = 3;
        this._x5 = x, this._y5 = y;
        break;

      default:
        (0, _cardinal.point)(this, x, y);
        break;
    }

    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var _default = function custom(tension) {
  function cardinal(context) {
    return new CardinalClosed(context, tension);
  }

  cardinal.tension = function (tension) {
    return custom(+tension);
  };

  return cardinal;
}(0);

exports.default = _default;
},{"../noop.js":"../../node_modules/d3-shape/src/noop.js","./cardinal.js":"../../node_modules/d3-shape/src/curve/cardinal.js"}],"../../node_modules/d3-shape/src/curve/cardinalOpen.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CardinalOpen = CardinalOpen;
exports.default = void 0;

var _cardinal = require("./cardinal.js");

function CardinalOpen(context, tension) {
  this._context = context;
  this._k = (1 - tension) / 6;
}

CardinalOpen.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;
        this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
        break;

      case 3:
        this._point = 4;
      // proceed

      default:
        (0, _cardinal.point)(this, x, y);
        break;
    }

    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var _default = function custom(tension) {
  function cardinal(context) {
    return new CardinalOpen(context, tension);
  }

  cardinal.tension = function (tension) {
    return custom(+tension);
  };

  return cardinal;
}(0);

exports.default = _default;
},{"./cardinal.js":"../../node_modules/d3-shape/src/curve/cardinal.js"}],"../../node_modules/d3-shape/src/curve/catmullRom.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.point = point;
exports.default = void 0;

var _math = require("../math.js");

var _cardinal = require("./cardinal.js");

function point(that, x, y) {
  var x1 = that._x1,
      y1 = that._y1,
      x2 = that._x2,
      y2 = that._y2;

  if (that._l01_a > _math.epsilon) {
    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,
        n = 3 * that._l01_a * (that._l01_a + that._l12_a);
    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;
    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;
  }

  if (that._l23_a > _math.epsilon) {
    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,
        m = 3 * that._l23_a * (that._l23_a + that._l12_a);
    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;
    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;
  }

  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);
}

function CatmullRom(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}

CatmullRom.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x2, this._y2);

        break;

      case 3:
        this.point(this._x2, this._y2);
        break;
    }

    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    if (this._point) {
      var x23 = this._x2 - x,
          y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;
      // proceed

      default:
        point(this, x, y);
        break;
    }

    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var _default = function custom(alpha) {
  function catmullRom(context) {
    return alpha ? new CatmullRom(context, alpha) : new _cardinal.Cardinal(context, 0);
  }

  catmullRom.alpha = function (alpha) {
    return custom(+alpha);
  };

  return catmullRom;
}(0.5);

exports.default = _default;
},{"../math.js":"../../node_modules/d3-shape/src/math.js","./cardinal.js":"../../node_modules/d3-shape/src/curve/cardinal.js"}],"../../node_modules/d3-shape/src/curve/catmullRomClosed.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _cardinalClosed = require("./cardinalClosed.js");

var _noop = _interopRequireDefault(require("../noop.js"));

var _catmullRom = require("./catmullRom.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function CatmullRomClosed(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}

CatmullRomClosed.prototype = {
  areaStart: _noop.default,
  areaEnd: _noop.default,
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 = this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 1:
        {
          this._context.moveTo(this._x3, this._y3);

          this._context.closePath();

          break;
        }

      case 2:
        {
          this._context.lineTo(this._x3, this._y3);

          this._context.closePath();

          break;
        }

      case 3:
        {
          this.point(this._x3, this._y3);
          this.point(this._x4, this._y4);
          this.point(this._x5, this._y5);
          break;
        }
    }
  },
  point: function (x, y) {
    x = +x, y = +y;

    if (this._point) {
      var x23 = this._x2 - x,
          y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }

    switch (this._point) {
      case 0:
        this._point = 1;
        this._x3 = x, this._y3 = y;
        break;

      case 1:
        this._point = 2;

        this._context.moveTo(this._x4 = x, this._y4 = y);

        break;

      case 2:
        this._point = 3;
        this._x5 = x, this._y5 = y;
        break;

      default:
        (0, _catmullRom.point)(this, x, y);
        break;
    }

    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var _default = function custom(alpha) {
  function catmullRom(context) {
    return alpha ? new CatmullRomClosed(context, alpha) : new _cardinalClosed.CardinalClosed(context, 0);
  }

  catmullRom.alpha = function (alpha) {
    return custom(+alpha);
  };

  return catmullRom;
}(0.5);

exports.default = _default;
},{"./cardinalClosed.js":"../../node_modules/d3-shape/src/curve/cardinalClosed.js","../noop.js":"../../node_modules/d3-shape/src/noop.js","./catmullRom.js":"../../node_modules/d3-shape/src/curve/catmullRom.js"}],"../../node_modules/d3-shape/src/curve/catmullRomOpen.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _cardinalOpen = require("./cardinalOpen.js");

var _catmullRom = require("./catmullRom.js");

function CatmullRomOpen(context, alpha) {
  this._context = context;
  this._alpha = alpha;
}

CatmullRomOpen.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._x2 = this._y0 = this._y1 = this._y2 = NaN;
    this._l01_a = this._l12_a = this._l23_a = this._l01_2a = this._l12_2a = this._l23_2a = this._point = 0;
  },
  lineEnd: function () {
    if (this._line || this._line !== 0 && this._point === 3) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    if (this._point) {
      var x23 = this._x2 - x,
          y23 = this._y2 - y;
      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));
    }

    switch (this._point) {
      case 0:
        this._point = 1;
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;
        this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2);
        break;

      case 3:
        this._point = 4;
      // proceed

      default:
        (0, _catmullRom.point)(this, x, y);
        break;
    }

    this._l01_a = this._l12_a, this._l12_a = this._l23_a;
    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;
    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;
    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;
  }
};

var _default = function custom(alpha) {
  function catmullRom(context) {
    return alpha ? new CatmullRomOpen(context, alpha) : new _cardinalOpen.CardinalOpen(context, 0);
  }

  catmullRom.alpha = function (alpha) {
    return custom(+alpha);
  };

  return catmullRom;
}(0.5);

exports.default = _default;
},{"./cardinalOpen.js":"../../node_modules/d3-shape/src/curve/cardinalOpen.js","./catmullRom.js":"../../node_modules/d3-shape/src/curve/catmullRom.js"}],"../../node_modules/d3-shape/src/curve/linearClosed.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _noop = _interopRequireDefault(require("../noop.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function LinearClosed(context) {
  this._context = context;
}

LinearClosed.prototype = {
  areaStart: _noop.default,
  areaEnd: _noop.default,
  lineStart: function () {
    this._point = 0;
  },
  lineEnd: function () {
    if (this._point) this._context.closePath();
  },
  point: function (x, y) {
    x = +x, y = +y;
    if (this._point) this._context.lineTo(x, y);else this._point = 1, this._context.moveTo(x, y);
  }
};

function _default(context) {
  return new LinearClosed(context);
}
},{"../noop.js":"../../node_modules/d3-shape/src/noop.js"}],"../../node_modules/d3-shape/src/curve/monotone.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.monotoneX = monotoneX;
exports.monotoneY = monotoneY;

function sign(x) {
  return x < 0 ? -1 : 1;
} // Calculate the slopes of the tangents (Hermite-type interpolation) based on
// the following paper: Steffen, M. 1990. A Simple Method for Monotonic
// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.
// NOV(II), P. 443, 1990.


function slope3(that, x2, y2) {
  var h0 = that._x1 - that._x0,
      h1 = x2 - that._x1,
      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),
      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),
      p = (s0 * h1 + s1 * h0) / (h0 + h1);
  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;
} // Calculate a one-sided slope.


function slope2(that, t) {
  var h = that._x1 - that._x0;
  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;
} // According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations
// "you can express cubic Hermite interpolation in terms of cubic Bézier curves
// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1".


function point(that, t0, t1) {
  var x0 = that._x0,
      y0 = that._y0,
      x1 = that._x1,
      y1 = that._y1,
      dx = (x1 - x0) / 3;

  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);
}

function MonotoneX(context) {
  this._context = context;
}

MonotoneX.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x0 = this._x1 = this._y0 = this._y1 = this._t0 = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    switch (this._point) {
      case 2:
        this._context.lineTo(this._x1, this._y1);

        break;

      case 3:
        point(this, this._t0, slope2(this, this._t0));
        break;
    }

    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    this._line = 1 - this._line;
  },
  point: function (x, y) {
    var t1 = NaN;
    x = +x, y = +y;
    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
        break;

      case 2:
        this._point = 3;
        point(this, slope2(this, t1 = slope3(this, x, y)), t1);
        break;

      default:
        point(this, this._t0, t1 = slope3(this, x, y));
        break;
    }

    this._x0 = this._x1, this._x1 = x;
    this._y0 = this._y1, this._y1 = y;
    this._t0 = t1;
  }
};

function MonotoneY(context) {
  this._context = new ReflectContext(context);
}

(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function (x, y) {
  MonotoneX.prototype.point.call(this, y, x);
};

function ReflectContext(context) {
  this._context = context;
}

ReflectContext.prototype = {
  moveTo: function (x, y) {
    this._context.moveTo(y, x);
  },
  closePath: function () {
    this._context.closePath();
  },
  lineTo: function (x, y) {
    this._context.lineTo(y, x);
  },
  bezierCurveTo: function (x1, y1, x2, y2, x, y) {
    this._context.bezierCurveTo(y1, x1, y2, x2, y, x);
  }
};

function monotoneX(context) {
  return new MonotoneX(context);
}

function monotoneY(context) {
  return new MonotoneY(context);
}
},{}],"../../node_modules/d3-shape/src/curve/natural.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function Natural(context) {
  this._context = context;
}

Natural.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x = [];
    this._y = [];
  },
  lineEnd: function () {
    var x = this._x,
        y = this._y,
        n = x.length;

    if (n) {
      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);

      if (n === 2) {
        this._context.lineTo(x[1], y[1]);
      } else {
        var px = controlPoints(x),
            py = controlPoints(y);

        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {
          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);
        }
      }
    }

    if (this._line || this._line !== 0 && n === 1) this._context.closePath();
    this._line = 1 - this._line;
    this._x = this._y = null;
  },
  point: function (x, y) {
    this._x.push(+x);

    this._y.push(+y);
  }
}; // See https://www.particleincell.com/2012/bezier-splines/ for derivation.

function controlPoints(x) {
  var i,
      n = x.length - 1,
      m,
      a = new Array(n),
      b = new Array(n),
      r = new Array(n);
  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];

  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];

  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];

  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];

  a[n - 1] = r[n - 1] / b[n - 1];

  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];

  b[n - 1] = (x[n] + a[n - 1]) / 2;

  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];

  return [a, b];
}

function _default(context) {
  return new Natural(context);
}
},{}],"../../node_modules/d3-shape/src/curve/step.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.stepBefore = stepBefore;
exports.stepAfter = stepAfter;

function Step(context, t) {
  this._context = context;
  this._t = t;
}

Step.prototype = {
  areaStart: function () {
    this._line = 0;
  },
  areaEnd: function () {
    this._line = NaN;
  },
  lineStart: function () {
    this._x = this._y = NaN;
    this._point = 0;
  },
  lineEnd: function () {
    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);
    if (this._line || this._line !== 0 && this._point === 1) this._context.closePath();
    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;
  },
  point: function (x, y) {
    x = +x, y = +y;

    switch (this._point) {
      case 0:
        this._point = 1;
        this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y);
        break;

      case 1:
        this._point = 2;
      // proceed

      default:
        {
          if (this._t <= 0) {
            this._context.lineTo(this._x, y);

            this._context.lineTo(x, y);
          } else {
            var x1 = this._x * (1 - this._t) + x * this._t;

            this._context.lineTo(x1, this._y);

            this._context.lineTo(x1, y);
          }

          break;
        }
    }

    this._x = x, this._y = y;
  }
};

function _default(context) {
  return new Step(context, 0.5);
}

function stepBefore(context) {
  return new Step(context, 0);
}

function stepAfter(context) {
  return new Step(context, 1);
}
},{}],"../../node_modules/d3-shape/src/offset/none.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(series, order) {
  if (!((n = series.length) > 1)) return;

  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {
    s0 = s1, s1 = series[order[i]];

    for (j = 0; j < m; ++j) {
      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];
    }
  }
}
},{}],"../../node_modules/d3-shape/src/order/none.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(series) {
  var n = series.length,
      o = new Array(n);

  while (--n >= 0) o[n] = n;

  return o;
}
},{}],"../../node_modules/d3-shape/src/stack.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _array = require("./array.js");

var _constant = _interopRequireDefault(require("./constant.js"));

var _none = _interopRequireDefault(require("./offset/none.js"));

var _none2 = _interopRequireDefault(require("./order/none.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function stackValue(d, key) {
  return d[key];
}

function _default() {
  var keys = (0, _constant.default)([]),
      order = _none2.default,
      offset = _none.default,
      value = stackValue;

  function stack(data) {
    var kz = keys.apply(this, arguments),
        i,
        m = data.length,
        n = kz.length,
        sz = new Array(n),
        oz;

    for (i = 0; i < n; ++i) {
      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {
        si[j] = sij = [0, +value(data[j], ki, j, data)];
        sij.data = data[j];
      }

      si.key = ki;
    }

    for (i = 0, oz = order(sz); i < n; ++i) {
      sz[oz[i]].index = i;
    }

    offset(sz, oz);
    return sz;
  }

  stack.keys = function (_) {
    return arguments.length ? (keys = typeof _ === "function" ? _ : (0, _constant.default)(_array.slice.call(_)), stack) : keys;
  };

  stack.value = function (_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : (0, _constant.default)(+_), stack) : value;
  };

  stack.order = function (_) {
    return arguments.length ? (order = _ == null ? _none2.default : typeof _ === "function" ? _ : (0, _constant.default)(_array.slice.call(_)), stack) : order;
  };

  stack.offset = function (_) {
    return arguments.length ? (offset = _ == null ? _none.default : _, stack) : offset;
  };

  return stack;
}
},{"./array.js":"../../node_modules/d3-shape/src/array.js","./constant.js":"../../node_modules/d3-shape/src/constant.js","./offset/none.js":"../../node_modules/d3-shape/src/offset/none.js","./order/none.js":"../../node_modules/d3-shape/src/order/none.js"}],"../../node_modules/d3-shape/src/offset/expand.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _none = _interopRequireDefault(require("./none.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series, order) {
  if (!((n = series.length) > 0)) return;

  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {
    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;

    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;
  }

  (0, _none.default)(series, order);
}
},{"./none.js":"../../node_modules/d3-shape/src/offset/none.js"}],"../../node_modules/d3-shape/src/offset/diverging.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(series, order) {
  if (!((n = series.length) > 0)) return;

  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {
    for (yp = yn = 0, i = 0; i < n; ++i) {
      if ((dy = (d = series[order[i]][j])[1] - d[0]) > 0) {
        d[0] = yp, d[1] = yp += dy;
      } else if (dy < 0) {
        d[1] = yn, d[0] = yn += dy;
      } else {
        d[0] = 0, d[1] = dy;
      }
    }
  }
}
},{}],"../../node_modules/d3-shape/src/offset/silhouette.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _none = _interopRequireDefault(require("./none.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series, order) {
  if (!((n = series.length) > 0)) return;

  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {
    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;

    s0[j][1] += s0[j][0] = -y / 2;
  }

  (0, _none.default)(series, order);
}
},{"./none.js":"../../node_modules/d3-shape/src/offset/none.js"}],"../../node_modules/d3-shape/src/offset/wiggle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _none = _interopRequireDefault(require("./none.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series, order) {
  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;

  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {
    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {
      var si = series[order[i]],
          sij0 = si[j][1] || 0,
          sij1 = si[j - 1][1] || 0,
          s3 = (sij0 - sij1) / 2;

      for (var k = 0; k < i; ++k) {
        var sk = series[order[k]],
            skj0 = sk[j][1] || 0,
            skj1 = sk[j - 1][1] || 0;
        s3 += skj0 - skj1;
      }

      s1 += sij0, s2 += s3 * sij0;
    }

    s0[j - 1][1] += s0[j - 1][0] = y;
    if (s1) y -= s2 / s1;
  }

  s0[j - 1][1] += s0[j - 1][0] = y;
  (0, _none.default)(series, order);
}
},{"./none.js":"../../node_modules/d3-shape/src/offset/none.js"}],"../../node_modules/d3-shape/src/order/appearance.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _none = _interopRequireDefault(require("./none.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series) {
  var peaks = series.map(peak);
  return (0, _none.default)(series).sort(function (a, b) {
    return peaks[a] - peaks[b];
  });
}

function peak(series) {
  var i = -1,
      j = 0,
      n = series.length,
      vi,
      vj = -Infinity;

  while (++i < n) if ((vi = +series[i][1]) > vj) vj = vi, j = i;

  return j;
}
},{"./none.js":"../../node_modules/d3-shape/src/order/none.js"}],"../../node_modules/d3-shape/src/order/ascending.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;
exports.sum = sum;

var _none = _interopRequireDefault(require("./none.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series) {
  var sums = series.map(sum);
  return (0, _none.default)(series).sort(function (a, b) {
    return sums[a] - sums[b];
  });
}

function sum(series) {
  var s = 0,
      i = -1,
      n = series.length,
      v;

  while (++i < n) if (v = +series[i][1]) s += v;

  return s;
}
},{"./none.js":"../../node_modules/d3-shape/src/order/none.js"}],"../../node_modules/d3-shape/src/order/descending.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _ascending = _interopRequireDefault(require("./ascending.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series) {
  return (0, _ascending.default)(series).reverse();
}
},{"./ascending.js":"../../node_modules/d3-shape/src/order/ascending.js"}],"../../node_modules/d3-shape/src/order/insideOut.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _appearance = _interopRequireDefault(require("./appearance.js"));

var _ascending = require("./ascending.js");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series) {
  var n = series.length,
      i,
      j,
      sums = series.map(_ascending.sum),
      order = (0, _appearance.default)(series),
      top = 0,
      bottom = 0,
      tops = [],
      bottoms = [];

  for (i = 0; i < n; ++i) {
    j = order[i];

    if (top < bottom) {
      top += sums[j];
      tops.push(j);
    } else {
      bottom += sums[j];
      bottoms.push(j);
    }
  }

  return bottoms.reverse().concat(tops);
}
},{"./appearance.js":"../../node_modules/d3-shape/src/order/appearance.js","./ascending.js":"../../node_modules/d3-shape/src/order/ascending.js"}],"../../node_modules/d3-shape/src/order/reverse.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _none = _interopRequireDefault(require("./none.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default(series) {
  return (0, _none.default)(series).reverse();
}
},{"./none.js":"../../node_modules/d3-shape/src/order/none.js"}],"../../node_modules/d3-shape/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "arc", {
  enumerable: true,
  get: function () {
    return _arc.default;
  }
});
Object.defineProperty(exports, "area", {
  enumerable: true,
  get: function () {
    return _area.default;
  }
});
Object.defineProperty(exports, "line", {
  enumerable: true,
  get: function () {
    return _line.default;
  }
});
Object.defineProperty(exports, "pie", {
  enumerable: true,
  get: function () {
    return _pie.default;
  }
});
Object.defineProperty(exports, "areaRadial", {
  enumerable: true,
  get: function () {
    return _areaRadial.default;
  }
});
Object.defineProperty(exports, "radialArea", {
  enumerable: true,
  get: function () {
    return _areaRadial.default;
  }
});
Object.defineProperty(exports, "lineRadial", {
  enumerable: true,
  get: function () {
    return _lineRadial.default;
  }
});
Object.defineProperty(exports, "radialLine", {
  enumerable: true,
  get: function () {
    return _lineRadial.default;
  }
});
Object.defineProperty(exports, "pointRadial", {
  enumerable: true,
  get: function () {
    return _pointRadial.default;
  }
});
Object.defineProperty(exports, "linkHorizontal", {
  enumerable: true,
  get: function () {
    return _index.linkHorizontal;
  }
});
Object.defineProperty(exports, "linkVertical", {
  enumerable: true,
  get: function () {
    return _index.linkVertical;
  }
});
Object.defineProperty(exports, "linkRadial", {
  enumerable: true,
  get: function () {
    return _index.linkRadial;
  }
});
Object.defineProperty(exports, "symbol", {
  enumerable: true,
  get: function () {
    return _symbol.default;
  }
});
Object.defineProperty(exports, "symbols", {
  enumerable: true,
  get: function () {
    return _symbol.symbols;
  }
});
Object.defineProperty(exports, "symbolCircle", {
  enumerable: true,
  get: function () {
    return _circle.default;
  }
});
Object.defineProperty(exports, "symbolCross", {
  enumerable: true,
  get: function () {
    return _cross.default;
  }
});
Object.defineProperty(exports, "symbolDiamond", {
  enumerable: true,
  get: function () {
    return _diamond.default;
  }
});
Object.defineProperty(exports, "symbolSquare", {
  enumerable: true,
  get: function () {
    return _square.default;
  }
});
Object.defineProperty(exports, "symbolStar", {
  enumerable: true,
  get: function () {
    return _star.default;
  }
});
Object.defineProperty(exports, "symbolTriangle", {
  enumerable: true,
  get: function () {
    return _triangle.default;
  }
});
Object.defineProperty(exports, "symbolWye", {
  enumerable: true,
  get: function () {
    return _wye.default;
  }
});
Object.defineProperty(exports, "curveBasisClosed", {
  enumerable: true,
  get: function () {
    return _basisClosed.default;
  }
});
Object.defineProperty(exports, "curveBasisOpen", {
  enumerable: true,
  get: function () {
    return _basisOpen.default;
  }
});
Object.defineProperty(exports, "curveBasis", {
  enumerable: true,
  get: function () {
    return _basis.default;
  }
});
Object.defineProperty(exports, "curveBundle", {
  enumerable: true,
  get: function () {
    return _bundle.default;
  }
});
Object.defineProperty(exports, "curveCardinalClosed", {
  enumerable: true,
  get: function () {
    return _cardinalClosed.default;
  }
});
Object.defineProperty(exports, "curveCardinalOpen", {
  enumerable: true,
  get: function () {
    return _cardinalOpen.default;
  }
});
Object.defineProperty(exports, "curveCardinal", {
  enumerable: true,
  get: function () {
    return _cardinal.default;
  }
});
Object.defineProperty(exports, "curveCatmullRomClosed", {
  enumerable: true,
  get: function () {
    return _catmullRomClosed.default;
  }
});
Object.defineProperty(exports, "curveCatmullRomOpen", {
  enumerable: true,
  get: function () {
    return _catmullRomOpen.default;
  }
});
Object.defineProperty(exports, "curveCatmullRom", {
  enumerable: true,
  get: function () {
    return _catmullRom.default;
  }
});
Object.defineProperty(exports, "curveLinearClosed", {
  enumerable: true,
  get: function () {
    return _linearClosed.default;
  }
});
Object.defineProperty(exports, "curveLinear", {
  enumerable: true,
  get: function () {
    return _linear.default;
  }
});
Object.defineProperty(exports, "curveMonotoneX", {
  enumerable: true,
  get: function () {
    return _monotone.monotoneX;
  }
});
Object.defineProperty(exports, "curveMonotoneY", {
  enumerable: true,
  get: function () {
    return _monotone.monotoneY;
  }
});
Object.defineProperty(exports, "curveNatural", {
  enumerable: true,
  get: function () {
    return _natural.default;
  }
});
Object.defineProperty(exports, "curveStep", {
  enumerable: true,
  get: function () {
    return _step.default;
  }
});
Object.defineProperty(exports, "curveStepAfter", {
  enumerable: true,
  get: function () {
    return _step.stepAfter;
  }
});
Object.defineProperty(exports, "curveStepBefore", {
  enumerable: true,
  get: function () {
    return _step.stepBefore;
  }
});
Object.defineProperty(exports, "stack", {
  enumerable: true,
  get: function () {
    return _stack.default;
  }
});
Object.defineProperty(exports, "stackOffsetExpand", {
  enumerable: true,
  get: function () {
    return _expand.default;
  }
});
Object.defineProperty(exports, "stackOffsetDiverging", {
  enumerable: true,
  get: function () {
    return _diverging.default;
  }
});
Object.defineProperty(exports, "stackOffsetNone", {
  enumerable: true,
  get: function () {
    return _none.default;
  }
});
Object.defineProperty(exports, "stackOffsetSilhouette", {
  enumerable: true,
  get: function () {
    return _silhouette.default;
  }
});
Object.defineProperty(exports, "stackOffsetWiggle", {
  enumerable: true,
  get: function () {
    return _wiggle.default;
  }
});
Object.defineProperty(exports, "stackOrderAppearance", {
  enumerable: true,
  get: function () {
    return _appearance.default;
  }
});
Object.defineProperty(exports, "stackOrderAscending", {
  enumerable: true,
  get: function () {
    return _ascending.default;
  }
});
Object.defineProperty(exports, "stackOrderDescending", {
  enumerable: true,
  get: function () {
    return _descending.default;
  }
});
Object.defineProperty(exports, "stackOrderInsideOut", {
  enumerable: true,
  get: function () {
    return _insideOut.default;
  }
});
Object.defineProperty(exports, "stackOrderNone", {
  enumerable: true,
  get: function () {
    return _none2.default;
  }
});
Object.defineProperty(exports, "stackOrderReverse", {
  enumerable: true,
  get: function () {
    return _reverse.default;
  }
});

var _arc = _interopRequireDefault(require("./arc.js"));

var _area = _interopRequireDefault(require("./area.js"));

var _line = _interopRequireDefault(require("./line.js"));

var _pie = _interopRequireDefault(require("./pie.js"));

var _areaRadial = _interopRequireDefault(require("./areaRadial.js"));

var _lineRadial = _interopRequireDefault(require("./lineRadial.js"));

var _pointRadial = _interopRequireDefault(require("./pointRadial.js"));

var _index = require("./link/index.js");

var _symbol = _interopRequireWildcard(require("./symbol.js"));

var _circle = _interopRequireDefault(require("./symbol/circle.js"));

var _cross = _interopRequireDefault(require("./symbol/cross.js"));

var _diamond = _interopRequireDefault(require("./symbol/diamond.js"));

var _square = _interopRequireDefault(require("./symbol/square.js"));

var _star = _interopRequireDefault(require("./symbol/star.js"));

var _triangle = _interopRequireDefault(require("./symbol/triangle.js"));

var _wye = _interopRequireDefault(require("./symbol/wye.js"));

var _basisClosed = _interopRequireDefault(require("./curve/basisClosed.js"));

var _basisOpen = _interopRequireDefault(require("./curve/basisOpen.js"));

var _basis = _interopRequireDefault(require("./curve/basis.js"));

var _bundle = _interopRequireDefault(require("./curve/bundle.js"));

var _cardinalClosed = _interopRequireDefault(require("./curve/cardinalClosed.js"));

var _cardinalOpen = _interopRequireDefault(require("./curve/cardinalOpen.js"));

var _cardinal = _interopRequireDefault(require("./curve/cardinal.js"));

var _catmullRomClosed = _interopRequireDefault(require("./curve/catmullRomClosed.js"));

var _catmullRomOpen = _interopRequireDefault(require("./curve/catmullRomOpen.js"));

var _catmullRom = _interopRequireDefault(require("./curve/catmullRom.js"));

var _linearClosed = _interopRequireDefault(require("./curve/linearClosed.js"));

var _linear = _interopRequireDefault(require("./curve/linear.js"));

var _monotone = require("./curve/monotone.js");

var _natural = _interopRequireDefault(require("./curve/natural.js"));

var _step = _interopRequireWildcard(require("./curve/step.js"));

var _stack = _interopRequireDefault(require("./stack.js"));

var _expand = _interopRequireDefault(require("./offset/expand.js"));

var _diverging = _interopRequireDefault(require("./offset/diverging.js"));

var _none = _interopRequireDefault(require("./offset/none.js"));

var _silhouette = _interopRequireDefault(require("./offset/silhouette.js"));

var _wiggle = _interopRequireDefault(require("./offset/wiggle.js"));

var _appearance = _interopRequireDefault(require("./order/appearance.js"));

var _ascending = _interopRequireDefault(require("./order/ascending.js"));

var _descending = _interopRequireDefault(require("./order/descending.js"));

var _insideOut = _interopRequireDefault(require("./order/insideOut.js"));

var _none2 = _interopRequireDefault(require("./order/none.js"));

var _reverse = _interopRequireDefault(require("./order/reverse.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./arc.js":"../../node_modules/d3-shape/src/arc.js","./area.js":"../../node_modules/d3-shape/src/area.js","./line.js":"../../node_modules/d3-shape/src/line.js","./pie.js":"../../node_modules/d3-shape/src/pie.js","./areaRadial.js":"../../node_modules/d3-shape/src/areaRadial.js","./lineRadial.js":"../../node_modules/d3-shape/src/lineRadial.js","./pointRadial.js":"../../node_modules/d3-shape/src/pointRadial.js","./link/index.js":"../../node_modules/d3-shape/src/link/index.js","./symbol.js":"../../node_modules/d3-shape/src/symbol.js","./symbol/circle.js":"../../node_modules/d3-shape/src/symbol/circle.js","./symbol/cross.js":"../../node_modules/d3-shape/src/symbol/cross.js","./symbol/diamond.js":"../../node_modules/d3-shape/src/symbol/diamond.js","./symbol/square.js":"../../node_modules/d3-shape/src/symbol/square.js","./symbol/star.js":"../../node_modules/d3-shape/src/symbol/star.js","./symbol/triangle.js":"../../node_modules/d3-shape/src/symbol/triangle.js","./symbol/wye.js":"../../node_modules/d3-shape/src/symbol/wye.js","./curve/basisClosed.js":"../../node_modules/d3-shape/src/curve/basisClosed.js","./curve/basisOpen.js":"../../node_modules/d3-shape/src/curve/basisOpen.js","./curve/basis.js":"../../node_modules/d3-shape/src/curve/basis.js","./curve/bundle.js":"../../node_modules/d3-shape/src/curve/bundle.js","./curve/cardinalClosed.js":"../../node_modules/d3-shape/src/curve/cardinalClosed.js","./curve/cardinalOpen.js":"../../node_modules/d3-shape/src/curve/cardinalOpen.js","./curve/cardinal.js":"../../node_modules/d3-shape/src/curve/cardinal.js","./curve/catmullRomClosed.js":"../../node_modules/d3-shape/src/curve/catmullRomClosed.js","./curve/catmullRomOpen.js":"../../node_modules/d3-shape/src/curve/catmullRomOpen.js","./curve/catmullRom.js":"../../node_modules/d3-shape/src/curve/catmullRom.js","./curve/linearClosed.js":"../../node_modules/d3-shape/src/curve/linearClosed.js","./curve/linear.js":"../../node_modules/d3-shape/src/curve/linear.js","./curve/monotone.js":"../../node_modules/d3-shape/src/curve/monotone.js","./curve/natural.js":"../../node_modules/d3-shape/src/curve/natural.js","./curve/step.js":"../../node_modules/d3-shape/src/curve/step.js","./stack.js":"../../node_modules/d3-shape/src/stack.js","./offset/expand.js":"../../node_modules/d3-shape/src/offset/expand.js","./offset/diverging.js":"../../node_modules/d3-shape/src/offset/diverging.js","./offset/none.js":"../../node_modules/d3-shape/src/offset/none.js","./offset/silhouette.js":"../../node_modules/d3-shape/src/offset/silhouette.js","./offset/wiggle.js":"../../node_modules/d3-shape/src/offset/wiggle.js","./order/appearance.js":"../../node_modules/d3-shape/src/order/appearance.js","./order/ascending.js":"../../node_modules/d3-shape/src/order/ascending.js","./order/descending.js":"../../node_modules/d3-shape/src/order/descending.js","./order/insideOut.js":"../../node_modules/d3-shape/src/order/insideOut.js","./order/none.js":"../../node_modules/d3-shape/src/order/none.js","./order/reverse.js":"../../node_modules/d3-shape/src/order/reverse.js"}],"../../node_modules/d3-voronoi/src/constant.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return function () {
    return x;
  };
}
},{}],"../../node_modules/d3-voronoi/src/point.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.x = x;
exports.y = y;

function x(d) {
  return d[0];
}

function y(d) {
  return d[1];
}
},{}],"../../node_modules/d3-voronoi/src/RedBlackTree.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RedBlackNode = RedBlackNode;
exports.default = void 0;

function RedBlackTree() {
  this._ = null; // root node
}

function RedBlackNode(node) {
  node.U = // parent node
  node.C = // color - true for red, false for black
  node.L = // left node
  node.R = // right node
  node.P = // previous node
  node.N = null; // next node
}

RedBlackTree.prototype = {
  constructor: RedBlackTree,
  insert: function (after, node) {
    var parent, grandpa, uncle;

    if (after) {
      node.P = after;
      node.N = after.N;
      if (after.N) after.N.P = node;
      after.N = node;

      if (after.R) {
        after = after.R;

        while (after.L) after = after.L;

        after.L = node;
      } else {
        after.R = node;
      }

      parent = after;
    } else if (this._) {
      after = RedBlackFirst(this._);
      node.P = null;
      node.N = after;
      after.P = after.L = node;
      parent = after;
    } else {
      node.P = node.N = null;
      this._ = node;
      parent = null;
    }

    node.L = node.R = null;
    node.U = parent;
    node.C = true;
    after = node;

    while (parent && parent.C) {
      grandpa = parent.U;

      if (parent === grandpa.L) {
        uncle = grandpa.R;

        if (uncle && uncle.C) {
          parent.C = uncle.C = false;
          grandpa.C = true;
          after = grandpa;
        } else {
          if (after === parent.R) {
            RedBlackRotateLeft(this, parent);
            after = parent;
            parent = after.U;
          }

          parent.C = false;
          grandpa.C = true;
          RedBlackRotateRight(this, grandpa);
        }
      } else {
        uncle = grandpa.L;

        if (uncle && uncle.C) {
          parent.C = uncle.C = false;
          grandpa.C = true;
          after = grandpa;
        } else {
          if (after === parent.L) {
            RedBlackRotateRight(this, parent);
            after = parent;
            parent = after.U;
          }

          parent.C = false;
          grandpa.C = true;
          RedBlackRotateLeft(this, grandpa);
        }
      }

      parent = after.U;
    }

    this._.C = false;
  },
  remove: function (node) {
    if (node.N) node.N.P = node.P;
    if (node.P) node.P.N = node.N;
    node.N = node.P = null;
    var parent = node.U,
        sibling,
        left = node.L,
        right = node.R,
        next,
        red;
    if (!left) next = right;else if (!right) next = left;else next = RedBlackFirst(right);

    if (parent) {
      if (parent.L === node) parent.L = next;else parent.R = next;
    } else {
      this._ = next;
    }

    if (left && right) {
      red = next.C;
      next.C = node.C;
      next.L = left;
      left.U = next;

      if (next !== right) {
        parent = next.U;
        next.U = node.U;
        node = next.R;
        parent.L = node;
        next.R = right;
        right.U = next;
      } else {
        next.U = parent;
        parent = next;
        node = next.R;
      }
    } else {
      red = node.C;
      node = next;
    }

    if (node) node.U = parent;
    if (red) return;

    if (node && node.C) {
      node.C = false;
      return;
    }

    do {
      if (node === this._) break;

      if (node === parent.L) {
        sibling = parent.R;

        if (sibling.C) {
          sibling.C = false;
          parent.C = true;
          RedBlackRotateLeft(this, parent);
          sibling = parent.R;
        }

        if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
          if (!sibling.R || !sibling.R.C) {
            sibling.L.C = false;
            sibling.C = true;
            RedBlackRotateRight(this, sibling);
            sibling = parent.R;
          }

          sibling.C = parent.C;
          parent.C = sibling.R.C = false;
          RedBlackRotateLeft(this, parent);
          node = this._;
          break;
        }
      } else {
        sibling = parent.L;

        if (sibling.C) {
          sibling.C = false;
          parent.C = true;
          RedBlackRotateRight(this, parent);
          sibling = parent.L;
        }

        if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {
          if (!sibling.L || !sibling.L.C) {
            sibling.R.C = false;
            sibling.C = true;
            RedBlackRotateLeft(this, sibling);
            sibling = parent.L;
          }

          sibling.C = parent.C;
          parent.C = sibling.L.C = false;
          RedBlackRotateRight(this, parent);
          node = this._;
          break;
        }
      }

      sibling.C = true;
      node = parent;
      parent = parent.U;
    } while (!node.C);

    if (node) node.C = false;
  }
};

function RedBlackRotateLeft(tree, node) {
  var p = node,
      q = node.R,
      parent = p.U;

  if (parent) {
    if (parent.L === p) parent.L = q;else parent.R = q;
  } else {
    tree._ = q;
  }

  q.U = parent;
  p.U = q;
  p.R = q.L;
  if (p.R) p.R.U = p;
  q.L = p;
}

function RedBlackRotateRight(tree, node) {
  var p = node,
      q = node.L,
      parent = p.U;

  if (parent) {
    if (parent.L === p) parent.L = q;else parent.R = q;
  } else {
    tree._ = q;
  }

  q.U = parent;
  p.U = q;
  p.L = q.R;
  if (p.L) p.L.U = p;
  q.R = p;
}

function RedBlackFirst(node) {
  while (node.L) node = node.L;

  return node;
}

var _default = RedBlackTree;
exports.default = _default;
},{}],"../../node_modules/d3-voronoi/src/Edge.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createEdge = createEdge;
exports.createBorderEdge = createBorderEdge;
exports.setEdgeEnd = setEdgeEnd;
exports.clipEdges = clipEdges;

var _Diagram = require("./Diagram");

function createEdge(left, right, v0, v1) {
  var edge = [null, null],
      index = _Diagram.edges.push(edge) - 1;
  edge.left = left;
  edge.right = right;
  if (v0) setEdgeEnd(edge, left, right, v0);
  if (v1) setEdgeEnd(edge, right, left, v1);

  _Diagram.cells[left.index].halfedges.push(index);

  _Diagram.cells[right.index].halfedges.push(index);

  return edge;
}

function createBorderEdge(left, v0, v1) {
  var edge = [v0, v1];
  edge.left = left;
  return edge;
}

function setEdgeEnd(edge, left, right, vertex) {
  if (!edge[0] && !edge[1]) {
    edge[0] = vertex;
    edge.left = left;
    edge.right = right;
  } else if (edge.left === right) {
    edge[1] = vertex;
  } else {
    edge[0] = vertex;
  }
} // Liang–Barsky line clipping.


function clipEdge(edge, x0, y0, x1, y1) {
  var a = edge[0],
      b = edge[1],
      ax = a[0],
      ay = a[1],
      bx = b[0],
      by = b[1],
      t0 = 0,
      t1 = 1,
      dx = bx - ax,
      dy = by - ay,
      r;
  r = x0 - ax;
  if (!dx && r > 0) return;
  r /= dx;

  if (dx < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dx > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = x1 - ax;
  if (!dx && r < 0) return;
  r /= dx;

  if (dx < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dx > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  r = y0 - ay;
  if (!dy && r > 0) return;
  r /= dy;

  if (dy < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dy > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = y1 - ay;
  if (!dy && r < 0) return;
  r /= dy;

  if (dy < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dy > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?

  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];
  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];
  return true;
}

function connectEdge(edge, x0, y0, x1, y1) {
  var v1 = edge[1];
  if (v1) return true;
  var v0 = edge[0],
      left = edge.left,
      right = edge.right,
      lx = left[0],
      ly = left[1],
      rx = right[0],
      ry = right[1],
      fx = (lx + rx) / 2,
      fy = (ly + ry) / 2,
      fm,
      fb;

  if (ry === ly) {
    if (fx < x0 || fx >= x1) return;

    if (lx > rx) {
      if (!v0) v0 = [fx, y0];else if (v0[1] >= y1) return;
      v1 = [fx, y1];
    } else {
      if (!v0) v0 = [fx, y1];else if (v0[1] < y0) return;
      v1 = [fx, y0];
    }
  } else {
    fm = (lx - rx) / (ry - ly);
    fb = fy - fm * fx;

    if (fm < -1 || fm > 1) {
      if (lx > rx) {
        if (!v0) v0 = [(y0 - fb) / fm, y0];else if (v0[1] >= y1) return;
        v1 = [(y1 - fb) / fm, y1];
      } else {
        if (!v0) v0 = [(y1 - fb) / fm, y1];else if (v0[1] < y0) return;
        v1 = [(y0 - fb) / fm, y0];
      }
    } else {
      if (ly < ry) {
        if (!v0) v0 = [x0, fm * x0 + fb];else if (v0[0] >= x1) return;
        v1 = [x1, fm * x1 + fb];
      } else {
        if (!v0) v0 = [x1, fm * x1 + fb];else if (v0[0] < x0) return;
        v1 = [x0, fm * x0 + fb];
      }
    }
  }

  edge[0] = v0;
  edge[1] = v1;
  return true;
}

function clipEdges(x0, y0, x1, y1) {
  var i = _Diagram.edges.length,
      edge;

  while (i--) {
    if (!connectEdge(edge = _Diagram.edges[i], x0, y0, x1, y1) || !clipEdge(edge, x0, y0, x1, y1) || !(Math.abs(edge[0][0] - edge[1][0]) > _Diagram.epsilon || Math.abs(edge[0][1] - edge[1][1]) > _Diagram.epsilon)) {
      delete _Diagram.edges[i];
    }
  }
}
},{"./Diagram":"../../node_modules/d3-voronoi/src/Diagram.js"}],"../../node_modules/d3-voronoi/src/Cell.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createCell = createCell;
exports.cellHalfedgeStart = cellHalfedgeStart;
exports.cellHalfedgeEnd = cellHalfedgeEnd;
exports.sortCellHalfedges = sortCellHalfedges;
exports.clipCells = clipCells;

var _Edge = require("./Edge");

var _Diagram = require("./Diagram");

function createCell(site) {
  return _Diagram.cells[site.index] = {
    site: site,
    halfedges: []
  };
}

function cellHalfedgeAngle(cell, edge) {
  var site = cell.site,
      va = edge.left,
      vb = edge.right;
  if (site === vb) vb = va, va = site;
  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);
  if (site === va) va = edge[1], vb = edge[0];else va = edge[0], vb = edge[1];
  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);
}

function cellHalfedgeStart(cell, edge) {
  return edge[+(edge.left !== cell.site)];
}

function cellHalfedgeEnd(cell, edge) {
  return edge[+(edge.left === cell.site)];
}

function sortCellHalfedges() {
  for (var i = 0, n = _Diagram.cells.length, cell, halfedges, j, m; i < n; ++i) {
    if ((cell = _Diagram.cells[i]) && (m = (halfedges = cell.halfedges).length)) {
      var index = new Array(m),
          array = new Array(m);

      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, _Diagram.edges[halfedges[j]]);

      index.sort(function (i, j) {
        return array[j] - array[i];
      });

      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];

      for (j = 0; j < m; ++j) halfedges[j] = array[j];
    }
  }
}

function clipCells(x0, y0, x1, y1) {
  var nCells = _Diagram.cells.length,
      iCell,
      cell,
      site,
      iHalfedge,
      halfedges,
      nHalfedges,
      start,
      startX,
      startY,
      end,
      endX,
      endY,
      cover = true;

  for (iCell = 0; iCell < nCells; ++iCell) {
    if (cell = _Diagram.cells[iCell]) {
      site = cell.site;
      halfedges = cell.halfedges;
      iHalfedge = halfedges.length; // Remove any dangling clipped edges.

      while (iHalfedge--) {
        if (!_Diagram.edges[halfedges[iHalfedge]]) {
          halfedges.splice(iHalfedge, 1);
        }
      } // Insert any border edges as necessary.


      iHalfedge = 0, nHalfedges = halfedges.length;

      while (iHalfedge < nHalfedges) {
        end = cellHalfedgeEnd(cell, _Diagram.edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];
        start = cellHalfedgeStart(cell, _Diagram.edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];

        if (Math.abs(endX - startX) > _Diagram.epsilon || Math.abs(endY - startY) > _Diagram.epsilon) {
          halfedges.splice(iHalfedge, 0, _Diagram.edges.push((0, _Edge.createBorderEdge)(site, end, Math.abs(endX - x0) < _Diagram.epsilon && y1 - endY > _Diagram.epsilon ? [x0, Math.abs(startX - x0) < _Diagram.epsilon ? startY : y1] : Math.abs(endY - y1) < _Diagram.epsilon && x1 - endX > _Diagram.epsilon ? [Math.abs(startY - y1) < _Diagram.epsilon ? startX : x1, y1] : Math.abs(endX - x1) < _Diagram.epsilon && endY - y0 > _Diagram.epsilon ? [x1, Math.abs(startX - x1) < _Diagram.epsilon ? startY : y0] : Math.abs(endY - y0) < _Diagram.epsilon && endX - x0 > _Diagram.epsilon ? [Math.abs(startY - y0) < _Diagram.epsilon ? startX : x0, y0] : null)) - 1);
          ++nHalfedges;
        }
      }

      if (nHalfedges) cover = false;
    }
  } // If there weren’t any edges, have the closest site cover the extent.
  // It doesn’t matter which corner of the extent we measure!


  if (cover) {
    var dx,
        dy,
        d2,
        dc = Infinity;

    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {
      if (cell = _Diagram.cells[iCell]) {
        site = cell.site;
        dx = site[0] - x0;
        dy = site[1] - y0;
        d2 = dx * dx + dy * dy;
        if (d2 < dc) dc = d2, cover = cell;
      }
    }

    if (cover) {
      var v00 = [x0, y0],
          v01 = [x0, y1],
          v11 = [x1, y1],
          v10 = [x1, y0];
      cover.halfedges.push(_Diagram.edges.push((0, _Edge.createBorderEdge)(site = cover.site, v00, v01)) - 1, _Diagram.edges.push((0, _Edge.createBorderEdge)(site, v01, v11)) - 1, _Diagram.edges.push((0, _Edge.createBorderEdge)(site, v11, v10)) - 1, _Diagram.edges.push((0, _Edge.createBorderEdge)(site, v10, v00)) - 1);
    }
  } // Lastly delete any cells with no edges; these were entirely clipped.


  for (iCell = 0; iCell < nCells; ++iCell) {
    if (cell = _Diagram.cells[iCell]) {
      if (!cell.halfedges.length) {
        delete _Diagram.cells[iCell];
      }
    }
  }
}
},{"./Edge":"../../node_modules/d3-voronoi/src/Edge.js","./Diagram":"../../node_modules/d3-voronoi/src/Diagram.js"}],"../../node_modules/d3-voronoi/src/Circle.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.attachCircle = attachCircle;
exports.detachCircle = detachCircle;
exports.firstCircle = void 0;

var _RedBlackTree = require("./RedBlackTree");

var _Diagram = require("./Diagram");

var circlePool = [];
var firstCircle;
exports.firstCircle = firstCircle;

function Circle() {
  (0, _RedBlackTree.RedBlackNode)(this);
  this.x = this.y = this.arc = this.site = this.cy = null;
}

function attachCircle(arc) {
  var lArc = arc.P,
      rArc = arc.N;
  if (!lArc || !rArc) return;
  var lSite = lArc.site,
      cSite = arc.site,
      rSite = rArc.site;
  if (lSite === rSite) return;
  var bx = cSite[0],
      by = cSite[1],
      ax = lSite[0] - bx,
      ay = lSite[1] - by,
      cx = rSite[0] - bx,
      cy = rSite[1] - by;
  var d = 2 * (ax * cy - ay * cx);
  if (d >= -_Diagram.epsilon2) return;
  var ha = ax * ax + ay * ay,
      hc = cx * cx + cy * cy,
      x = (cy * ha - ay * hc) / d,
      y = (ax * hc - cx * ha) / d;
  var circle = circlePool.pop() || new Circle();
  circle.arc = arc;
  circle.site = cSite;
  circle.x = x + bx;
  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom

  arc.circle = circle;
  var before = null,
      node = _Diagram.circles._;

  while (node) {
    if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {
      if (node.L) node = node.L;else {
        before = node.P;
        break;
      }
    } else {
      if (node.R) node = node.R;else {
        before = node;
        break;
      }
    }
  }

  _Diagram.circles.insert(before, circle);

  if (!before) exports.firstCircle = firstCircle = circle;
}

function detachCircle(arc) {
  var circle = arc.circle;

  if (circle) {
    if (!circle.P) exports.firstCircle = firstCircle = circle.N;

    _Diagram.circles.remove(circle);

    circlePool.push(circle);
    (0, _RedBlackTree.RedBlackNode)(circle);
    arc.circle = null;
  }
}
},{"./RedBlackTree":"../../node_modules/d3-voronoi/src/RedBlackTree.js","./Diagram":"../../node_modules/d3-voronoi/src/Diagram.js"}],"../../node_modules/d3-voronoi/src/Beach.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.removeBeach = removeBeach;
exports.addBeach = addBeach;

var _RedBlackTree = require("./RedBlackTree");

var _Cell = require("./Cell");

var _Circle = require("./Circle");

var _Edge = require("./Edge");

var _Diagram = require("./Diagram");

var beachPool = [];

function Beach() {
  (0, _RedBlackTree.RedBlackNode)(this);
  this.edge = this.site = this.circle = null;
}

function createBeach(site) {
  var beach = beachPool.pop() || new Beach();
  beach.site = site;
  return beach;
}

function detachBeach(beach) {
  (0, _Circle.detachCircle)(beach);

  _Diagram.beaches.remove(beach);

  beachPool.push(beach);
  (0, _RedBlackTree.RedBlackNode)(beach);
}

function removeBeach(beach) {
  var circle = beach.circle,
      x = circle.x,
      y = circle.cy,
      vertex = [x, y],
      previous = beach.P,
      next = beach.N,
      disappearing = [beach];
  detachBeach(beach);
  var lArc = previous;

  while (lArc.circle && Math.abs(x - lArc.circle.x) < _Diagram.epsilon && Math.abs(y - lArc.circle.cy) < _Diagram.epsilon) {
    previous = lArc.P;
    disappearing.unshift(lArc);
    detachBeach(lArc);
    lArc = previous;
  }

  disappearing.unshift(lArc);
  (0, _Circle.detachCircle)(lArc);
  var rArc = next;

  while (rArc.circle && Math.abs(x - rArc.circle.x) < _Diagram.epsilon && Math.abs(y - rArc.circle.cy) < _Diagram.epsilon) {
    next = rArc.N;
    disappearing.push(rArc);
    detachBeach(rArc);
    rArc = next;
  }

  disappearing.push(rArc);
  (0, _Circle.detachCircle)(rArc);
  var nArcs = disappearing.length,
      iArc;

  for (iArc = 1; iArc < nArcs; ++iArc) {
    rArc = disappearing[iArc];
    lArc = disappearing[iArc - 1];
    (0, _Edge.setEdgeEnd)(rArc.edge, lArc.site, rArc.site, vertex);
  }

  lArc = disappearing[0];
  rArc = disappearing[nArcs - 1];
  rArc.edge = (0, _Edge.createEdge)(lArc.site, rArc.site, null, vertex);
  (0, _Circle.attachCircle)(lArc);
  (0, _Circle.attachCircle)(rArc);
}

function addBeach(site) {
  var x = site[0],
      directrix = site[1],
      lArc,
      rArc,
      dxl,
      dxr,
      node = _Diagram.beaches._;

  while (node) {
    dxl = leftBreakPoint(node, directrix) - x;
    if (dxl > _Diagram.epsilon) node = node.L;else {
      dxr = x - rightBreakPoint(node, directrix);

      if (dxr > _Diagram.epsilon) {
        if (!node.R) {
          lArc = node;
          break;
        }

        node = node.R;
      } else {
        if (dxl > -_Diagram.epsilon) {
          lArc = node.P;
          rArc = node;
        } else if (dxr > -_Diagram.epsilon) {
          lArc = node;
          rArc = node.N;
        } else {
          lArc = rArc = node;
        }

        break;
      }
    }
  }

  (0, _Cell.createCell)(site);
  var newArc = createBeach(site);

  _Diagram.beaches.insert(lArc, newArc);

  if (!lArc && !rArc) return;

  if (lArc === rArc) {
    (0, _Circle.detachCircle)(lArc);
    rArc = createBeach(lArc.site);

    _Diagram.beaches.insert(newArc, rArc);

    newArc.edge = rArc.edge = (0, _Edge.createEdge)(lArc.site, newArc.site);
    (0, _Circle.attachCircle)(lArc);
    (0, _Circle.attachCircle)(rArc);
    return;
  }

  if (!rArc) {
    // && lArc
    newArc.edge = (0, _Edge.createEdge)(lArc.site, newArc.site);
    return;
  } // else lArc !== rArc


  (0, _Circle.detachCircle)(lArc);
  (0, _Circle.detachCircle)(rArc);
  var lSite = lArc.site,
      ax = lSite[0],
      ay = lSite[1],
      bx = site[0] - ax,
      by = site[1] - ay,
      rSite = rArc.site,
      cx = rSite[0] - ax,
      cy = rSite[1] - ay,
      d = 2 * (bx * cy - by * cx),
      hb = bx * bx + by * by,
      hc = cx * cx + cy * cy,
      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];
  (0, _Edge.setEdgeEnd)(rArc.edge, lSite, rSite, vertex);
  newArc.edge = (0, _Edge.createEdge)(lSite, site, null, vertex);
  rArc.edge = (0, _Edge.createEdge)(site, rSite, null, vertex);
  (0, _Circle.attachCircle)(lArc);
  (0, _Circle.attachCircle)(rArc);
}

function leftBreakPoint(arc, directrix) {
  var site = arc.site,
      rfocx = site[0],
      rfocy = site[1],
      pby2 = rfocy - directrix;
  if (!pby2) return rfocx;
  var lArc = arc.P;
  if (!lArc) return -Infinity;
  site = lArc.site;
  var lfocx = site[0],
      lfocy = site[1],
      plby2 = lfocy - directrix;
  if (!plby2) return lfocx;
  var hl = lfocx - rfocx,
      aby2 = 1 / pby2 - 1 / plby2,
      b = hl / plby2;
  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;
  return (rfocx + lfocx) / 2;
}

function rightBreakPoint(arc, directrix) {
  var rArc = arc.N;
  if (rArc) return leftBreakPoint(rArc, directrix);
  var site = arc.site;
  return site[1] === directrix ? site[0] : Infinity;
}
},{"./RedBlackTree":"../../node_modules/d3-voronoi/src/RedBlackTree.js","./Cell":"../../node_modules/d3-voronoi/src/Cell.js","./Circle":"../../node_modules/d3-voronoi/src/Circle.js","./Edge":"../../node_modules/d3-voronoi/src/Edge.js","./Diagram":"../../node_modules/d3-voronoi/src/Diagram.js"}],"../../node_modules/d3-voronoi/src/Diagram.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Diagram;
exports.edges = exports.circles = exports.cells = exports.beaches = exports.epsilon2 = exports.epsilon = void 0;

var _Beach = require("./Beach");

var _Cell = require("./Cell");

var _Circle = require("./Circle");

var _Edge = require("./Edge");

var _RedBlackTree = _interopRequireDefault(require("./RedBlackTree"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var epsilon = 1e-6;
exports.epsilon = epsilon;
var epsilon2 = 1e-12;
exports.epsilon2 = epsilon2;
var beaches;
exports.beaches = beaches;
var cells;
exports.cells = cells;
var circles;
exports.circles = circles;
var edges;
exports.edges = edges;

function triangleArea(a, b, c) {
  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);
}

function lexicographic(a, b) {
  return b[1] - a[1] || b[0] - a[0];
}

function Diagram(sites, extent) {
  var site = sites.sort(lexicographic).pop(),
      x,
      y,
      circle;
  exports.edges = edges = [];
  exports.cells = cells = new Array(sites.length);
  exports.beaches = beaches = new _RedBlackTree.default();
  exports.circles = circles = new _RedBlackTree.default();

  while (true) {
    circle = _Circle.firstCircle;

    if (site && (!circle || site[1] < circle.y || site[1] === circle.y && site[0] < circle.x)) {
      if (site[0] !== x || site[1] !== y) {
        (0, _Beach.addBeach)(site);
        x = site[0], y = site[1];
      }

      site = sites.pop();
    } else if (circle) {
      (0, _Beach.removeBeach)(circle.arc);
    } else {
      break;
    }
  }

  (0, _Cell.sortCellHalfedges)();

  if (extent) {
    var x0 = +extent[0][0],
        y0 = +extent[0][1],
        x1 = +extent[1][0],
        y1 = +extent[1][1];
    (0, _Edge.clipEdges)(x0, y0, x1, y1);
    (0, _Cell.clipCells)(x0, y0, x1, y1);
  }

  this.edges = edges;
  this.cells = cells;
  exports.beaches = beaches = exports.circles = circles = exports.edges = edges = exports.cells = cells = null;
}

Diagram.prototype = {
  constructor: Diagram,
  polygons: function () {
    var edges = this.edges;
    return this.cells.map(function (cell) {
      var polygon = cell.halfedges.map(function (i) {
        return (0, _Cell.cellHalfedgeStart)(cell, edges[i]);
      });
      polygon.data = cell.site.data;
      return polygon;
    });
  },
  triangles: function () {
    var triangles = [],
        edges = this.edges;
    this.cells.forEach(function (cell, i) {
      if (!(m = (halfedges = cell.halfedges).length)) return;
      var site = cell.site,
          halfedges,
          j = -1,
          m,
          s0,
          e1 = edges[halfedges[m - 1]],
          s1 = e1.left === site ? e1.right : e1.left;

      while (++j < m) {
        s0 = s1;
        e1 = edges[halfedges[j]];
        s1 = e1.left === site ? e1.right : e1.left;

        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {
          triangles.push([site.data, s0.data, s1.data]);
        }
      }
    });
    return triangles;
  },
  links: function () {
    return this.edges.filter(function (edge) {
      return edge.right;
    }).map(function (edge) {
      return {
        source: edge.left.data,
        target: edge.right.data
      };
    });
  },
  find: function (x, y, radius) {
    var that = this,
        i0,
        i1 = that._found || 0,
        n = that.cells.length,
        cell; // Use the previously-found cell, or start with an arbitrary one.

    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;

    var dx = x - cell.site[0],
        dy = y - cell.site[1],
        d2 = dx * dx + dy * dy; // Traverse the half-edges to find a closer cell, if any.

    do {
      cell = that.cells[i0 = i1], i1 = null;
      cell.halfedges.forEach(function (e) {
        var edge = that.edges[e],
            v = edge.left;
        if ((v === cell.site || !v) && !(v = edge.right)) return;
        var vx = x - v[0],
            vy = y - v[1],
            v2 = vx * vx + vy * vy;
        if (v2 < d2) d2 = v2, i1 = v.index;
      });
    } while (i1 !== null);

    that._found = i0;
    return radius == null || d2 <= radius * radius ? cell.site : null;
  }
};
},{"./Beach":"../../node_modules/d3-voronoi/src/Beach.js","./Cell":"../../node_modules/d3-voronoi/src/Cell.js","./Circle":"../../node_modules/d3-voronoi/src/Circle.js","./Edge":"../../node_modules/d3-voronoi/src/Edge.js","./RedBlackTree":"../../node_modules/d3-voronoi/src/RedBlackTree.js"}],"../../node_modules/d3-voronoi/src/voronoi.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _constant = _interopRequireDefault(require("./constant"));

var _point = require("./point");

var _Diagram = _interopRequireWildcard(require("./Diagram"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _default() {
  var x = _point.x,
      y = _point.y,
      extent = null;

  function voronoi(data) {
    return new _Diagram.default(data.map(function (d, i) {
      var s = [Math.round(x(d, i, data) / _Diagram.epsilon) * _Diagram.epsilon, Math.round(y(d, i, data) / _Diagram.epsilon) * _Diagram.epsilon];
      s.index = i;
      s.data = d;
      return s;
    }), extent);
  }

  voronoi.polygons = function (data) {
    return voronoi(data).polygons();
  };

  voronoi.links = function (data) {
    return voronoi(data).links();
  };

  voronoi.triangles = function (data) {
    return voronoi(data).triangles();
  };

  voronoi.x = function (_) {
    return arguments.length ? (x = typeof _ === "function" ? _ : (0, _constant.default)(+_), voronoi) : x;
  };

  voronoi.y = function (_) {
    return arguments.length ? (y = typeof _ === "function" ? _ : (0, _constant.default)(+_), voronoi) : y;
  };

  voronoi.extent = function (_) {
    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];
  };

  voronoi.size = function (_) {
    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];
  };

  return voronoi;
}
},{"./constant":"../../node_modules/d3-voronoi/src/constant.js","./point":"../../node_modules/d3-voronoi/src/point.js","./Diagram":"../../node_modules/d3-voronoi/src/Diagram.js"}],"../../node_modules/d3-voronoi/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "voronoi", {
  enumerable: true,
  get: function () {
    return _voronoi.default;
  }
});

var _voronoi = _interopRequireDefault(require("./voronoi"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./voronoi":"../../node_modules/d3-voronoi/src/voronoi.js"}],"../../node_modules/d3-zoom/src/constant.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _default(x) {
  return function () {
    return x;
  };
}
},{}],"../../node_modules/d3-zoom/src/event.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ZoomEvent;

function ZoomEvent(target, type, transform) {
  this.target = target;
  this.type = type;
  this.transform = transform;
}
},{}],"../../node_modules/d3-zoom/src/transform.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Transform = Transform;
exports.default = transform;
exports.identity = void 0;

function Transform(k, x, y) {
  this.k = k;
  this.x = x;
  this.y = y;
}

Transform.prototype = {
  constructor: Transform,
  scale: function (k) {
    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);
  },
  translate: function (x, y) {
    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);
  },
  apply: function (point) {
    return [point[0] * this.k + this.x, point[1] * this.k + this.y];
  },
  applyX: function (x) {
    return x * this.k + this.x;
  },
  applyY: function (y) {
    return y * this.k + this.y;
  },
  invert: function (location) {
    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];
  },
  invertX: function (x) {
    return (x - this.x) / this.k;
  },
  invertY: function (y) {
    return (y - this.y) / this.k;
  },
  rescaleX: function (x) {
    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));
  },
  rescaleY: function (y) {
    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));
  },
  toString: function () {
    return "translate(" + this.x + "," + this.y + ") scale(" + this.k + ")";
  }
};
var identity = new Transform(1, 0, 0);
exports.identity = identity;
transform.prototype = Transform.prototype;

function transform(node) {
  while (!node.__zoom) if (!(node = node.parentNode)) return identity;

  return node.__zoom;
}
},{}],"../../node_modules/d3-zoom/src/noevent.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.nopropagation = nopropagation;
exports.default = _default;

var _d3Selection = require("d3-selection");

function nopropagation() {
  _d3Selection.event.stopImmediatePropagation();
}

function _default() {
  _d3Selection.event.preventDefault();

  _d3Selection.event.stopImmediatePropagation();
}
},{"d3-selection":"../../node_modules/d3-selection/src/index.js"}],"../../node_modules/d3-zoom/src/zoom.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

var _d3Dispatch = require("d3-dispatch");

var _d3Drag = require("d3-drag");

var _d3Interpolate = require("d3-interpolate");

var _d3Selection = require("d3-selection");

var _d3Transition = require("d3-transition");

var _constant = _interopRequireDefault(require("./constant.js"));

var _event = _interopRequireDefault(require("./event.js"));

var _transform = require("./transform.js");

var _noevent = _interopRequireWildcard(require("./noevent.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Ignore right-click, since that should open the context menu.
function defaultFilter() {
  return !_d3Selection.event.ctrlKey && !_d3Selection.event.button;
}

function defaultExtent() {
  var e = this;

  if (e instanceof SVGElement) {
    e = e.ownerSVGElement || e;

    if (e.hasAttribute("viewBox")) {
      e = e.viewBox.baseVal;
      return [[e.x, e.y], [e.x + e.width, e.y + e.height]];
    }

    return [[0, 0], [e.width.baseVal.value, e.height.baseVal.value]];
  }

  return [[0, 0], [e.clientWidth, e.clientHeight]];
}

function defaultTransform() {
  return this.__zoom || _transform.identity;
}

function defaultWheelDelta() {
  return -_d3Selection.event.deltaY * (_d3Selection.event.deltaMode === 1 ? 0.05 : _d3Selection.event.deltaMode ? 1 : 0.002);
}

function defaultTouchable() {
  return navigator.maxTouchPoints || "ontouchstart" in this;
}

function defaultConstrain(transform, extent, translateExtent) {
  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],
      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],
      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],
      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];
  return transform.translate(dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1), dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1));
}

function _default() {
  var filter = defaultFilter,
      extent = defaultExtent,
      constrain = defaultConstrain,
      wheelDelta = defaultWheelDelta,
      touchable = defaultTouchable,
      scaleExtent = [0, Infinity],
      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],
      duration = 250,
      interpolate = _d3Interpolate.interpolateZoom,
      listeners = (0, _d3Dispatch.dispatch)("start", "zoom", "end"),
      touchstarting,
      touchending,
      touchDelay = 500,
      wheelDelay = 150,
      clickDistance2 = 0;

  function zoom(selection) {
    selection.property("__zoom", defaultTransform).on("wheel.zoom", wheeled).on("mousedown.zoom", mousedowned).on("dblclick.zoom", dblclicked).filter(touchable).on("touchstart.zoom", touchstarted).on("touchmove.zoom", touchmoved).on("touchend.zoom touchcancel.zoom", touchended).style("touch-action", "none").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }

  zoom.transform = function (collection, transform, point) {
    var selection = collection.selection ? collection.selection() : collection;
    selection.property("__zoom", defaultTransform);

    if (collection !== selection) {
      schedule(collection, transform, point);
    } else {
      selection.interrupt().each(function () {
        gesture(this, arguments).start().zoom(null, typeof transform === "function" ? transform.apply(this, arguments) : transform).end();
      });
    }
  };

  zoom.scaleBy = function (selection, k, p) {
    zoom.scaleTo(selection, function () {
      var k0 = this.__zoom.k,
          k1 = typeof k === "function" ? k.apply(this, arguments) : k;
      return k0 * k1;
    }, p);
  };

  zoom.scaleTo = function (selection, k, p) {
    zoom.transform(selection, function () {
      var e = extent.apply(this, arguments),
          t0 = this.__zoom,
          p0 = p == null ? centroid(e) : typeof p === "function" ? p.apply(this, arguments) : p,
          p1 = t0.invert(p0),
          k1 = typeof k === "function" ? k.apply(this, arguments) : k;
      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);
    }, p);
  };

  zoom.translateBy = function (selection, x, y) {
    zoom.transform(selection, function () {
      return constrain(this.__zoom.translate(typeof x === "function" ? x.apply(this, arguments) : x, typeof y === "function" ? y.apply(this, arguments) : y), extent.apply(this, arguments), translateExtent);
    });
  };

  zoom.translateTo = function (selection, x, y, p) {
    zoom.transform(selection, function () {
      var e = extent.apply(this, arguments),
          t = this.__zoom,
          p0 = p == null ? centroid(e) : typeof p === "function" ? p.apply(this, arguments) : p;
      return constrain(_transform.identity.translate(p0[0], p0[1]).scale(t.k).translate(typeof x === "function" ? -x.apply(this, arguments) : -x, typeof y === "function" ? -y.apply(this, arguments) : -y), e, translateExtent);
    }, p);
  };

  function scale(transform, k) {
    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));
    return k === transform.k ? transform : new _transform.Transform(k, transform.x, transform.y);
  }

  function translate(transform, p0, p1) {
    var x = p0[0] - p1[0] * transform.k,
        y = p0[1] - p1[1] * transform.k;
    return x === transform.x && y === transform.y ? transform : new _transform.Transform(transform.k, x, y);
  }

  function centroid(extent) {
    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];
  }

  function schedule(transition, transform, point) {
    transition.on("start.zoom", function () {
      gesture(this, arguments).start();
    }).on("interrupt.zoom end.zoom", function () {
      gesture(this, arguments).end();
    }).tween("zoom", function () {
      var that = this,
          args = arguments,
          g = gesture(that, args),
          e = extent.apply(that, args),
          p = point == null ? centroid(e) : typeof point === "function" ? point.apply(that, args) : point,
          w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),
          a = that.__zoom,
          b = typeof transform === "function" ? transform.apply(that, args) : transform,
          i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));
      return function (t) {
        if (t === 1) t = b; // Avoid rounding error on end.
        else {
            var l = i(t),
                k = w / l[2];
            t = new _transform.Transform(k, p[0] - l[0] * k, p[1] - l[1] * k);
          }
        g.zoom(null, t);
      };
    });
  }

  function gesture(that, args, clean) {
    return !clean && that.__zooming || new Gesture(that, args);
  }

  function Gesture(that, args) {
    this.that = that;
    this.args = args;
    this.active = 0;
    this.extent = extent.apply(that, args);
    this.taps = 0;
  }

  Gesture.prototype = {
    start: function () {
      if (++this.active === 1) {
        this.that.__zooming = this;
        this.emit("start");
      }

      return this;
    },
    zoom: function (key, transform) {
      if (this.mouse && key !== "mouse") this.mouse[1] = transform.invert(this.mouse[0]);
      if (this.touch0 && key !== "touch") this.touch0[1] = transform.invert(this.touch0[0]);
      if (this.touch1 && key !== "touch") this.touch1[1] = transform.invert(this.touch1[0]);
      this.that.__zoom = transform;
      this.emit("zoom");
      return this;
    },
    end: function () {
      if (--this.active === 0) {
        delete this.that.__zooming;
        this.emit("end");
      }

      return this;
    },
    emit: function (type) {
      (0, _d3Selection.customEvent)(new _event.default(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);
    }
  };

  function wheeled() {
    if (!filter.apply(this, arguments)) return;
    var g = gesture(this, arguments),
        t = this.__zoom,
        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),
        p = (0, _d3Selection.mouse)(this); // If the mouse is in the same location as before, reuse it.
    // If there were recent wheel events, reset the wheel idle timeout.

    if (g.wheel) {
      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {
        g.mouse[1] = t.invert(g.mouse[0] = p);
      }

      clearTimeout(g.wheel);
    } // If this wheel event won’t trigger a transform change, ignore it.
    else if (t.k === k) return; // Otherwise, capture the mouse point and location at the start.
      else {
          g.mouse = [p, t.invert(p)];
          (0, _d3Transition.interrupt)(this);
          g.start();
        }

    (0, _noevent.default)();
    g.wheel = setTimeout(wheelidled, wheelDelay);
    g.zoom("mouse", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));

    function wheelidled() {
      g.wheel = null;
      g.end();
    }
  }

  function mousedowned() {
    if (touchending || !filter.apply(this, arguments)) return;
    var g = gesture(this, arguments, true),
        v = (0, _d3Selection.select)(_d3Selection.event.view).on("mousemove.zoom", mousemoved, true).on("mouseup.zoom", mouseupped, true),
        p = (0, _d3Selection.mouse)(this),
        x0 = _d3Selection.event.clientX,
        y0 = _d3Selection.event.clientY;
    (0, _d3Drag.dragDisable)(_d3Selection.event.view);
    (0, _noevent.nopropagation)();
    g.mouse = [p, this.__zoom.invert(p)];
    (0, _d3Transition.interrupt)(this);
    g.start();

    function mousemoved() {
      (0, _noevent.default)();

      if (!g.moved) {
        var dx = _d3Selection.event.clientX - x0,
            dy = _d3Selection.event.clientY - y0;
        g.moved = dx * dx + dy * dy > clickDistance2;
      }

      g.zoom("mouse", constrain(translate(g.that.__zoom, g.mouse[0] = (0, _d3Selection.mouse)(g.that), g.mouse[1]), g.extent, translateExtent));
    }

    function mouseupped() {
      v.on("mousemove.zoom mouseup.zoom", null);
      (0, _d3Drag.dragEnable)(_d3Selection.event.view, g.moved);
      (0, _noevent.default)();
      g.end();
    }
  }

  function dblclicked() {
    if (!filter.apply(this, arguments)) return;
    var t0 = this.__zoom,
        p0 = (0, _d3Selection.mouse)(this),
        p1 = t0.invert(p0),
        k1 = t0.k * (_d3Selection.event.shiftKey ? 0.5 : 2),
        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);
    (0, _noevent.default)();
    if (duration > 0) (0, _d3Selection.select)(this).transition().duration(duration).call(schedule, t1, p0);else (0, _d3Selection.select)(this).call(zoom.transform, t1);
  }

  function touchstarted() {
    if (!filter.apply(this, arguments)) return;
    var touches = _d3Selection.event.touches,
        n = touches.length,
        g = gesture(this, arguments, _d3Selection.event.changedTouches.length === n),
        started,
        i,
        t,
        p;
    (0, _noevent.nopropagation)();

    for (i = 0; i < n; ++i) {
      t = touches[i], p = (0, _d3Selection.touch)(this, touches, t.identifier);
      p = [p, this.__zoom.invert(p), t.identifier];
      if (!g.touch0) g.touch0 = p, started = true, g.taps = 1 + !!touchstarting;else if (!g.touch1 && g.touch0[2] !== p[2]) g.touch1 = p, g.taps = 0;
    }

    if (touchstarting) touchstarting = clearTimeout(touchstarting);

    if (started) {
      if (g.taps < 2) touchstarting = setTimeout(function () {
        touchstarting = null;
      }, touchDelay);
      (0, _d3Transition.interrupt)(this);
      g.start();
    }
  }

  function touchmoved() {
    if (!this.__zooming) return;
    var g = gesture(this, arguments),
        touches = _d3Selection.event.changedTouches,
        n = touches.length,
        i,
        t,
        p,
        l;
    (0, _noevent.default)();
    if (touchstarting) touchstarting = clearTimeout(touchstarting);
    g.taps = 0;

    for (i = 0; i < n; ++i) {
      t = touches[i], p = (0, _d3Selection.touch)(this, touches, t.identifier);
      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;
    }

    t = g.that.__zoom;

    if (g.touch1) {
      var p0 = g.touch0[0],
          l0 = g.touch0[1],
          p1 = g.touch1[0],
          l1 = g.touch1[1],
          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,
          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;
      t = scale(t, Math.sqrt(dp / dl));
      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];
      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];
    } else if (g.touch0) p = g.touch0[0], l = g.touch0[1];else return;

    g.zoom("touch", constrain(translate(t, p, l), g.extent, translateExtent));
  }

  function touchended() {
    if (!this.__zooming) return;
    var g = gesture(this, arguments),
        touches = _d3Selection.event.changedTouches,
        n = touches.length,
        i,
        t;
    (0, _noevent.nopropagation)();
    if (touchending) clearTimeout(touchending);
    touchending = setTimeout(function () {
      touchending = null;
    }, touchDelay);

    for (i = 0; i < n; ++i) {
      t = touches[i];
      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;
    }

    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;
    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);else {
      g.end(); // If this was a dbltap, reroute to the (optional) dblclick.zoom handler.

      if (g.taps === 2) {
        var p = (0, _d3Selection.select)(this).on("dblclick.zoom");
        if (p) p.apply(this, arguments);
      }
    }
  }

  zoom.wheelDelta = function (_) {
    return arguments.length ? (wheelDelta = typeof _ === "function" ? _ : (0, _constant.default)(+_), zoom) : wheelDelta;
  };

  zoom.filter = function (_) {
    return arguments.length ? (filter = typeof _ === "function" ? _ : (0, _constant.default)(!!_), zoom) : filter;
  };

  zoom.touchable = function (_) {
    return arguments.length ? (touchable = typeof _ === "function" ? _ : (0, _constant.default)(!!_), zoom) : touchable;
  };

  zoom.extent = function (_) {
    return arguments.length ? (extent = typeof _ === "function" ? _ : (0, _constant.default)([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;
  };

  zoom.scaleExtent = function (_) {
    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];
  };

  zoom.translateExtent = function (_) {
    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];
  };

  zoom.constrain = function (_) {
    return arguments.length ? (constrain = _, zoom) : constrain;
  };

  zoom.duration = function (_) {
    return arguments.length ? (duration = +_, zoom) : duration;
  };

  zoom.interpolate = function (_) {
    return arguments.length ? (interpolate = _, zoom) : interpolate;
  };

  zoom.on = function () {
    var value = listeners.on.apply(listeners, arguments);
    return value === listeners ? zoom : value;
  };

  zoom.clickDistance = function (_) {
    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);
  };

  return zoom;
}
},{"d3-dispatch":"../../node_modules/d3-dispatch/src/index.js","d3-drag":"../../node_modules/d3-drag/src/index.js","d3-interpolate":"../../node_modules/d3-interpolate/src/index.js","d3-selection":"../../node_modules/d3-selection/src/index.js","d3-transition":"../../node_modules/d3-transition/src/index.js","./constant.js":"../../node_modules/d3-zoom/src/constant.js","./event.js":"../../node_modules/d3-zoom/src/event.js","./transform.js":"../../node_modules/d3-zoom/src/transform.js","./noevent.js":"../../node_modules/d3-zoom/src/noevent.js"}],"../../node_modules/d3-zoom/src/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "zoom", {
  enumerable: true,
  get: function () {
    return _zoom.default;
  }
});
Object.defineProperty(exports, "zoomTransform", {
  enumerable: true,
  get: function () {
    return _transform.default;
  }
});
Object.defineProperty(exports, "zoomIdentity", {
  enumerable: true,
  get: function () {
    return _transform.identity;
  }
});

var _zoom = _interopRequireDefault(require("./zoom.js"));

var _transform = _interopRequireWildcard(require("./transform.js"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
},{"./zoom.js":"../../node_modules/d3-zoom/src/zoom.js","./transform.js":"../../node_modules/d3-zoom/src/transform.js"}],"../../node_modules/d3/index.js":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  version: true
};
Object.defineProperty(exports, "version", {
  enumerable: true,
  get: function () {
    return _package.version;
  }
});

var _package = require("./dist/package.js");

var _d3Array = require("d3-array");

Object.keys(_d3Array).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Array[key];
    }
  });
});

var _d3Axis = require("d3-axis");

Object.keys(_d3Axis).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Axis[key];
    }
  });
});

var _d3Brush = require("d3-brush");

Object.keys(_d3Brush).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Brush[key];
    }
  });
});

var _d3Chord = require("d3-chord");

Object.keys(_d3Chord).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Chord[key];
    }
  });
});

var _d3Collection = require("d3-collection");

Object.keys(_d3Collection).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Collection[key];
    }
  });
});

var _d3Color = require("d3-color");

Object.keys(_d3Color).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Color[key];
    }
  });
});

var _d3Contour = require("d3-contour");

Object.keys(_d3Contour).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Contour[key];
    }
  });
});

var _d3Dispatch = require("d3-dispatch");

Object.keys(_d3Dispatch).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Dispatch[key];
    }
  });
});

var _d3Drag = require("d3-drag");

Object.keys(_d3Drag).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Drag[key];
    }
  });
});

var _d3Dsv = require("d3-dsv");

Object.keys(_d3Dsv).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Dsv[key];
    }
  });
});

var _d3Ease = require("d3-ease");

Object.keys(_d3Ease).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Ease[key];
    }
  });
});

var _d3Fetch = require("d3-fetch");

Object.keys(_d3Fetch).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Fetch[key];
    }
  });
});

var _d3Force = require("d3-force");

Object.keys(_d3Force).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Force[key];
    }
  });
});

var _d3Format = require("d3-format");

Object.keys(_d3Format).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Format[key];
    }
  });
});

var _d3Geo = require("d3-geo");

Object.keys(_d3Geo).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Geo[key];
    }
  });
});

var _d3Hierarchy = require("d3-hierarchy");

Object.keys(_d3Hierarchy).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Hierarchy[key];
    }
  });
});

var _d3Interpolate = require("d3-interpolate");

Object.keys(_d3Interpolate).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Interpolate[key];
    }
  });
});

var _d3Path = require("d3-path");

Object.keys(_d3Path).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Path[key];
    }
  });
});

var _d3Polygon = require("d3-polygon");

Object.keys(_d3Polygon).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Polygon[key];
    }
  });
});

var _d3Quadtree = require("d3-quadtree");

Object.keys(_d3Quadtree).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Quadtree[key];
    }
  });
});

var _d3Random = require("d3-random");

Object.keys(_d3Random).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Random[key];
    }
  });
});

var _d3Scale = require("d3-scale");

Object.keys(_d3Scale).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Scale[key];
    }
  });
});

var _d3ScaleChromatic = require("d3-scale-chromatic");

Object.keys(_d3ScaleChromatic).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3ScaleChromatic[key];
    }
  });
});

var _d3Selection = require("d3-selection");

Object.keys(_d3Selection).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Selection[key];
    }
  });
});

var _d3Shape = require("d3-shape");

Object.keys(_d3Shape).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Shape[key];
    }
  });
});

var _d3Time = require("d3-time");

Object.keys(_d3Time).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Time[key];
    }
  });
});

var _d3TimeFormat = require("d3-time-format");

Object.keys(_d3TimeFormat).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3TimeFormat[key];
    }
  });
});

var _d3Timer = require("d3-timer");

Object.keys(_d3Timer).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Timer[key];
    }
  });
});

var _d3Transition = require("d3-transition");

Object.keys(_d3Transition).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Transition[key];
    }
  });
});

var _d3Voronoi = require("d3-voronoi");

Object.keys(_d3Voronoi).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Voronoi[key];
    }
  });
});

var _d3Zoom = require("d3-zoom");

Object.keys(_d3Zoom).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _d3Zoom[key];
    }
  });
});
},{"./dist/package.js":"../../node_modules/d3/dist/package.js","d3-array":"../../node_modules/d3-array/src/index.js","d3-axis":"../../node_modules/d3-axis/src/index.js","d3-brush":"../../node_modules/d3-brush/src/index.js","d3-chord":"../../node_modules/d3-chord/src/index.js","d3-collection":"../../node_modules/d3-collection/src/index.js","d3-color":"../../node_modules/d3-color/src/index.js","d3-contour":"../../node_modules/d3-contour/src/index.js","d3-dispatch":"../../node_modules/d3-dispatch/src/index.js","d3-drag":"../../node_modules/d3-drag/src/index.js","d3-dsv":"../../node_modules/d3-dsv/src/index.js","d3-ease":"../../node_modules/d3-ease/src/index.js","d3-fetch":"../../node_modules/d3-fetch/src/index.js","d3-force":"../../node_modules/d3-force/src/index.js","d3-format":"../../node_modules/d3-format/src/index.js","d3-geo":"../../node_modules/d3-geo/src/index.js","d3-hierarchy":"../../node_modules/d3-hierarchy/src/index.js","d3-interpolate":"../../node_modules/d3-interpolate/src/index.js","d3-path":"../../node_modules/d3-path/src/index.js","d3-polygon":"../../node_modules/d3-polygon/src/index.js","d3-quadtree":"../../node_modules/d3-quadtree/src/index.js","d3-random":"../../node_modules/d3-random/src/index.js","d3-scale":"../../node_modules/d3-scale/src/index.js","d3-scale-chromatic":"../../node_modules/d3-scale-chromatic/src/index.js","d3-selection":"../../node_modules/d3-selection/src/index.js","d3-shape":"../../node_modules/d3-shape/src/index.js","d3-time":"../../node_modules/d3-time/src/index.js","d3-time-format":"../../node_modules/d3-time-format/src/index.js","d3-timer":"../../node_modules/d3-timer/src/index.js","d3-transition":"../../node_modules/d3-transition/src/index.js","d3-voronoi":"../../node_modules/d3-voronoi/src/index.js","d3-zoom":"../../node_modules/d3-zoom/src/index.js"}],"../neighbourhoods.json":[function(require,module,exports) {
module.exports = {
  "type": "FeatureCollection",
  "features": [{
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.177386, 41.375347], [2.178532, 41.374845], [2.178881, 41.374692], [2.178217, 41.373863], [2.183148, 41.371629], [2.182094, 41.37031], [2.177653, 41.372329], [2.177632, 41.372392], [2.176918, 41.372711], [2.176856, 41.372748], [2.176858, 41.372849], [2.17641, 41.373055], [2.175677, 41.373392], [2.175622, 41.373422], [2.176401, 41.374378], [2.175203, 41.374681], [2.17323, 41.374827], [2.172748, 41.37486], [2.172725, 41.374862], [2.171917, 41.374922], [2.170069, 41.375048], [2.169626, 41.375033], [2.168574, 41.374982], [2.167865, 41.375016], [2.167649, 41.375211], [2.167455, 41.375404], [2.166552, 41.376081], [2.166114, 41.376431], [2.166091, 41.376448], [2.165474, 41.376941], [2.164687, 41.377567], [2.164681, 41.377572], [2.164358, 41.37781], [2.16325, 41.378681], [2.163127, 41.378774], [2.163358, 41.380369], [2.163357, 41.380467], [2.163494, 41.381382], [2.163538, 41.381701], [2.1636, 41.382151], [2.163631, 41.38238], [2.163639, 41.38243], [2.163887, 41.384163], [2.163899, 41.384248], [2.164045, 41.38528], [2.164064, 41.385433], [2.164865, 41.385948], [2.170061, 41.385501], [2.170664, 41.384614], [2.171716, 41.383066], [2.17174, 41.383031], [2.172097, 41.382505], [2.173171, 41.381299], [2.173297, 41.381157], [2.174088, 41.380269], [2.174174, 41.380172], [2.17472, 41.37954], [2.175121, 41.379077], [2.175452, 41.378802], [2.175543, 41.378677], [2.175769, 41.378298], [2.175792, 41.378258], [2.176022, 41.377862], [2.176877, 41.376744], [2.177548, 41.376018], [2.177478, 41.375937], [2.177448, 41.375886], [2.17744, 41.375868], [2.17743, 41.375842], [2.177423, 41.375816], [2.177418, 41.37579], [2.177415, 41.375764], [2.177414, 41.37575], [2.177413, 41.375735], [2.177414, 41.375719], [2.177417, 41.375703], [2.17742, 41.375688], [2.177425, 41.375673], [2.177432, 41.375658], [2.177439, 41.375643], [2.177447, 41.375629], [2.177458, 41.375613], [2.17747, 41.375601], [2.177481, 41.37559], [2.177493, 41.375579], [2.177507, 41.375569], [2.177546, 41.375544], [2.177386, 41.375347]]]]
    },
    "properties": {
      "neighbourhood": "el Raval",
      "neighbourhood_group": "Ciutat Vella"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.18288, 41.380769], [2.182905, 41.380717], [2.182909, 41.380718], [2.182914, 41.380719], [2.182919, 41.380721], [2.183055, 41.380759], [2.183061, 41.38076], [2.183068, 41.38076], [2.183074, 41.380761], [2.183081, 41.380761], [2.183088, 41.38076], [2.183094, 41.38076], [2.1831, 41.380759], [2.183107, 41.380757], [2.183113, 41.380755], [2.183119, 41.380753], [2.183124, 41.380751], [2.18313, 41.380748], [2.183135, 41.380745], [2.18314, 41.380742], [2.183144, 41.380738], [2.183149, 41.380734], [2.183152, 41.38073], [2.183156, 41.380726], [2.183158, 41.380721], [2.183161, 41.380717], [2.183181, 41.380665], [2.183314, 41.380613], [2.183334, 41.380605], [2.18351, 41.380535], [2.183582, 41.380494], [2.185039, 41.376759], [2.18287, 41.374038], [2.181012, 41.374874], [2.18081, 41.375427], [2.181526, 41.375123], [2.18144, 41.375403], [2.1832, 41.377596], [2.182464, 41.379458], [2.18242, 41.379478], [2.179595, 41.375939], [2.180808, 41.375428], [2.181009, 41.374875], [2.179556, 41.375537], [2.178881, 41.374692], [2.178532, 41.374845], [2.177386, 41.375347], [2.177546, 41.375544], [2.177507, 41.375569], [2.177493, 41.375579], [2.177481, 41.37559], [2.17747, 41.375601], [2.177458, 41.375613], [2.177447, 41.375629], [2.177439, 41.375643], [2.177432, 41.375658], [2.177425, 41.375673], [2.17742, 41.375688], [2.177417, 41.375703], [2.177414, 41.375719], [2.177413, 41.375735], [2.177414, 41.37575], [2.177415, 41.375764], [2.177418, 41.37579], [2.177423, 41.375816], [2.17743, 41.375842], [2.17744, 41.375868], [2.177448, 41.375886], [2.177478, 41.375937], [2.177548, 41.376018], [2.176877, 41.376744], [2.176022, 41.377862], [2.175792, 41.378258], [2.175769, 41.378298], [2.175543, 41.378677], [2.175452, 41.378802], [2.175121, 41.379077], [2.17472, 41.37954], [2.174174, 41.380172], [2.174088, 41.380269], [2.173297, 41.381157], [2.173171, 41.381299], [2.172097, 41.382505], [2.17174, 41.383031], [2.171716, 41.383066], [2.170664, 41.384614], [2.170061, 41.385501], [2.171393, 41.386948], [2.17231, 41.387946], [2.172763, 41.388448], [2.17281, 41.38849], [2.17283, 41.388506], [2.174981, 41.386831], [2.175027, 41.386795], [2.175397, 41.386516], [2.175715, 41.386275], [2.176663, 41.385559], [2.176704, 41.385528], [2.178738, 41.383992], [2.180921, 41.382342], [2.181722, 41.381737], [2.182159, 41.381407], [2.182267, 41.381325], [2.182481, 41.381302], [2.182422, 41.381123], [2.182429, 41.381121], [2.182435, 41.381119], [2.182441, 41.381116], [2.182447, 41.381114], [2.182453, 41.381111], [2.182644, 41.380967], [2.182799, 41.380893], [2.182839, 41.380873], [2.182885, 41.380851], [2.182889, 41.380848], [2.182893, 41.380845], [2.182896, 41.380842], [2.182899, 41.380839], [2.182902, 41.380835], [2.182904, 41.380831], [2.182906, 41.380827], [2.182907, 41.380823], [2.182908, 41.380819], [2.182909, 41.380815], [2.182909, 41.380811], [2.182909, 41.380807], [2.182908, 41.380803], [2.182907, 41.380799], [2.182906, 41.380795], [2.182904, 41.380791], [2.182901, 41.380788], [2.182899, 41.380784], [2.182896, 41.380781], [2.182892, 41.380778], [2.182888, 41.380775], [2.182884, 41.380772], [2.18288, 41.380769]]]]
    },
    "properties": {
      "neighbourhood": "el Barri Gòtic",
      "neighbourhood_group": "Ciutat Vella"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.170927, 41.401846], [2.173334, 41.400016], [2.174304, 41.399279], [2.175437, 41.398418], [2.17657, 41.397556], [2.177819, 41.396606], [2.176048, 41.395284], [2.1761, 41.395235], [2.176125, 41.395208], [2.17615, 41.395175], [2.17617, 41.39514], [2.176189, 41.395098], [2.176199, 41.395059], [2.176207, 41.395021], [2.176212, 41.394971], [2.176209, 41.394926], [2.176203, 41.39489], [2.176193, 41.394845], [2.176177, 41.394801], [2.176153, 41.394755], [2.17612, 41.394705], [2.176011, 41.394576], [2.176817, 41.393968], [2.177952, 41.393111], [2.179077, 41.392262], [2.180232, 41.391391], [2.180212, 41.391376], [2.179874, 41.391087], [2.179854, 41.391069], [2.178498, 41.39056], [2.17738, 41.390141], [2.175854, 41.388982], [2.173768, 41.38901], [2.173452, 41.389015], [2.17283, 41.388506], [2.17281, 41.38849], [2.172763, 41.388448], [2.17231, 41.387946], [2.171393, 41.386948], [2.170061, 41.385501], [2.164865, 41.385948], [2.164144, 41.386335], [2.165386, 41.387276], [2.16474, 41.387759], [2.161882, 41.389927], [2.160754, 41.390781], [2.159625, 41.391638], [2.158495, 41.392495], [2.156242, 41.394203], [2.155346, 41.394882], [2.154719, 41.39538], [2.154789, 41.395398], [2.155679, 41.395622], [2.15932, 41.396542], [2.159564, 41.396716], [2.159615, 41.396752], [2.159734, 41.396835], [2.160016, 41.397028], [2.1616, 41.398237], [2.161872, 41.398437], [2.162937, 41.399241], [2.16301, 41.399296], [2.164132, 41.400147], [2.165259, 41.401002], [2.165267, 41.401009], [2.166347, 41.401822], [2.167472, 41.400959], [2.168681, 41.401861], [2.169802, 41.402701], [2.170927, 41.401846]]]]
    },
    "properties": {
      "neighbourhood": "la Dreta de l'Eixample",
      "neighbourhood_group": "Eixample"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.159725, 41.383014], [2.158588, 41.382159], [2.157336, 41.383104], [2.156204, 41.383958], [2.154459, 41.385274], [2.152824, 41.386507], [2.151677, 41.387372], [2.150546, 41.388225], [2.149421, 41.389074], [2.148466, 41.389794], [2.148168, 41.389839], [2.144081, 41.390461], [2.14364, 41.390525], [2.14364, 41.390526], [2.143684, 41.390717], [2.143958, 41.391478], [2.144397, 41.392415], [2.144789, 41.392459], [2.144856, 41.392516], [2.145003, 41.392642], [2.144944, 41.392908], [2.145595, 41.393077], [2.145922, 41.393159], [2.146197, 41.393228], [2.147808, 41.39363], [2.147912, 41.393657], [2.149585, 41.394091], [2.15129, 41.394523], [2.153161, 41.394998], [2.154719, 41.39538], [2.155346, 41.394882], [2.156242, 41.394203], [2.158495, 41.392495], [2.159625, 41.391638], [2.160754, 41.390781], [2.161882, 41.389927], [2.16474, 41.387759], [2.165386, 41.387276], [2.164144, 41.386335], [2.16413, 41.386325], [2.163124, 41.385568], [2.161996, 41.384721], [2.160866, 41.383871], [2.159725, 41.383014]]]]
    },
    "properties": {
      "neighbourhood": "l'Antiga Esquerra de l'Eixample",
      "neighbourhood_group": "Eixample"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.149992, 41.375622], [2.149834, 41.375326], [2.14966, 41.375398], [2.149396, 41.375506], [2.149085, 41.37571], [2.149066, 41.375722], [2.148935, 41.375794], [2.148273, 41.376291], [2.147102, 41.377168], [2.145969, 41.378018], [2.14579, 41.378156], [2.145292, 41.378576], [2.144901, 41.378856], [2.143942, 41.379573], [2.143026, 41.380286], [2.143018, 41.380295], [2.142992, 41.380317], [2.142563, 41.380684], [2.142342, 41.380873], [2.142417, 41.382091], [2.142437, 41.382422], [2.142542, 41.383916], [2.142554, 41.3841], [2.142646, 41.385503], [2.142663, 41.385682], [2.142769, 41.386635], [2.142942, 41.387642], [2.143058, 41.388261], [2.143318, 41.389231], [2.143525, 41.390112], [2.14364, 41.390525], [2.144081, 41.390461], [2.148168, 41.389839], [2.148466, 41.389794], [2.149421, 41.389074], [2.150546, 41.388225], [2.151677, 41.387372], [2.152824, 41.386507], [2.154459, 41.385274], [2.156204, 41.383958], [2.157336, 41.383104], [2.158588, 41.382159], [2.15633, 41.380462], [2.154065, 41.378759], [2.152931, 41.377907], [2.151804, 41.377059], [2.150435, 41.37603], [2.150133, 41.375776], [2.149992, 41.375622]]]]
    },
    "properties": {
      "neighbourhood": "la Nova Esquerra de l'Eixample",
      "neighbourhood_group": "Eixample"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.196435, 41.383538], [2.195437, 41.381925], [2.197357, 41.381234], [2.196791, 41.3803], [2.194884, 41.380987], [2.193923, 41.379215], [2.19358, 41.378577], [2.192919, 41.377346], [2.189506, 41.37071], [2.189922, 41.369709], [2.191101, 41.369409], [2.191568, 41.370157], [2.192054, 41.369979], [2.187838, 41.363456], [2.18718, 41.361746], [2.187251, 41.36173], [2.187152, 41.361474], [2.186913, 41.361526], [2.18543, 41.357666], [2.184547, 41.357857], [2.184737, 41.358349], [2.185225, 41.358243], [2.187035, 41.362963], [2.186496, 41.363081], [2.186642, 41.363461], [2.187248, 41.363591], [2.189263, 41.36671], [2.187877, 41.367218], [2.187566, 41.366737], [2.187283, 41.366042], [2.186801, 41.365449], [2.185958, 41.364816], [2.186215, 41.364446], [2.186899, 41.364196], [2.186717, 41.36391], [2.185938, 41.364198], [2.185578, 41.364725], [2.185305, 41.364621], [2.18509, 41.365268], [2.184914, 41.365233], [2.18476, 41.365696], [2.185301, 41.365816], [2.185401, 41.365514], [2.186636, 41.366957], [2.186895, 41.368184], [2.186472, 41.368224], [2.186522, 41.368503], [2.18692, 41.368465], [2.187229, 41.370124], [2.186992, 41.370148], [2.18676, 41.368955], [2.186478, 41.368985], [2.186297, 41.367975], [2.185082, 41.368096], [2.185149, 41.368478], [2.184559, 41.368537], [2.184909, 41.370408], [2.1845, 41.370446], [2.184587, 41.37099], [2.187093, 41.370727], [2.187148, 41.371092], [2.185671, 41.371219], [2.18588, 41.372485], [2.187364, 41.372357], [2.187491, 41.373146], [2.187115, 41.373181], [2.186754, 41.373292], [2.186867, 41.373502], [2.186733, 41.373579], [2.187079, 41.373927], [2.187424, 41.374562], [2.186675, 41.374795], [2.186001, 41.374533], [2.185696, 41.372564], [2.184849, 41.372633], [2.184152, 41.37296], [2.184298, 41.373122], [2.18489, 41.372852], [2.184935, 41.373137], [2.184327, 41.373368], [2.184407, 41.3735], [2.184955, 41.373292], [2.185005, 41.37358], [2.184382, 41.373768], [2.184453, 41.373902], [2.185029, 41.373729], [2.185076, 41.374023], [2.184411, 41.374164], [2.184466, 41.374305], [2.185099, 41.374169], [2.185147, 41.37447], [2.184478, 41.374577], [2.184515, 41.37472], [2.18517, 41.374615], [2.185217, 41.374913], [2.184665, 41.374963], [2.184691, 41.375108], [2.18523, 41.375057], [2.186751, 41.375633], [2.186812, 41.375895], [2.18658, 41.375927], [2.186625, 41.376121], [2.186857, 41.376089], [2.187232, 41.377577], [2.186341, 41.379803], [2.18621, 41.379873], [2.186138, 41.380054], [2.184729, 41.380725], [2.184217, 41.380662], [2.183582, 41.380494], [2.18351, 41.380535], [2.183334, 41.380605], [2.183314, 41.380613], [2.183181, 41.380665], [2.183161, 41.380717], [2.183158, 41.380721], [2.183156, 41.380726], [2.183152, 41.38073], [2.183149, 41.380734], [2.183144, 41.380738], [2.18314, 41.380742], [2.183135, 41.380745], [2.18313, 41.380748], [2.183124, 41.380751], [2.183119, 41.380753], [2.183113, 41.380755], [2.183107, 41.380757], [2.1831, 41.380759], [2.183094, 41.38076], [2.183088, 41.38076], [2.183081, 41.380761], [2.183074, 41.380761], [2.183068, 41.38076], [2.183061, 41.38076], [2.183055, 41.380759], [2.182919, 41.380721], [2.182914, 41.380719], [2.182909, 41.380718], [2.182905, 41.380717], [2.18288, 41.380769], [2.182884, 41.380772], [2.182888, 41.380775], [2.182892, 41.380778], [2.182896, 41.380781], [2.182899, 41.380784], [2.182901, 41.380788], [2.182904, 41.380791], [2.182906, 41.380795], [2.182907, 41.380799], [2.182908, 41.380803], [2.182909, 41.380807], [2.182909, 41.380811], [2.182909, 41.380815], [2.182908, 41.380819], [2.182907, 41.380823], [2.182906, 41.380827], [2.182904, 41.380831], [2.182902, 41.380835], [2.182899, 41.380839], [2.182896, 41.380842], [2.182893, 41.380845], [2.182889, 41.380848], [2.182885, 41.380851], [2.182839, 41.380873], [2.182799, 41.380893], [2.182644, 41.380967], [2.182453, 41.381111], [2.182447, 41.381114], [2.182441, 41.381116], [2.182435, 41.381119], [2.182429, 41.381121], [2.182422, 41.381123], [2.182481, 41.381302], [2.18255, 41.381269], [2.182742, 41.381276], [2.183509, 41.381303], [2.183619, 41.381306], [2.184082, 41.381859], [2.184287, 41.382107], [2.184135, 41.382186], [2.184585, 41.382715], [2.185002, 41.382514], [2.185026, 41.382502], [2.185071, 41.382479], [2.185094, 41.382467], [2.18514, 41.382445], [2.18521, 41.382412], [2.185257, 41.382392], [2.185288, 41.382379], [2.185303, 41.382372], [2.185318, 41.382366], [2.185334, 41.382359], [2.185349, 41.382353], [2.18538, 41.38234], [2.185386, 41.382337], [2.185425, 41.382322], [2.18544, 41.382316], [2.185472, 41.382304], [2.185488, 41.382299], [2.18552, 41.382289], [2.185523, 41.382288], [2.185558, 41.382278], [2.18557, 41.382274], [2.185586, 41.38227], [2.185751, 41.382226], [2.186435, 41.382541], [2.186886, 41.382748], [2.187642, 41.383096], [2.188195, 41.38335], [2.188199, 41.383352], [2.188599, 41.383534], [2.188762, 41.383609], [2.188924, 41.383684], [2.189086, 41.383759], [2.189241, 41.383832], [2.189396, 41.383904], [2.189469, 41.383939], [2.18955, 41.383977], [2.189791, 41.38409], [2.189901, 41.384143], [2.190012, 41.384196], [2.190123, 41.384249], [2.190337, 41.384352], [2.190551, 41.384455], [2.190764, 41.38456], [2.190946, 41.38465], [2.191129, 41.384741], [2.19128, 41.384818], [2.191418, 41.384896], [2.192033, 41.385222], [2.192228, 41.385331], [2.192419, 41.385445], [2.192486, 41.385486], [2.192553, 41.385528], [2.192619, 41.38557], [2.192701, 41.385624], [2.192782, 41.385678], [2.192862, 41.385733], [2.192953, 41.385797], [2.193044, 41.385862], [2.193133, 41.385927], [2.193211, 41.385986], [2.193289, 41.386045], [2.193348, 41.3861], [2.193574, 41.386321], [2.193648, 41.386365], [2.195791, 41.387918], [2.195922, 41.387566], [2.196418, 41.387446], [2.19974, 41.384967], [2.19957, 41.384844], [2.199173, 41.384653], [2.196435, 41.383538]]]]
    },
    "properties": {
      "neighbourhood": "la Barceloneta",
      "neighbourhood_group": "Ciutat Vella"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.183478, 41.390642], [2.184618, 41.389787], [2.186883, 41.39144], [2.18796, 41.390601], [2.189201, 41.38965], [2.192574, 41.387066], [2.192983, 41.386761], [2.19338, 41.386453], [2.193574, 41.386321], [2.193348, 41.3861], [2.193289, 41.386045], [2.193211, 41.385986], [2.193133, 41.385927], [2.193044, 41.385862], [2.192953, 41.385797], [2.192862, 41.385733], [2.192782, 41.385678], [2.192701, 41.385624], [2.192619, 41.38557], [2.192553, 41.385528], [2.192486, 41.385486], [2.192419, 41.385445], [2.192228, 41.385331], [2.192033, 41.385222], [2.191418, 41.384896], [2.19128, 41.384818], [2.191129, 41.384741], [2.190946, 41.38465], [2.190764, 41.38456], [2.190551, 41.384455], [2.190337, 41.384352], [2.190123, 41.384249], [2.190012, 41.384196], [2.189901, 41.384143], [2.189791, 41.38409], [2.18955, 41.383977], [2.189469, 41.383939], [2.189396, 41.383904], [2.189241, 41.383832], [2.189086, 41.383759], [2.188924, 41.383684], [2.188762, 41.383609], [2.188599, 41.383534], [2.188199, 41.383352], [2.188195, 41.38335], [2.187642, 41.383096], [2.186886, 41.382748], [2.186435, 41.382541], [2.185751, 41.382226], [2.185586, 41.38227], [2.18557, 41.382274], [2.185558, 41.382278], [2.185523, 41.382288], [2.18552, 41.382289], [2.185488, 41.382299], [2.185472, 41.382304], [2.18544, 41.382316], [2.185425, 41.382322], [2.185386, 41.382337], [2.18538, 41.38234], [2.185349, 41.382353], [2.185334, 41.382359], [2.185318, 41.382366], [2.185303, 41.382372], [2.185288, 41.382379], [2.185257, 41.382392], [2.18521, 41.382412], [2.18514, 41.382445], [2.185094, 41.382467], [2.185071, 41.382479], [2.185026, 41.382502], [2.185002, 41.382514], [2.184585, 41.382715], [2.184135, 41.382186], [2.184287, 41.382107], [2.184082, 41.381859], [2.183619, 41.381306], [2.183509, 41.381303], [2.182742, 41.381276], [2.18255, 41.381269], [2.182481, 41.381302], [2.182267, 41.381325], [2.182159, 41.381407], [2.181722, 41.381737], [2.180921, 41.382342], [2.178738, 41.383992], [2.176704, 41.385528], [2.176663, 41.385559], [2.175715, 41.386275], [2.175397, 41.386516], [2.175027, 41.386795], [2.174981, 41.386831], [2.17283, 41.388506], [2.173452, 41.389015], [2.173768, 41.38901], [2.175854, 41.388982], [2.17738, 41.390141], [2.178498, 41.39056], [2.179854, 41.391069], [2.179874, 41.391087], [2.180212, 41.391376], [2.180232, 41.391391], [2.181363, 41.392253], [2.182407, 41.391457], [2.183478, 41.390642]]]]
    },
    "properties": {
      "neighbourhood": "Sant Pere, Santa Caterina i la Ribera",
      "neighbourhood_group": "Ciutat Vella"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.185962, 41.402471], [2.186562, 41.402308], [2.186836, 41.402319], [2.186833, 41.401796], [2.18684, 41.398298], [2.186842, 41.396925], [2.186771, 41.39672], [2.186751, 41.396663], [2.186785, 41.395518], [2.18675, 41.394936], [2.186731, 41.394624], [2.185835, 41.393968], [2.183544, 41.39229], [2.182407, 41.391457], [2.181363, 41.392253], [2.180232, 41.391391], [2.179077, 41.392262], [2.177952, 41.393111], [2.176817, 41.393968], [2.176011, 41.394576], [2.17612, 41.394705], [2.176153, 41.394755], [2.176177, 41.394801], [2.176193, 41.394845], [2.176203, 41.39489], [2.176209, 41.394926], [2.176212, 41.394971], [2.176207, 41.395021], [2.176199, 41.395059], [2.176189, 41.395098], [2.17617, 41.39514], [2.17615, 41.395175], [2.176125, 41.395208], [2.1761, 41.395235], [2.176048, 41.395284], [2.177819, 41.396606], [2.17657, 41.397556], [2.175437, 41.398418], [2.174304, 41.399279], [2.173334, 41.400016], [2.175034, 41.400443], [2.17629, 41.400758], [2.176572, 41.400829], [2.176727, 41.400868], [2.180284, 41.40176], [2.181868, 41.402158], [2.183527, 41.402574], [2.1855, 41.403068], [2.185611, 41.402848], [2.185659, 41.402761], [2.185712, 41.402672], [2.185766, 41.402575], [2.18598, 41.402497], [2.185962, 41.402471]]]]
    },
    "properties": {
      "neighbourhood": "el Fort Pienc",
      "neighbourhood_group": "Eixample"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.175034, 41.400443], [2.173334, 41.400016], [2.170927, 41.401846], [2.169802, 41.402701], [2.170918, 41.403532], [2.172057, 41.40438], [2.170912, 41.405261], [2.169811, 41.406111], [2.16867, 41.406996], [2.169952, 41.407958], [2.171001, 41.408757], [2.172102, 41.409579], [2.17322, 41.410424], [2.174305, 41.411236], [2.175436, 41.412071], [2.17603, 41.41166], [2.176602, 41.411211], [2.177159, 41.410779], [2.177737, 41.410332], [2.178853, 41.409501], [2.178939, 41.409464], [2.18003, 41.408604], [2.181127, 41.407781], [2.182257, 41.406925], [2.183104, 41.406275], [2.183379, 41.406063], [2.184511, 41.40521], [2.185977, 41.404102], [2.185743, 41.403862], [2.185634, 41.40369], [2.18554, 41.403349], [2.185441, 41.40323], [2.185472, 41.403137], [2.1855, 41.403068], [2.183527, 41.402574], [2.181868, 41.402158], [2.180284, 41.40176], [2.176727, 41.400868], [2.176572, 41.400829], [2.17629, 41.400758], [2.175034, 41.400443]]]]
    },
    "properties": {
      "neighbourhood": "la Sagrada Família",
      "neighbourhood_group": "Eixample"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.167649, 41.375211], [2.167865, 41.375016], [2.167864, 41.375016], [2.167858, 41.375016], [2.167684, 41.375026], [2.16698, 41.375054], [2.166181, 41.375047], [2.165477, 41.375042], [2.165265, 41.37504], [2.164067, 41.375042], [2.163413, 41.37504], [2.163103, 41.375037], [2.162162, 41.375041], [2.161654, 41.375042], [2.160947, 41.375037], [2.160753, 41.375035], [2.160481, 41.375045], [2.159358, 41.375049], [2.158442, 41.375057], [2.157725, 41.375047], [2.156423, 41.375044], [2.15614, 41.375044], [2.155866, 41.375042], [2.154388, 41.375033], [2.154137, 41.375031], [2.154032, 41.375031], [2.151584, 41.375041], [2.150528, 41.375037], [2.149834, 41.375326], [2.149992, 41.375622], [2.150133, 41.375776], [2.150435, 41.37603], [2.151804, 41.377059], [2.152931, 41.377907], [2.154065, 41.378759], [2.15633, 41.380462], [2.158588, 41.382159], [2.159725, 41.383014], [2.160866, 41.383871], [2.161996, 41.384721], [2.163124, 41.385568], [2.16413, 41.386325], [2.164144, 41.386335], [2.164865, 41.385948], [2.164064, 41.385433], [2.164045, 41.38528], [2.163899, 41.384248], [2.163887, 41.384163], [2.163639, 41.38243], [2.163631, 41.38238], [2.1636, 41.382151], [2.163538, 41.381701], [2.163494, 41.381382], [2.163357, 41.380467], [2.163358, 41.380369], [2.163127, 41.378774], [2.16325, 41.378681], [2.164358, 41.37781], [2.164681, 41.377572], [2.164687, 41.377567], [2.165474, 41.376941], [2.166091, 41.376448], [2.166114, 41.376431], [2.166552, 41.376081], [2.167455, 41.375404], [2.167649, 41.375211]]]]
    },
    "properties": {
      "neighbourhood": "Sant Antoni",
      "neighbourhood_group": "Eixample"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.154032, 41.375031], [2.154137, 41.375031], [2.154388, 41.375033], [2.155866, 41.375042], [2.15614, 41.375044], [2.156423, 41.375044], [2.157725, 41.375047], [2.158442, 41.375057], [2.159358, 41.375049], [2.160481, 41.375045], [2.160753, 41.375035], [2.160947, 41.375037], [2.161654, 41.375042], [2.162162, 41.375041], [2.163103, 41.375037], [2.163413, 41.37504], [2.164067, 41.375042], [2.165265, 41.37504], [2.165477, 41.375042], [2.166181, 41.375047], [2.16698, 41.375054], [2.167684, 41.375026], [2.167858, 41.375016], [2.167864, 41.375016], [2.167865, 41.375016], [2.168574, 41.374982], [2.169626, 41.375033], [2.170069, 41.375048], [2.171917, 41.374922], [2.172725, 41.374862], [2.172748, 41.37486], [2.17323, 41.374827], [2.175203, 41.374681], [2.176401, 41.374378], [2.175622, 41.373422], [2.175677, 41.373392], [2.17641, 41.373055], [2.176341, 41.372969], [2.176257, 41.372865], [2.175161, 41.371504], [2.175158, 41.3715], [2.175152, 41.371496], [2.175144, 41.371492], [2.175139, 41.37149], [2.175135, 41.371489], [2.175126, 41.371488], [2.175118, 41.371488], [2.175105, 41.371489], [2.175053, 41.37143], [2.175101, 41.371407], [2.1751, 41.371401], [2.174991, 41.371281], [2.174925, 41.371208], [2.174872, 41.371151], [2.174847, 41.371142], [2.174725, 41.371098], [2.174717, 41.371095], [2.174706, 41.371091], [2.174696, 41.371086], [2.174689, 41.371083], [2.174683, 41.37108], [2.174677, 41.371077], [2.174671, 41.371074], [2.174664, 41.37107], [2.174658, 41.371066], [2.174651, 41.371062], [2.174645, 41.371058], [2.174639, 41.371053], [2.174633, 41.371048], [2.174625, 41.371041], [2.174619, 41.371036], [2.174613, 41.37103], [2.174608, 41.371023], [2.174602, 41.371017], [2.174594, 41.371007], [2.174531, 41.370928], [2.174516, 41.370934], [2.1744, 41.3708], [2.174349, 41.370823], [2.174021, 41.370411], [2.173992, 41.370377], [2.174074, 41.370352], [2.174063, 41.370336], [2.174058, 41.370338], [2.174016, 41.370273], [2.173992, 41.370231], [2.173976, 41.3702], [2.173955, 41.370154], [2.173933, 41.370106], [2.173939, 41.370104], [2.173927, 41.370081], [2.17386, 41.370091], [2.173614, 41.369076], [2.173397, 41.368424], [2.173069, 41.36804], [2.172587, 41.36742], [2.172157, 41.366783], [2.172015, 41.366538], [2.171798, 41.366154], [2.171777, 41.366112], [2.171748, 41.366059], [2.17172, 41.366005], [2.171697, 41.365962], [2.171675, 41.365918], [2.171662, 41.365893], [2.171649, 41.365869], [2.171623, 41.365821], [2.171598, 41.365774], [2.171566, 41.365715], [2.171534, 41.365656], [2.171507, 41.365605], [2.171479, 41.365554], [2.171456, 41.36551], [2.171432, 41.365467], [2.17141, 41.365426], [2.171388, 41.365385], [2.171376, 41.365363], [2.171357, 41.365329], [2.171337, 41.365296], [2.17131, 41.365249], [2.171296, 41.365225], [2.171281, 41.365202], [2.17125, 41.365153], [2.171219, 41.365105], [2.171194, 41.365064], [2.171168, 41.365023], [2.171155, 41.365003], [2.171134, 41.364972], [2.171113, 41.364942], [2.171081, 41.364896], [2.171049, 41.36485], [2.171019, 41.364808], [2.170989, 41.364765], [2.170965, 41.364732], [2.170955, 41.364717], [2.170941, 41.364698], [2.170913, 41.364659], [2.170884, 41.364619], [2.170846, 41.364567], [2.170807, 41.364515], [2.170772, 41.364468], [2.170736, 41.36442], [2.170702, 41.364373], [2.170668, 41.364327], [2.170629, 41.364273], [2.17059, 41.36422], [2.170572, 41.364195], [2.170543, 41.364158], [2.170516, 41.36412], [2.170484, 41.364077], [2.170452, 41.364034], [2.170421, 41.363992], [2.17039, 41.36395], [2.17036, 41.363908], [2.170329, 41.363866], [2.170299, 41.363825], [2.170269, 41.363785], [2.170237, 41.363741], [2.170204, 41.363698], [2.170187, 41.363674], [2.17016, 41.363639], [2.170133, 41.363604], [2.170111, 41.363574], [2.170078, 41.363528], [2.170045, 41.363483], [2.170012, 41.363437], [2.169977, 41.363392], [2.169926, 41.363322], [2.169874, 41.363253], [2.169833, 41.363197], [2.169791, 41.363142], [2.169755, 41.363092], [2.169719, 41.363043], [2.169682, 41.36299], [2.169643, 41.362938], [2.169601, 41.362881], [2.16958, 41.362853], [2.169559, 41.362824], [2.169523, 41.362778], [2.169487, 41.362731], [2.169458, 41.362693], [2.169429, 41.362655], [2.169413, 41.362635], [2.16939, 41.362605], [2.169366, 41.362576], [2.169342, 41.362547], [2.169329, 41.362531], [2.169292, 41.362486], [2.169258, 41.362446], [2.169223, 41.362407], [2.169187, 41.362366], [2.169168, 41.362346], [2.169149, 41.362325], [2.169129, 41.362304], [2.169097, 41.362271], [2.169065, 41.362239], [2.169031, 41.362205], [2.168996, 41.36217], [2.168956, 41.362132], [2.168936, 41.362113], [2.168915, 41.362094], [2.168895, 41.362076], [2.168864, 41.362049], [2.168833, 41.362022], [2.168788, 41.361984], [2.168766, 41.361965], [2.168743, 41.361946], [2.168712, 41.361921], [2.168666, 41.361885], [2.16862, 41.361848], [2.168573, 41.361811], [2.16855, 41.361793], [2.168526, 41.361775], [2.168485, 41.361745], [2.168444, 41.361716], [2.168382, 41.361671], [2.168321, 41.361627], [2.168269, 41.361589], [2.168216, 41.361552], [2.168175, 41.361522], [2.168134, 41.361492], [2.168085, 41.361457], [2.168036, 41.361422], [2.167959, 41.361366], [2.167881, 41.36131], [2.167828, 41.361272], [2.167776, 41.361234], [2.167709, 41.361186], [2.167642, 41.361138], [2.167564, 41.361082], [2.167486, 41.361025], [2.167427, 41.360983], [2.167367, 41.36094], [2.167317, 41.360903], [2.167266, 41.360867], [2.167207, 41.360824], [2.167149, 41.360781], [2.167122, 41.360761], [2.167081, 41.360732], [2.16704, 41.360703], [2.166976, 41.360657], [2.166912, 41.360611], [2.166859, 41.360573], [2.166806, 41.360535], [2.166786, 41.360521], [2.166726, 41.360479], [2.166647, 41.360423], [2.166584, 41.36038], [2.16652, 41.360337], [2.16648, 41.36031], [2.166419, 41.360269], [2.166358, 41.360229], [2.166279, 41.360178], [2.166201, 41.360128], [2.166132, 41.360084], [2.166098, 41.360062], [2.166063, 41.360041], [2.165993, 41.359998], [2.165922, 41.359955], [2.165835, 41.359902], [2.165748, 41.35985], [2.165664, 41.3598], [2.16558, 41.359751], [2.165506, 41.359706], [2.165432, 41.359662], [2.16539, 41.359636], [2.165359, 41.359617], [2.165312, 41.359587], [2.165267, 41.359558], [2.165198, 41.359513], [2.165129, 41.359468], [2.165065, 41.359425], [2.165001, 41.359381], [2.164935, 41.359336], [2.164902, 41.359314], [2.164869, 41.359291], [2.164827, 41.359261], [2.164764, 41.359216], [2.164701, 41.359171], [2.164625, 41.359117], [2.164549, 41.359062], [2.164468, 41.359002], [2.164386, 41.358943], [2.164306, 41.358884], [2.164226, 41.358826], [2.164137, 41.358761], [2.164049, 41.358697], [2.163967, 41.358637], [2.163886, 41.358578], [2.1638, 41.358516], [2.163715, 41.358454], [2.163669, 41.358421], [2.163612, 41.358379], [2.163601, 41.358371], [2.163533, 41.35832], [2.163406, 41.358225], [2.163279, 41.358129], [2.163241, 41.3581], [2.163202, 41.358071], [2.16315, 41.358026], [2.163097, 41.357982], [2.163054, 41.357947], [2.163012, 41.357912], [2.162975, 41.357882], [2.162957, 41.357868], [2.162939, 41.357853], [2.162919, 41.357836], [2.162889, 41.35781], [2.162859, 41.357784], [2.162809, 41.357742], [2.162759, 41.357699], [2.162721, 41.357665], [2.162683, 41.357632], [2.162645, 41.357599], [2.162626, 41.357583], [2.16262, 41.357578], [2.162607, 41.357567], [2.162563, 41.357527], [2.162519, 41.357488], [2.162456, 41.357431], [2.162392, 41.357374], [2.162342, 41.357329], [2.162215, 41.357217], [2.162186, 41.357192], [2.162166, 41.357173], [2.162153, 41.357161], [2.162124, 41.357135], [2.162102, 41.357115], [2.162057, 41.357074], [2.162012, 41.357033], [2.161982, 41.357006], [2.161925, 41.356954], [2.161867, 41.356901], [2.161831, 41.356869], [2.161765, 41.356809], [2.161717, 41.356766], [2.161694, 41.356745], [2.16167, 41.356723], [2.161622, 41.35668], [2.161575, 41.356638], [2.161544, 41.35661], [2.161486, 41.356556], [2.161405, 41.356483], [2.161367, 41.356448], [2.161329, 41.356414], [2.16131, 41.356397], [2.161271, 41.356362], [2.161245, 41.356338], [2.161191, 41.356289], [2.161149, 41.356251], [2.161127, 41.356231], [2.161106, 41.356212], [2.161061, 41.356172], [2.161032, 41.356144], [2.161012, 41.356126], [2.160971, 41.356089], [2.160926, 41.356048], [2.160903, 41.356027], [2.160858, 41.355986], [2.160813, 41.355944], [2.160753, 41.35589], [2.160723, 41.355863], [2.160684, 41.355827], [2.160665, 41.355809], [2.160635, 41.355782], [2.160591, 41.355741], [2.160561, 41.355713], [2.160546, 41.355699], [2.160523, 41.355678], [2.1605, 41.355657], [2.160452, 41.355613], [2.160421, 41.355584], [2.160359, 41.355526], [2.160314, 41.355485], [2.160293, 41.355465], [2.160252, 41.355427], [2.160212, 41.35539], [2.160132, 41.355317], [2.160077, 41.355267], [2.16005, 41.355241], [2.160008, 41.355203], [2.159968, 41.355166], [2.159948, 41.355147], [2.159929, 41.35513], [2.159244, 41.354495], [2.158432, 41.353867], [2.15781, 41.353419], [2.157369, 41.353146], [2.157004, 41.352939], [2.15651, 41.352696], [2.15599, 41.352497], [2.155414, 41.35231], [2.155168, 41.352248], [2.154663, 41.352154], [2.154009, 41.352102], [2.15355, 41.352093], [2.153198, 41.352119], [2.153171, 41.352121], [2.153099, 41.352131], [2.153028, 41.352142], [2.152959, 41.352155], [2.152896, 41.352168], [2.152834, 41.352179], [2.152616, 41.352284], [2.152543, 41.352319], [2.152434, 41.352371], [2.1517, 41.352711], [2.151221, 41.352788], [2.150841, 41.352812], [2.150275, 41.353103], [2.14856, 41.35401], [2.147927, 41.354362], [2.147099, 41.354731], [2.146597, 41.355078], [2.146487, 41.355347], [2.146395, 41.355502], [2.146255, 41.355746], [2.146244, 41.355774], [2.146241, 41.35578], [2.146237, 41.35579], [2.146232, 41.355801], [2.14623, 41.355808], [2.146228, 41.355812], [2.146224, 41.355821], [2.14622, 41.355831], [2.146218, 41.355837], [2.146213, 41.35585], [2.146211, 41.355856], [2.146207, 41.355867], [2.146203, 41.355879], [2.1462, 41.355886], [2.146195, 41.3559], [2.146192, 41.355908], [2.146187, 41.355922], [2.146185, 41.355929], [2.14618, 41.355941], [2.146177, 41.355951], [2.146173, 41.355964], [2.146168, 41.355977], [2.146166, 41.355984], [2.146163, 41.355994], [2.146159, 41.356006], [2.146157, 41.356012], [2.146155, 41.35602], [2.146151, 41.356034], [2.146147, 41.356047], [2.146145, 41.356054], [2.146142, 41.356063], [2.146141, 41.356067], [2.146139, 41.356074], [2.146137, 41.356084], [2.146134, 41.356093], [2.146132, 41.3561], [2.146131, 41.356104], [2.146129, 41.356113], [2.146127, 41.356119], [2.146126, 41.356124], [2.146124, 41.356133], [2.146123, 41.356137], [2.146121, 41.356146], [2.14612, 41.356154], [2.146118, 41.35616], [2.146116, 41.356172], [2.146114, 41.356183], [2.146112, 41.356189], [2.146079, 41.356276], [2.146023, 41.356411], [2.145963, 41.356528], [2.145891, 41.356636], [2.145808, 41.35675], [2.145706, 41.356823], [2.145754, 41.356902], [2.145753, 41.356904], [2.145691, 41.356961], [2.145554, 41.357085], [2.145375, 41.357247], [2.14527, 41.357344], [2.145188, 41.357421], [2.145137, 41.357471], [2.145073, 41.357545], [2.145031, 41.357603], [2.144998, 41.357649], [2.144963, 41.357706], [2.144927, 41.357777], [2.144903, 41.357832], [2.144879, 41.357892], [2.144856, 41.357954], [2.14484, 41.358028], [2.144827, 41.358112], [2.144819, 41.358186], [2.144816, 41.35825], [2.144819, 41.358317], [2.144822, 41.358382], [2.144824, 41.358425], [2.144829, 41.358545], [2.144837, 41.358682], [2.144836, 41.358722], [2.144833, 41.358773], [2.144825, 41.358838], [2.144812, 41.358907], [2.144779, 41.359015], [2.144701, 41.359145], [2.145328, 41.359499], [2.14537, 41.359523], [2.145398, 41.359538], [2.145449, 41.359567], [2.145495, 41.359593], [2.145517, 41.359606], [2.145549, 41.359624], [2.14557, 41.359635], [2.14558, 41.359641], [2.145595, 41.35965], [2.145611, 41.359658], [2.145621, 41.359664], [2.145642, 41.359676], [2.145673, 41.359693], [2.145693, 41.359705], [2.145734, 41.359728], [2.145774, 41.35975], [2.145794, 41.359761], [2.145823, 41.359777], [2.145841, 41.359787], [2.145849, 41.359792], [2.145862, 41.359799], [2.145874, 41.359806], [2.145882, 41.35981], [2.145896, 41.359818], [2.145903, 41.359822], [2.145916, 41.359829], [2.145928, 41.359835], [2.145936, 41.359839], [2.145941, 41.359842], [2.14595, 41.359847], [2.145956, 41.35985], [2.145959, 41.359851], [2.145964, 41.359854], [2.145969, 41.359856], [2.146, 41.35987], [2.146002, 41.359871], [2.14601, 41.359874], [2.146019, 41.359878], [2.146024, 41.35988], [2.146032, 41.359883], [2.14604, 41.359886], [2.146043, 41.359888], [2.146052, 41.359891], [2.146056, 41.359893], [2.146062, 41.359895], [2.146071, 41.359899], [2.146075, 41.359901], [2.146082, 41.359903], [2.146092, 41.359907], [2.146099, 41.35991], [2.146104, 41.359911], [2.146113, 41.359915], [2.146118, 41.359916], [2.146127, 41.35992], [2.146133, 41.359922], [2.146146, 41.359926], [2.146155, 41.35993], [2.146164, 41.359933], [2.146169, 41.359934], [2.146176, 41.359937], [2.146186, 41.35994], [2.14619, 41.359942], [2.146199, 41.359944], [2.146208, 41.359947], [2.146212, 41.359948], [2.146219, 41.359951], [2.146225, 41.359953], [2.146234, 41.359955], [2.146238, 41.359957], [2.146245, 41.359959], [2.146254, 41.359961], [2.146258, 41.359962], [2.146265, 41.359964], [2.146275, 41.359967], [2.146279, 41.359968], [2.146288, 41.359971], [2.146294, 41.359972], [2.146304, 41.359975], [2.146315, 41.359978], [2.146319, 41.359979], [2.14633, 41.359982], [2.146335, 41.359983], [2.146343, 41.359985], [2.146353, 41.359987], [2.146358, 41.359989], [2.146366, 41.35999], [2.146378, 41.359993], [2.146386, 41.359995], [2.146391, 41.359996], [2.146402, 41.359998], [2.146407, 41.36], [2.146417, 41.360002], [2.146424, 41.360003], [2.146433, 41.360005], [2.146438, 41.360006], [2.146448, 41.360008], [2.146459, 41.36001], [2.146464, 41.360011], [2.146472, 41.360013], [2.146484, 41.360015], [2.146493, 41.360017], [2.146498, 41.360017], [2.146505, 41.360019], [2.146516, 41.36002], [2.146527, 41.360022], [2.146532, 41.360023], [2.146543, 41.360025], [2.146548, 41.360026], [2.146556, 41.360027], [2.146567, 41.360028], [2.146573, 41.360029], [2.146581, 41.36003], [2.146593, 41.360032], [2.146605, 41.360033], [2.146613, 41.360034], [2.146618, 41.360035], [2.146629, 41.360036], [2.146635, 41.360037], [2.146646, 41.360038], [2.146657, 41.360039], [2.146661, 41.36004], [2.14672, 41.360045], [2.146728, 41.360045], [2.146738, 41.360046], [2.146743, 41.360046], [2.146754, 41.360047], [2.146766, 41.360048], [2.146771, 41.360048], [2.14678, 41.360048], [2.146791, 41.360049], [2.146796, 41.360049], [2.146805, 41.360049], [2.146817, 41.36005], [2.14683, 41.36005], [2.146838, 41.36005], [2.146843, 41.360051], [2.146854, 41.360051], [2.146862, 41.360051], [2.146867, 41.360051], [2.146878, 41.360051], [2.146883, 41.360051], [2.146894, 41.360051], [2.146904, 41.360051], [2.146911, 41.360051], [2.146916, 41.360051], [2.146925, 41.360051], [2.146937, 41.36005], [2.146945, 41.36005], [2.14695, 41.36005], [2.146961, 41.36005], [2.146971, 41.360049], [2.146985, 41.360049], [2.146992, 41.360049], [2.147002, 41.360048], [2.147007, 41.360048], [2.147018, 41.360047], [2.147023, 41.360047], [2.14703, 41.360047], [2.147039, 41.360046], [2.147044, 41.360046], [2.147051, 41.360046], [2.147061, 41.360045], [2.147071, 41.360044], [2.147076, 41.360044], [2.147086, 41.360043], [2.147091, 41.360042], [2.147099, 41.360042], [2.147109, 41.360041], [2.147114, 41.36004], [2.147123, 41.36004], [2.147135, 41.360038], [2.147147, 41.360037], [2.147154, 41.360036], [2.147165, 41.360035], [2.14717, 41.360034], [2.147183, 41.360033], [2.147189, 41.360032], [2.147201, 41.360031], [2.147207, 41.36003], [2.147217, 41.360029], [2.147229, 41.360027], [2.147235, 41.360026], [2.147244, 41.360025], [2.147258, 41.360023], [2.147262, 41.360022], [2.147271, 41.360021], [2.14728, 41.360019], [2.147286, 41.360018], [2.147297, 41.360016], [2.147306, 41.360015], [2.147311, 41.360014], [2.147322, 41.360012], [2.147328, 41.360011], [2.147338, 41.360009], [2.147349, 41.360007], [2.147356, 41.360006], [2.147361, 41.360005], [2.14737, 41.360003], [2.147382, 41.360001], [2.14739, 41.359999], [2.147395, 41.359998], [2.147406, 41.359995], [2.147414, 41.359994], [2.14743, 41.35999], [2.147446, 41.359987], [2.147457, 41.359984], [2.147479, 41.359979], [2.147503, 41.359974], [2.147515, 41.359971], [2.147534, 41.359966], [2.147566, 41.359959], [2.147602, 41.35995], [2.147622, 41.359945], [2.147642, 41.35994], [2.147687, 41.359929], [2.147728, 41.359919], [2.147806, 41.359901], [2.147909, 41.359876], [2.147971, 41.35986], [2.147984, 41.359857], [2.148008, 41.359852], [2.148031, 41.359847], [2.148084, 41.359835], [2.148166, 41.359818], [2.148262, 41.3598], [2.148337, 41.359784], [2.148448, 41.359767], [2.148539, 41.359754], [2.148614, 41.359745], [2.148697, 41.359737], [2.148863, 41.359747], [2.148995, 41.35978], [2.149105, 41.359845], [2.149244, 41.359978], [2.149315, 41.360111], [2.149335, 41.360236], [2.149341, 41.360375], [2.14934, 41.360497], [2.149322, 41.360608], [2.149304, 41.360735], [2.149269, 41.360807], [2.149225, 41.360901], [2.149179, 41.360991], [2.14913, 41.361071], [2.149115, 41.361097], [2.14909, 41.361142], [2.149061, 41.36119], [2.149031, 41.361235], [2.148978, 41.361311], [2.148897, 41.361421], [2.148833, 41.361498], [2.148765, 41.361573], [2.148693, 41.361646], [2.148617, 41.361717], [2.148443, 41.361863], [2.148265, 41.362005], [2.148083, 41.362144], [2.147895, 41.362279], [2.147851, 41.36231], [2.147415, 41.362596], [2.14742, 41.362592], [2.147404, 41.3626], [2.147388, 41.362609], [2.147371, 41.362618], [2.147265, 41.362669], [2.147158, 41.362718], [2.147048, 41.362765], [2.146937, 41.362808], [2.146846, 41.362842], [2.146756, 41.362874], [2.146664, 41.362907], [2.146604, 41.362926], [2.146548, 41.362946], [2.146492, 41.362967], [2.146438, 41.36299], [2.146211, 41.363057], [2.145953, 41.363134], [2.145723, 41.363204], [2.145389, 41.363298], [2.145359, 41.363309], [2.145327, 41.363322], [2.14523, 41.36336], [2.145134, 41.363398], [2.144925, 41.363483], [2.144749, 41.363556], [2.144609, 41.363615], [2.144401, 41.363703], [2.144293, 41.363751], [2.144201, 41.363789], [2.144075, 41.36388], [2.143662, 41.364205], [2.143609, 41.364249], [2.143527, 41.364316], [2.143466, 41.364367], [2.143405, 41.364417], [2.14336, 41.364452], [2.143312, 41.364489], [2.143266, 41.364522], [2.143227, 41.364546], [2.143176, 41.364574], [2.142974, 41.364666], [2.142837, 41.364731], [2.142865, 41.364756], [2.14288, 41.364769], [2.143013, 41.364887], [2.142789, 41.365027], [2.142776, 41.365036], [2.142655, 41.365111], [2.142468, 41.365233], [2.142455, 41.365242], [2.142422, 41.365262], [2.142406, 41.365271], [2.142142, 41.365442], [2.142074, 41.365382], [2.142056, 41.365396], [2.142031, 41.365414], [2.142008, 41.36543], [2.141987, 41.365443], [2.141962, 41.365458], [2.141957, 41.365473], [2.141957, 41.36549], [2.141966, 41.3655], [2.142035, 41.365593], [2.142076, 41.365656], [2.142122, 41.365742], [2.142132, 41.365881], [2.14216, 41.366072], [2.142337, 41.366059], [2.142515, 41.366298], [2.142827, 41.366717], [2.142829, 41.36672], [2.142847, 41.366717], [2.142849, 41.366717], [2.142929, 41.366693], [2.142938, 41.366717], [2.142981, 41.36683], [2.143043, 41.366943], [2.143124, 41.367093], [2.143139, 41.367118], [2.14316, 41.367149], [2.143193, 41.367163], [2.143284, 41.367169], [2.143281, 41.367192], [2.143283, 41.36723], [2.143292, 41.367284], [2.1433, 41.367321], [2.143312, 41.367356], [2.143327, 41.367391], [2.143344, 41.367426], [2.143364, 41.367459], [2.143387, 41.367492], [2.143411, 41.367523], [2.143469, 41.367577], [2.143531, 41.36763], [2.143598, 41.367681], [2.143667, 41.367729], [2.143739, 41.367774], [2.143804, 41.367804], [2.144651, 41.368202], [2.144686, 41.368217], [2.144733, 41.36824], [2.145277, 41.368507], [2.145349, 41.36855], [2.145372, 41.368615], [2.14538, 41.368643], [2.145389, 41.368669], [2.145398, 41.368694], [2.145411, 41.368719], [2.145427, 41.368749], [2.145446, 41.36878], [2.145467, 41.368812], [2.145497, 41.368853], [2.145526, 41.368887], [2.145559, 41.368924], [2.145585, 41.368952], [2.145629, 41.368994], [2.145656, 41.36902], [2.145675, 41.369036], [2.145678, 41.369039], [2.145974, 41.369232], [2.146011, 41.369251], [2.146169, 41.36932], [2.146339, 41.369387], [2.146505, 41.369441], [2.146799, 41.369494], [2.146853, 41.369503], [2.14693, 41.369515], [2.147039, 41.369528], [2.147163, 41.369533], [2.147269, 41.369535], [2.147382, 41.369533], [2.147495, 41.369528], [2.147648, 41.369517], [2.147796, 41.369499], [2.147889, 41.369487], [2.148024, 41.369474], [2.148135, 41.369462], [2.148241, 41.369454], [2.148375, 41.369456], [2.148386, 41.369457], [2.148488, 41.369464], [2.148594, 41.369479], [2.148688, 41.369502], [2.148776, 41.369528], [2.148828, 41.36955], [2.148888, 41.369578], [2.148965, 41.369618], [2.149029, 41.36966], [2.149124, 41.369731], [2.149182, 41.369783], [2.149217, 41.369828], [2.149242, 41.36986], [2.149289, 41.369938], [2.14932, 41.370004], [2.149355, 41.370099], [2.149375, 41.370175], [2.149404, 41.370273], [2.149427, 41.370365], [2.149453, 41.370479], [2.149464, 41.370532], [2.149477, 41.370592], [2.149493, 41.370655], [2.149507, 41.370706], [2.14952, 41.37077], [2.149551, 41.370839], [2.149594, 41.3709], [2.149627, 41.370935], [2.149715, 41.371004], [2.149836, 41.371063], [2.150451, 41.371314], [2.150125, 41.37156], [2.148526, 41.372762], [2.147254, 41.373718], [2.147597, 41.373977], [2.148552, 41.374702], [2.148465, 41.375242], [2.149085, 41.37571], [2.149396, 41.375506], [2.14966, 41.375398], [2.149834, 41.375326], [2.150528, 41.375037], [2.151584, 41.375041], [2.154032, 41.375031]]]]
    },
    "properties": {
      "neighbourhood": "el Poble Sec",
      "neighbourhood_group": "Sants-Montjuïc"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.140132, 41.367301], [2.139597, 41.36589], [2.141015, 41.365935], [2.141092, 41.365941], [2.141172, 41.365956], [2.141239, 41.36597], [2.141311, 41.365994], [2.141396, 41.366029], [2.141458, 41.366062], [2.141561, 41.366137], [2.141621, 41.366196], [2.141665, 41.366252], [2.141726, 41.366365], [2.141745, 41.366427], [2.141758, 41.366495], [2.141775, 41.366561], [2.141847, 41.366554], [2.141965, 41.366634], [2.141994, 41.366425], [2.142022, 41.366219], [2.142045, 41.366082], [2.14216, 41.366072], [2.142132, 41.365881], [2.142122, 41.365742], [2.142076, 41.365656], [2.142035, 41.365593], [2.141966, 41.3655], [2.141957, 41.36549], [2.141957, 41.365473], [2.141962, 41.365458], [2.141987, 41.365443], [2.142008, 41.36543], [2.142031, 41.365414], [2.142056, 41.365396], [2.142074, 41.365382], [2.142142, 41.365442], [2.142406, 41.365271], [2.142422, 41.365262], [2.142455, 41.365242], [2.142468, 41.365233], [2.142655, 41.365111], [2.142776, 41.365036], [2.142789, 41.365027], [2.143013, 41.364887], [2.14288, 41.364769], [2.142865, 41.364756], [2.142837, 41.364731], [2.142974, 41.364666], [2.143176, 41.364574], [2.143227, 41.364546], [2.143266, 41.364522], [2.143312, 41.364489], [2.14336, 41.364452], [2.143405, 41.364417], [2.143466, 41.364367], [2.143527, 41.364316], [2.143609, 41.364249], [2.143662, 41.364205], [2.144075, 41.36388], [2.144201, 41.363789], [2.144293, 41.363751], [2.144401, 41.363703], [2.144609, 41.363615], [2.144749, 41.363556], [2.144925, 41.363483], [2.145134, 41.363398], [2.14523, 41.36336], [2.145327, 41.363322], [2.145359, 41.363309], [2.145389, 41.363298], [2.145723, 41.363204], [2.145953, 41.363134], [2.146211, 41.363057], [2.146438, 41.36299], [2.146492, 41.362967], [2.146548, 41.362946], [2.146604, 41.362926], [2.146664, 41.362907], [2.146756, 41.362874], [2.146846, 41.362842], [2.146937, 41.362808], [2.147048, 41.362765], [2.147158, 41.362718], [2.147265, 41.362669], [2.147371, 41.362618], [2.147388, 41.362609], [2.147404, 41.3626], [2.14742, 41.362592], [2.147415, 41.362596], [2.147851, 41.36231], [2.147895, 41.362279], [2.148083, 41.362144], [2.148265, 41.362005], [2.148443, 41.361863], [2.148617, 41.361717], [2.148693, 41.361646], [2.148765, 41.361573], [2.148833, 41.361498], [2.148897, 41.361421], [2.148978, 41.361311], [2.149031, 41.361235], [2.149061, 41.36119], [2.14909, 41.361142], [2.149115, 41.361097], [2.14913, 41.361071], [2.149179, 41.360991], [2.149225, 41.360901], [2.149269, 41.360807], [2.149304, 41.360735], [2.149322, 41.360608], [2.14934, 41.360497], [2.149341, 41.360375], [2.149335, 41.360236], [2.149315, 41.360111], [2.149244, 41.359978], [2.149105, 41.359845], [2.148995, 41.35978], [2.148863, 41.359747], [2.148697, 41.359737], [2.148614, 41.359745], [2.148539, 41.359754], [2.148448, 41.359767], [2.148337, 41.359784], [2.148262, 41.3598], [2.148166, 41.359818], [2.148084, 41.359835], [2.148031, 41.359847], [2.148008, 41.359852], [2.147984, 41.359857], [2.147971, 41.35986], [2.147909, 41.359876], [2.147806, 41.359901], [2.147728, 41.359919], [2.147687, 41.359929], [2.147642, 41.35994], [2.147622, 41.359945], [2.147602, 41.35995], [2.147566, 41.359959], [2.147534, 41.359966], [2.147515, 41.359971], [2.147503, 41.359974], [2.147479, 41.359979], [2.147457, 41.359984], [2.147446, 41.359987], [2.14743, 41.35999], [2.147414, 41.359994], [2.147406, 41.359995], [2.147395, 41.359998], [2.14739, 41.359999], [2.147382, 41.360001], [2.14737, 41.360003], [2.147361, 41.360005], [2.147356, 41.360006], [2.147349, 41.360007], [2.147338, 41.360009], [2.147328, 41.360011], [2.147322, 41.360012], [2.147311, 41.360014], [2.147306, 41.360015], [2.147297, 41.360016], [2.147286, 41.360018], [2.14728, 41.360019], [2.147271, 41.360021], [2.147262, 41.360022], [2.147258, 41.360023], [2.147244, 41.360025], [2.147235, 41.360026], [2.147229, 41.360027], [2.147217, 41.360029], [2.147207, 41.36003], [2.147201, 41.360031], [2.147189, 41.360032], [2.147183, 41.360033], [2.14717, 41.360034], [2.147165, 41.360035], [2.147154, 41.360036], [2.147147, 41.360037], [2.147135, 41.360038], [2.147123, 41.36004], [2.147114, 41.36004], [2.147109, 41.360041], [2.147099, 41.360042], [2.147091, 41.360042], [2.147086, 41.360043], [2.147076, 41.360044], [2.147071, 41.360044], [2.147061, 41.360045], [2.147051, 41.360046], [2.147044, 41.360046], [2.147039, 41.360046], [2.14703, 41.360047], [2.147023, 41.360047], [2.147018, 41.360047], [2.147007, 41.360048], [2.147002, 41.360048], [2.146992, 41.360049], [2.146985, 41.360049], [2.146971, 41.360049], [2.146961, 41.36005], [2.14695, 41.36005], [2.146945, 41.36005], [2.146937, 41.36005], [2.146925, 41.360051], [2.146916, 41.360051], [2.146911, 41.360051], [2.146904, 41.360051], [2.146894, 41.360051], [2.146883, 41.360051], [2.146878, 41.360051], [2.146867, 41.360051], [2.146862, 41.360051], [2.146854, 41.360051], [2.146843, 41.360051], [2.146838, 41.36005], [2.14683, 41.36005], [2.146817, 41.36005], [2.146805, 41.360049], [2.146796, 41.360049], [2.146791, 41.360049], [2.14678, 41.360048], [2.146771, 41.360048], [2.146766, 41.360048], [2.146754, 41.360047], [2.146743, 41.360046], [2.146738, 41.360046], [2.146728, 41.360045], [2.14672, 41.360045], [2.146661, 41.36004], [2.146657, 41.360039], [2.146646, 41.360038], [2.146635, 41.360037], [2.146629, 41.360036], [2.146618, 41.360035], [2.146613, 41.360034], [2.146605, 41.360033], [2.146593, 41.360032], [2.146581, 41.36003], [2.146573, 41.360029], [2.146567, 41.360028], [2.146556, 41.360027], [2.146548, 41.360026], [2.146543, 41.360025], [2.146532, 41.360023], [2.146527, 41.360022], [2.146516, 41.36002], [2.146505, 41.360019], [2.146498, 41.360017], [2.146493, 41.360017], [2.146484, 41.360015], [2.146472, 41.360013], [2.146464, 41.360011], [2.146459, 41.36001], [2.146448, 41.360008], [2.146438, 41.360006], [2.146433, 41.360005], [2.146424, 41.360003], [2.146417, 41.360002], [2.146407, 41.36], [2.146402, 41.359998], [2.146391, 41.359996], [2.146386, 41.359995], [2.146378, 41.359993], [2.146366, 41.35999], [2.146358, 41.359989], [2.146353, 41.359987], [2.146343, 41.359985], [2.146335, 41.359983], [2.14633, 41.359982], [2.146319, 41.359979], [2.146315, 41.359978], [2.146304, 41.359975], [2.146294, 41.359972], [2.146288, 41.359971], [2.146279, 41.359968], [2.146275, 41.359967], [2.146265, 41.359964], [2.146258, 41.359962], [2.146254, 41.359961], [2.146245, 41.359959], [2.146238, 41.359957], [2.146234, 41.359955], [2.146225, 41.359953], [2.146219, 41.359951], [2.146212, 41.359948], [2.146208, 41.359947], [2.146199, 41.359944], [2.14619, 41.359942], [2.146186, 41.35994], [2.146176, 41.359937], [2.146169, 41.359934], [2.146164, 41.359933], [2.146155, 41.35993], [2.146146, 41.359926], [2.146133, 41.359922], [2.146127, 41.35992], [2.146118, 41.359916], [2.146113, 41.359915], [2.146104, 41.359911], [2.146099, 41.35991], [2.146092, 41.359907], [2.146082, 41.359903], [2.146075, 41.359901], [2.146071, 41.359899], [2.146062, 41.359895], [2.146056, 41.359893], [2.146052, 41.359891], [2.146043, 41.359888], [2.14604, 41.359886], [2.146032, 41.359883], [2.146024, 41.35988], [2.146019, 41.359878], [2.14601, 41.359874], [2.146002, 41.359871], [2.146, 41.35987], [2.145969, 41.359856], [2.145964, 41.359854], [2.145959, 41.359851], [2.145956, 41.35985], [2.14595, 41.359847], [2.145941, 41.359842], [2.145936, 41.359839], [2.145928, 41.359835], [2.145916, 41.359829], [2.145903, 41.359822], [2.145896, 41.359818], [2.145882, 41.35981], [2.145874, 41.359806], [2.145862, 41.359799], [2.145849, 41.359792], [2.145841, 41.359787], [2.145823, 41.359777], [2.145794, 41.359761], [2.145774, 41.35975], [2.145734, 41.359728], [2.145693, 41.359705], [2.145673, 41.359693], [2.145642, 41.359676], [2.145621, 41.359664], [2.145611, 41.359658], [2.145595, 41.35965], [2.14558, 41.359641], [2.14557, 41.359635], [2.145549, 41.359624], [2.145517, 41.359606], [2.145495, 41.359593], [2.145449, 41.359567], [2.145398, 41.359538], [2.14537, 41.359523], [2.145328, 41.359499], [2.144701, 41.359145], [2.144779, 41.359015], [2.144812, 41.358907], [2.144825, 41.358838], [2.144833, 41.358773], [2.144836, 41.358722], [2.144837, 41.358682], [2.144829, 41.358545], [2.144824, 41.358425], [2.144822, 41.358382], [2.144819, 41.358317], [2.144816, 41.35825], [2.144819, 41.358186], [2.144827, 41.358112], [2.14484, 41.358028], [2.144856, 41.357954], [2.144879, 41.357892], [2.144903, 41.357832], [2.144927, 41.357777], [2.144963, 41.357706], [2.144998, 41.357649], [2.145031, 41.357603], [2.145073, 41.357545], [2.145137, 41.357471], [2.145188, 41.357421], [2.14527, 41.357344], [2.145375, 41.357247], [2.145554, 41.357085], [2.145691, 41.356961], [2.145753, 41.356904], [2.145754, 41.356902], [2.145706, 41.356823], [2.145808, 41.35675], [2.145891, 41.356636], [2.145963, 41.356528], [2.146023, 41.356411], [2.146079, 41.356276], [2.146112, 41.356189], [2.146114, 41.356183], [2.146116, 41.356172], [2.146118, 41.35616], [2.14612, 41.356154], [2.146121, 41.356146], [2.146123, 41.356137], [2.146124, 41.356133], [2.146126, 41.356124], [2.146127, 41.356119], [2.146129, 41.356113], [2.146131, 41.356104], [2.146132, 41.3561], [2.146134, 41.356093], [2.146137, 41.356084], [2.146139, 41.356074], [2.146141, 41.356067], [2.146142, 41.356063], [2.146145, 41.356054], [2.146147, 41.356047], [2.146151, 41.356034], [2.146155, 41.35602], [2.146157, 41.356012], [2.146159, 41.356006], [2.146163, 41.355994], [2.146166, 41.355984], [2.146168, 41.355977], [2.146173, 41.355964], [2.146177, 41.355951], [2.14618, 41.355941], [2.146185, 41.355929], [2.146187, 41.355922], [2.146192, 41.355908], [2.146195, 41.3559], [2.1462, 41.355886], [2.146203, 41.355879], [2.146207, 41.355867], [2.146211, 41.355856], [2.146213, 41.35585], [2.146218, 41.355837], [2.14622, 41.355831], [2.146224, 41.355821], [2.146228, 41.355812], [2.14623, 41.355808], [2.146232, 41.355801], [2.146237, 41.35579], [2.146241, 41.35578], [2.146244, 41.355774], [2.146255, 41.355746], [2.146395, 41.355502], [2.146237, 41.355305], [2.145299, 41.354841], [2.143997, 41.354479], [2.143371, 41.354249], [2.141828, 41.356364], [2.137636, 41.354679], [2.133768, 41.353125], [2.133667, 41.353271], [2.133552, 41.3535], [2.133448, 41.353723], [2.133339, 41.353937], [2.133248, 41.354075], [2.132027, 41.355645], [2.132318, 41.355731], [2.132594, 41.355828], [2.132746, 41.355941], [2.132855, 41.356091], [2.133047, 41.356646], [2.133155, 41.357079], [2.133216, 41.357526], [2.133224, 41.357903], [2.133197, 41.358395], [2.13322, 41.358699], [2.133225, 41.358763], [2.133241, 41.359094], [2.133273, 41.35933], [2.133294, 41.359617], [2.133317, 41.359771], [2.133374, 41.359962], [2.133471, 41.360121], [2.133526, 41.360175], [2.133722, 41.360348], [2.134117, 41.360675], [2.134187, 41.360719], [2.134291, 41.360793], [2.134528, 41.360962], [2.135164, 41.361436], [2.135374, 41.361558], [2.135842, 41.361969], [2.13384, 41.363496], [2.13553, 41.364778], [2.135827, 41.365046], [2.137678, 41.366426], [2.139497, 41.367789], [2.140132, 41.367301]]]]
    },
    "properties": {
      "neighbourhood": "la Marina de Port",
      "neighbourhood_group": "Sants-Montjuïc"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.192379, 41.414598], [2.193557, 41.413718], [2.194683, 41.412877], [2.197095, 41.411075], [2.194798, 41.40935], [2.192556, 41.407667], [2.191437, 41.406827], [2.19009, 41.405813], [2.188619, 41.404709], [2.188297, 41.404467], [2.187977, 41.404225], [2.18761, 41.404368], [2.187566, 41.404383], [2.187521, 41.404398], [2.187476, 41.40441], [2.18743, 41.404422], [2.187392, 41.40443], [2.187339, 41.40444], [2.187285, 41.404448], [2.18723, 41.404454], [2.187175, 41.404458], [2.18712, 41.404461], [2.187068, 41.404461], [2.187015, 41.40446], [2.186962, 41.404457], [2.18691, 41.404453], [2.186865, 41.404447], [2.186821, 41.404441], [2.186777, 41.404433], [2.186733, 41.404424], [2.18669, 41.404414], [2.186644, 41.404401], [2.186621, 41.404394], [2.186545, 41.404365], [2.186481, 41.404333], [2.186397, 41.404287], [2.185977, 41.404102], [2.184511, 41.40521], [2.183379, 41.406063], [2.184248, 41.406713], [2.184554, 41.406942], [2.185746, 41.407834], [2.186127, 41.408118], [2.186878, 41.408679], [2.186907, 41.411958], [2.186909, 41.412125], [2.18691, 41.412222], [2.186925, 41.413933], [2.186928, 41.414265], [2.186901, 41.415299], [2.18755, 41.414824], [2.187893, 41.414548], [2.188983, 41.413697], [2.19014, 41.414585], [2.190956, 41.41522], [2.191205, 41.415414], [2.192086, 41.414802], [2.192379, 41.414598]]]]
    },
    "properties": {
      "neighbourhood": "el Clot",
      "neighbourhood_group": "Sant Martí"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.171598, 41.365774], [2.171623, 41.365821], [2.171649, 41.365869], [2.171662, 41.365893], [2.171675, 41.365918], [2.171697, 41.365962], [2.17172, 41.366005], [2.171748, 41.366059], [2.171777, 41.366112], [2.171798, 41.366154], [2.172015, 41.366538], [2.172157, 41.366783], [2.172587, 41.36742], [2.173069, 41.36804], [2.173397, 41.368424], [2.173614, 41.369076], [2.17386, 41.370091], [2.173927, 41.370081], [2.173939, 41.370104], [2.173933, 41.370106], [2.173955, 41.370154], [2.173976, 41.3702], [2.173992, 41.370231], [2.174016, 41.370273], [2.174058, 41.370338], [2.174063, 41.370336], [2.174074, 41.370352], [2.173992, 41.370377], [2.174021, 41.370411], [2.174349, 41.370823], [2.1744, 41.3708], [2.174516, 41.370934], [2.174531, 41.370928], [2.174594, 41.371007], [2.174602, 41.371017], [2.174608, 41.371023], [2.174613, 41.37103], [2.174619, 41.371036], [2.174625, 41.371041], [2.174633, 41.371048], [2.174639, 41.371053], [2.174645, 41.371058], [2.174651, 41.371062], [2.174658, 41.371066], [2.174664, 41.37107], [2.174671, 41.371074], [2.174677, 41.371077], [2.174683, 41.37108], [2.174689, 41.371083], [2.174696, 41.371086], [2.174706, 41.371091], [2.174717, 41.371095], [2.174725, 41.371098], [2.174847, 41.371142], [2.174872, 41.371151], [2.174925, 41.371208], [2.174991, 41.371281], [2.1751, 41.371401], [2.175101, 41.371407], [2.175053, 41.37143], [2.175105, 41.371489], [2.175118, 41.371488], [2.175126, 41.371488], [2.175135, 41.371489], [2.175139, 41.37149], [2.175144, 41.371492], [2.175152, 41.371496], [2.175158, 41.3715], [2.175161, 41.371504], [2.176257, 41.372865], [2.176341, 41.372969], [2.17641, 41.373055], [2.176858, 41.372849], [2.176856, 41.372748], [2.176918, 41.372711], [2.177632, 41.372392], [2.177653, 41.372329], [2.177468, 41.372095], [2.177142, 41.372124], [2.176834, 41.36992], [2.177187, 41.369889], [2.177104, 41.369339], [2.176751, 41.369369], [2.176474, 41.367492], [2.176791, 41.367464], [2.176607, 41.367176], [2.179666, 41.366067], [2.179817, 41.36631], [2.180888, 41.365906], [2.180557, 41.365404], [2.182336, 41.364758], [2.182373, 41.364817], [2.182826, 41.36491], [2.182714, 41.365228], [2.183223, 41.365341], [2.183356, 41.364907], [2.183185, 41.364869], [2.183409, 41.364199], [2.18356, 41.363306], [2.183181, 41.363235], [2.179337, 41.357204], [2.177391, 41.354198], [2.176107, 41.352036], [2.176115, 41.351628], [2.175962, 41.351359], [2.175464, 41.350772], [2.175304, 41.350322], [2.171992, 41.335036], [2.170018, 41.326497], [2.173205, 41.317119], [2.172361, 41.316956], [2.169204, 41.326369], [2.171232, 41.335147], [2.169849, 41.335313], [2.170411, 41.337896], [2.169807, 41.337969], [2.172163, 41.348806], [2.171808, 41.348849], [2.171869, 41.349111], [2.171933, 41.349262], [2.172083, 41.349502], [2.172406, 41.349384], [2.174926, 41.353276], [2.17466, 41.35337], [2.174896, 41.353715], [2.175146, 41.353618], [2.17813, 41.358241], [2.17782, 41.358364], [2.178071, 41.358755], [2.178385, 41.358638], [2.182165, 41.364494], [2.180387, 41.365141], [2.179357, 41.363527], [2.178927, 41.363688], [2.179214, 41.364131], [2.17601, 41.365294], [2.173382, 41.361848], [2.176786, 41.36059], [2.175471, 41.358561], [2.170973, 41.360221], [2.169983, 41.358689], [2.17315, 41.356562], [2.167459, 41.347904], [2.167213, 41.348], [2.167525, 41.348468], [2.163329, 41.3513], [2.163156, 41.351257], [2.16257, 41.351926], [2.161487, 41.351407], [2.161631, 41.351235], [2.161519, 41.351181], [2.165959, 41.345921], [2.165427, 41.345666], [2.161756, 41.350015], [2.160437, 41.349383], [2.160804, 41.348938], [2.160437, 41.348763], [2.161588, 41.347398], [2.15334, 41.342684], [2.152923, 41.342751], [2.153167, 41.344454], [2.152804, 41.344482], [2.152956, 41.345584], [2.150896, 41.345779], [2.15065, 41.344163], [2.149638, 41.336651], [2.145688, 41.336535], [2.145706, 41.336276], [2.145357, 41.336396], [2.144372, 41.3348], [2.147373, 41.333749], [2.145939, 41.331423], [2.146181, 41.33134], [2.145997, 41.331041], [2.148532, 41.330157], [2.155739, 41.341866], [2.159242, 41.343452], [2.160715, 41.342881], [2.166625, 41.341916], [2.165799, 41.340034], [2.16498, 41.340168], [2.159194, 41.327014], [2.158518, 41.327031], [2.158861, 41.32781], [2.154656, 41.327835], [2.15447, 41.32717], [2.153843, 41.327174], [2.153703, 41.326679], [2.153428, 41.325989], [2.153163, 41.325203], [2.152933, 41.324394], [2.152434, 41.323176], [2.152948, 41.322996], [2.152545, 41.322328], [2.151981, 41.322526], [2.151044, 41.320976], [2.140892, 41.321566], [2.132336, 41.321238], [2.128477, 41.321638], [2.126801, 41.321897], [2.124009, 41.322427], [2.120661, 41.323125], [2.116528, 41.32426], [2.114222, 41.325467], [2.113007, 41.327328], [2.110388, 41.330257], [2.110323, 41.330255], [2.109131, 41.331221], [2.108395, 41.332059], [2.107243, 41.333085], [2.106035, 41.33409], [2.103732, 41.33539], [2.103221, 41.335556], [2.102322, 41.335968], [2.101489, 41.336456], [2.102627, 41.336986], [2.103534, 41.337238], [2.105871, 41.338089], [2.10757, 41.33869], [2.107951, 41.33876], [2.111268, 41.339919], [2.126409, 41.344958], [2.12728, 41.345389], [2.126926, 41.345915], [2.128307, 41.346754], [2.12871, 41.346222], [2.128907, 41.346284], [2.128953, 41.346196], [2.129545, 41.346391], [2.129508, 41.346445], [2.129875, 41.346583], [2.129967, 41.346455], [2.13037, 41.346573], [2.130425, 41.346492], [2.130817, 41.346773], [2.131988, 41.347433], [2.132557, 41.347892], [2.132876, 41.347925], [2.133126, 41.347788], [2.133859, 41.348146], [2.133439, 41.348556], [2.13488, 41.349171], [2.135256, 41.348685], [2.136971, 41.349337], [2.137037, 41.349376], [2.137191, 41.349465], [2.136256, 41.350277], [2.135577, 41.350991], [2.135606, 41.351053], [2.134583, 41.352295], [2.134416, 41.352237], [2.13391, 41.352885], [2.133829, 41.353035], [2.133768, 41.353125], [2.137636, 41.354679], [2.141828, 41.356364], [2.143371, 41.354249], [2.143997, 41.354479], [2.145299, 41.354841], [2.146237, 41.355305], [2.146395, 41.355502], [2.146487, 41.355347], [2.146597, 41.355078], [2.147099, 41.354731], [2.147927, 41.354362], [2.14856, 41.35401], [2.150275, 41.353103], [2.150841, 41.352812], [2.151221, 41.352788], [2.1517, 41.352711], [2.152434, 41.352371], [2.152543, 41.352319], [2.152616, 41.352284], [2.152834, 41.352179], [2.152896, 41.352168], [2.152959, 41.352155], [2.153028, 41.352142], [2.153099, 41.352131], [2.153171, 41.352121], [2.153198, 41.352119], [2.15355, 41.352093], [2.154009, 41.352102], [2.154663, 41.352154], [2.155168, 41.352248], [2.155414, 41.35231], [2.15599, 41.352497], [2.15651, 41.352696], [2.157004, 41.352939], [2.157369, 41.353146], [2.15781, 41.353419], [2.158432, 41.353867], [2.159244, 41.354495], [2.159929, 41.35513], [2.159948, 41.355147], [2.159968, 41.355166], [2.160008, 41.355203], [2.16005, 41.355241], [2.160077, 41.355267], [2.160132, 41.355317], [2.160212, 41.35539], [2.160252, 41.355427], [2.160293, 41.355465], [2.160314, 41.355485], [2.160359, 41.355526], [2.160421, 41.355584], [2.160452, 41.355613], [2.1605, 41.355657], [2.160523, 41.355678], [2.160546, 41.355699], [2.160561, 41.355713], [2.160591, 41.355741], [2.160635, 41.355782], [2.160665, 41.355809], [2.160684, 41.355827], [2.160723, 41.355863], [2.160753, 41.35589], [2.160813, 41.355944], [2.160858, 41.355986], [2.160903, 41.356027], [2.160926, 41.356048], [2.160971, 41.356089], [2.161012, 41.356126], [2.161032, 41.356144], [2.161061, 41.356172], [2.161106, 41.356212], [2.161127, 41.356231], [2.161149, 41.356251], [2.161191, 41.356289], [2.161245, 41.356338], [2.161271, 41.356362], [2.16131, 41.356397], [2.161329, 41.356414], [2.161367, 41.356448], [2.161405, 41.356483], [2.161486, 41.356556], [2.161544, 41.35661], [2.161575, 41.356638], [2.161622, 41.35668], [2.16167, 41.356723], [2.161694, 41.356745], [2.161717, 41.356766], [2.161765, 41.356809], [2.161831, 41.356869], [2.161867, 41.356901], [2.161925, 41.356954], [2.161982, 41.357006], [2.162012, 41.357033], [2.162057, 41.357074], [2.162102, 41.357115], [2.162124, 41.357135], [2.162153, 41.357161], [2.162166, 41.357173], [2.162186, 41.357192], [2.162215, 41.357217], [2.162342, 41.357329], [2.162392, 41.357374], [2.162456, 41.357431], [2.162519, 41.357488], [2.162563, 41.357527], [2.162607, 41.357567], [2.16262, 41.357578], [2.162626, 41.357583], [2.162645, 41.357599], [2.162683, 41.357632], [2.162721, 41.357665], [2.162759, 41.357699], [2.162809, 41.357742], [2.162859, 41.357784], [2.162889, 41.35781], [2.162919, 41.357836], [2.162939, 41.357853], [2.162957, 41.357868], [2.162975, 41.357882], [2.163012, 41.357912], [2.163054, 41.357947], [2.163097, 41.357982], [2.16315, 41.358026], [2.163202, 41.358071], [2.163241, 41.3581], [2.163279, 41.358129], [2.163406, 41.358225], [2.163533, 41.35832], [2.163601, 41.358371], [2.163612, 41.358379], [2.163669, 41.358421], [2.163715, 41.358454], [2.1638, 41.358516], [2.163886, 41.358578], [2.163967, 41.358637], [2.164049, 41.358697], [2.164137, 41.358761], [2.164226, 41.358826], [2.164306, 41.358884], [2.164386, 41.358943], [2.164468, 41.359002], [2.164549, 41.359062], [2.164625, 41.359117], [2.164701, 41.359171], [2.164764, 41.359216], [2.164827, 41.359261], [2.164869, 41.359291], [2.164902, 41.359314], [2.164935, 41.359336], [2.165001, 41.359381], [2.165065, 41.359425], [2.165129, 41.359468], [2.165198, 41.359513], [2.165267, 41.359558], [2.165312, 41.359587], [2.165359, 41.359617], [2.16539, 41.359636], [2.165432, 41.359662], [2.165506, 41.359706], [2.16558, 41.359751], [2.165664, 41.3598], [2.165748, 41.35985], [2.165835, 41.359902], [2.165922, 41.359955], [2.165993, 41.359998], [2.166063, 41.360041], [2.166098, 41.360062], [2.166132, 41.360084], [2.166201, 41.360128], [2.166279, 41.360178], [2.166358, 41.360229], [2.166419, 41.360269], [2.16648, 41.36031], [2.16652, 41.360337], [2.166584, 41.36038], [2.166647, 41.360423], [2.166726, 41.360479], [2.166786, 41.360521], [2.166806, 41.360535], [2.166859, 41.360573], [2.166912, 41.360611], [2.166976, 41.360657], [2.16704, 41.360703], [2.167081, 41.360732], [2.167122, 41.360761], [2.167149, 41.360781], [2.167207, 41.360824], [2.167266, 41.360867], [2.167317, 41.360903], [2.167367, 41.36094], [2.167427, 41.360983], [2.167486, 41.361025], [2.167564, 41.361082], [2.167642, 41.361138], [2.167709, 41.361186], [2.167776, 41.361234], [2.167828, 41.361272], [2.167881, 41.36131], [2.167959, 41.361366], [2.168036, 41.361422], [2.168085, 41.361457], [2.168134, 41.361492], [2.168175, 41.361522], [2.168216, 41.361552], [2.168269, 41.361589], [2.168321, 41.361627], [2.168382, 41.361671], [2.168444, 41.361716], [2.168485, 41.361745], [2.168526, 41.361775], [2.16855, 41.361793], [2.168573, 41.361811], [2.16862, 41.361848], [2.168666, 41.361885], [2.168712, 41.361921], [2.168743, 41.361946], [2.168766, 41.361965], [2.168788, 41.361984], [2.168833, 41.362022], [2.168864, 41.362049], [2.168895, 41.362076], [2.168915, 41.362094], [2.168936, 41.362113], [2.168956, 41.362132], [2.168996, 41.36217], [2.169031, 41.362205], [2.169065, 41.362239], [2.169097, 41.362271], [2.169129, 41.362304], [2.169149, 41.362325], [2.169168, 41.362346], [2.169187, 41.362366], [2.169223, 41.362407], [2.169258, 41.362446], [2.169292, 41.362486], [2.169329, 41.362531], [2.169342, 41.362547], [2.169366, 41.362576], [2.16939, 41.362605], [2.169413, 41.362635], [2.169429, 41.362655], [2.169458, 41.362693], [2.169487, 41.362731], [2.169523, 41.362778], [2.169559, 41.362824], [2.16958, 41.362853], [2.169601, 41.362881], [2.169643, 41.362938], [2.169682, 41.36299], [2.169719, 41.363043], [2.169755, 41.363092], [2.169791, 41.363142], [2.169833, 41.363197], [2.169874, 41.363253], [2.169926, 41.363322], [2.169977, 41.363392], [2.170012, 41.363437], [2.170045, 41.363483], [2.170078, 41.363528], [2.170111, 41.363574], [2.170133, 41.363604], [2.17016, 41.363639], [2.170187, 41.363674], [2.170204, 41.363698], [2.170237, 41.363741], [2.170269, 41.363785], [2.170299, 41.363825], [2.170329, 41.363866], [2.17036, 41.363908], [2.17039, 41.36395], [2.170421, 41.363992], [2.170452, 41.364034], [2.170484, 41.364077], [2.170516, 41.36412], [2.170543, 41.364158], [2.170572, 41.364195], [2.17059, 41.36422], [2.170629, 41.364273], [2.170668, 41.364327], [2.170702, 41.364373], [2.170736, 41.36442], [2.170772, 41.364468], [2.170807, 41.364515], [2.170846, 41.364567], [2.170884, 41.364619], [2.170913, 41.364659], [2.170941, 41.364698], [2.170955, 41.364717], [2.170965, 41.364732], [2.170989, 41.364765], [2.171019, 41.364808], [2.171049, 41.36485], [2.171081, 41.364896], [2.171113, 41.364942], [2.171134, 41.364972], [2.171155, 41.365003], [2.171168, 41.365023], [2.171194, 41.365064], [2.171219, 41.365105], [2.17125, 41.365153], [2.171281, 41.365202], [2.171296, 41.365225], [2.17131, 41.365249], [2.171337, 41.365296], [2.171357, 41.365329], [2.171376, 41.365363], [2.171388, 41.365385], [2.17141, 41.365426], [2.171432, 41.365467], [2.171456, 41.36551], [2.171479, 41.365554], [2.171507, 41.365605], [2.171534, 41.365656], [2.171566, 41.365715], [2.171598, 41.365774]]]]
    },
    "properties": {
      "neighbourhood": "la Marina del Prat Vermell",
      "neighbourhood_group": "Sants-Montjuïc"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.148828, 41.36955], [2.148776, 41.369528], [2.148688, 41.369502], [2.148594, 41.369479], [2.148488, 41.369464], [2.148386, 41.369457], [2.148375, 41.369456], [2.148241, 41.369454], [2.148135, 41.369462], [2.148024, 41.369474], [2.147889, 41.369487], [2.147796, 41.369499], [2.147648, 41.369517], [2.147495, 41.369528], [2.147382, 41.369533], [2.147269, 41.369535], [2.147163, 41.369533], [2.147039, 41.369528], [2.14693, 41.369515], [2.146853, 41.369503], [2.146799, 41.369494], [2.146505, 41.369441], [2.146339, 41.369387], [2.146169, 41.36932], [2.146011, 41.369251], [2.145974, 41.369232], [2.145678, 41.369039], [2.145675, 41.369036], [2.145656, 41.36902], [2.145629, 41.368994], [2.145585, 41.368952], [2.145559, 41.368924], [2.145526, 41.368887], [2.145497, 41.368853], [2.145467, 41.368812], [2.145446, 41.36878], [2.145427, 41.368749], [2.145411, 41.368719], [2.145398, 41.368694], [2.145389, 41.368669], [2.14538, 41.368643], [2.145372, 41.368615], [2.145349, 41.36855], [2.145277, 41.368507], [2.144733, 41.36824], [2.144686, 41.368217], [2.144651, 41.368202], [2.143804, 41.367804], [2.143739, 41.367774], [2.143667, 41.367729], [2.143598, 41.367681], [2.143531, 41.36763], [2.143469, 41.367577], [2.143411, 41.367523], [2.143387, 41.367492], [2.143364, 41.367459], [2.143344, 41.367426], [2.143327, 41.367391], [2.143312, 41.367356], [2.1433, 41.367321], [2.143292, 41.367284], [2.143283, 41.36723], [2.143281, 41.367192], [2.143284, 41.367169], [2.143193, 41.367163], [2.14316, 41.367149], [2.143139, 41.367118], [2.143124, 41.367093], [2.143043, 41.366943], [2.142981, 41.36683], [2.142938, 41.366717], [2.142929, 41.366693], [2.142849, 41.366717], [2.142847, 41.366717], [2.142829, 41.36672], [2.142827, 41.366717], [2.142515, 41.366298], [2.142337, 41.366059], [2.14216, 41.366072], [2.142045, 41.366082], [2.142022, 41.366219], [2.141994, 41.366425], [2.141965, 41.366634], [2.141847, 41.366554], [2.141775, 41.366561], [2.141758, 41.366495], [2.141745, 41.366427], [2.141726, 41.366365], [2.141665, 41.366252], [2.141621, 41.366196], [2.141561, 41.366137], [2.141458, 41.366062], [2.141396, 41.366029], [2.141311, 41.365994], [2.141239, 41.36597], [2.141172, 41.365956], [2.141092, 41.365941], [2.141015, 41.365935], [2.139597, 41.36589], [2.140132, 41.367301], [2.139497, 41.367789], [2.140941, 41.368865], [2.142119, 41.369744], [2.142362, 41.369925], [2.143898, 41.371089], [2.144771, 41.37175], [2.146191, 41.372826], [2.146784, 41.373276], [2.146778, 41.373358], [2.147254, 41.373718], [2.148526, 41.372762], [2.150125, 41.37156], [2.150451, 41.371314], [2.149836, 41.371063], [2.149715, 41.371004], [2.149627, 41.370935], [2.149594, 41.3709], [2.149551, 41.370839], [2.14952, 41.37077], [2.149507, 41.370706], [2.149493, 41.370655], [2.149477, 41.370592], [2.149464, 41.370532], [2.149453, 41.370479], [2.149427, 41.370365], [2.149404, 41.370273], [2.149375, 41.370175], [2.149355, 41.370099], [2.14932, 41.370004], [2.149289, 41.369938], [2.149242, 41.36986], [2.149217, 41.369828], [2.149182, 41.369783], [2.149124, 41.369731], [2.149029, 41.36966], [2.148965, 41.369618], [2.148888, 41.369578], [2.148828, 41.36955]]]]
    },
    "properties": {
      "neighbourhood": "la Font de la Guatlla",
      "neighbourhood_group": "Sants-Montjuïc"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.145292, 41.378576], [2.14579, 41.378156], [2.145969, 41.378018], [2.147102, 41.377168], [2.148273, 41.376291], [2.148935, 41.375794], [2.149066, 41.375722], [2.149085, 41.37571], [2.148465, 41.375242], [2.148552, 41.374702], [2.147597, 41.373977], [2.147254, 41.373718], [2.146778, 41.373358], [2.146784, 41.373276], [2.146191, 41.372826], [2.144771, 41.37175], [2.143898, 41.371089], [2.142362, 41.369925], [2.142395, 41.370706], [2.142429, 41.371504], [2.142434, 41.371626], [2.142456, 41.372091], [2.142463, 41.372236], [2.14248, 41.372731], [2.14196, 41.372492], [2.14147, 41.372891], [2.141485, 41.373828], [2.141151, 41.373833], [2.1411, 41.373963], [2.141094, 41.373978], [2.141088, 41.373992], [2.141083, 41.374007], [2.141077, 41.374022], [2.141073, 41.374035], [2.141068, 41.374048], [2.141064, 41.37406], [2.141059, 41.374075], [2.141057, 41.374081], [2.14104, 41.37413], [2.141027, 41.374184], [2.141025, 41.374193], [2.141022, 41.374206], [2.14102, 41.374217], [2.141017, 41.374229], [2.141015, 41.374239], [2.141013, 41.374252], [2.141012, 41.374261], [2.141009, 41.37428], [2.141009, 41.37429], [2.141008, 41.374299], [2.141008, 41.374309], [2.141008, 41.374318], [2.141008, 41.374325], [2.141009, 41.37434], [2.141011, 41.374355], [2.141014, 41.374368], [2.141019, 41.37439], [2.141023, 41.374405], [2.141024, 41.374416], [2.141041, 41.374512], [2.141054, 41.374587], [2.141076, 41.374836], [2.141061, 41.37489], [2.140891, 41.375052], [2.140854, 41.375201], [2.140853, 41.375204], [2.140841, 41.37533], [2.140467, 41.375336], [2.140497, 41.376129], [2.140507, 41.376523], [2.142294, 41.376662], [2.142289, 41.37669], [2.142138, 41.376838], [2.141979, 41.376981], [2.141839, 41.376982], [2.141852, 41.378448], [2.141992, 41.378447], [2.142043, 41.378445], [2.142052, 41.378444], [2.142054, 41.378458], [2.142055, 41.378463], [2.142058, 41.378471], [2.142062, 41.378483], [2.142069, 41.378494], [2.142078, 41.378505], [2.142089, 41.378517], [2.142101, 41.378529], [2.142115, 41.378541], [2.142135, 41.378555], [2.142178, 41.378582], [2.142222, 41.378609], [2.142271, 41.378638], [2.14231, 41.378658], [2.142424, 41.37872], [2.142387, 41.378756], [2.142102, 41.379032], [2.142178, 41.379719], [2.142992, 41.380317], [2.143018, 41.380295], [2.143026, 41.380286], [2.143942, 41.379573], [2.144901, 41.378856], [2.145292, 41.378576]]]]
    },
    "properties": {
      "neighbourhood": "Hostafrancs",
      "neighbourhood_group": "Sants-Montjuïc"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.14147, 41.372891], [2.14196, 41.372492], [2.14248, 41.372731], [2.142463, 41.372236], [2.142456, 41.372091], [2.142434, 41.371626], [2.142429, 41.371504], [2.142395, 41.370706], [2.142362, 41.369925], [2.142119, 41.369744], [2.140941, 41.368865], [2.139497, 41.367789], [2.137678, 41.366426], [2.135827, 41.365046], [2.13553, 41.364778], [2.13384, 41.363496], [2.133573, 41.363705], [2.132822, 41.365277], [2.132706, 41.365694], [2.132687, 41.365861], [2.132324, 41.366388], [2.132073, 41.366753], [2.131694, 41.367826], [2.131499, 41.368183], [2.131471, 41.368233], [2.131462, 41.36825], [2.131383, 41.368552], [2.131303, 41.368552], [2.131038, 41.368979], [2.130771, 41.369311], [2.130653, 41.369489], [2.130262, 41.369897], [2.129992, 41.370128], [2.129971, 41.370145], [2.130055, 41.370161], [2.130212, 41.370278], [2.130552, 41.370574], [2.131014, 41.37097], [2.131269, 41.371207], [2.131708, 41.371704], [2.13175, 41.371591], [2.131838, 41.371358], [2.131855, 41.371313], [2.131895, 41.371236], [2.131918, 41.371166], [2.131987, 41.370974], [2.131998, 41.370945], [2.131998, 41.370933], [2.131999, 41.370921], [2.131999, 41.37091], [2.132, 41.3709], [2.132001, 41.370885], [2.132004, 41.370868], [2.132004, 41.370866], [2.133297, 41.37114], [2.133637, 41.371212], [2.13405, 41.371179], [2.134582, 41.371127], [2.134699, 41.371075], [2.135254, 41.371115], [2.135345, 41.371122], [2.135938, 41.371313], [2.137124, 41.371699], [2.138071, 41.372011], [2.137879, 41.372373], [2.138695, 41.372646], [2.139488, 41.372912], [2.139822, 41.373023], [2.140426, 41.373224], [2.140276, 41.373773], [2.14035, 41.373845], [2.141151, 41.373833], [2.141485, 41.373828], [2.14147, 41.372891]]]]
    },
    "properties": {
      "neighbourhood": "la Bordeta",
      "neighbourhood_group": "Sants-Montjuïc"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.130325, 41.376064], [2.130457, 41.375546], [2.130987, 41.37416], [2.131282, 41.373366], [2.131408, 41.373027], [2.13149, 41.372779], [2.131702, 41.372141], [2.131781, 41.371903], [2.131708, 41.371704], [2.131269, 41.371207], [2.131014, 41.37097], [2.130552, 41.370574], [2.130212, 41.370278], [2.130055, 41.370161], [2.129971, 41.370145], [2.129528, 41.370511], [2.129585, 41.370555], [2.129389, 41.370696], [2.129111, 41.370885], [2.129054, 41.370866], [2.128873, 41.370971], [2.128891, 41.37101], [2.128561, 41.371116], [2.128117, 41.371284], [2.127599, 41.371571], [2.127398, 41.371666], [2.127114, 41.371799], [2.127165, 41.371834], [2.126811, 41.37207], [2.12651, 41.372288], [2.12644, 41.372278], [2.126341, 41.372357], [2.126191, 41.372473], [2.125395, 41.37303], [2.125074, 41.373222], [2.124984, 41.373262], [2.124363, 41.3736], [2.12429, 41.373645], [2.124044, 41.374082], [2.123964, 41.374112], [2.123754, 41.374398], [2.123805, 41.374438], [2.123475, 41.374754], [2.123331, 41.374834], [2.12229, 41.375334], [2.121915, 41.375619], [2.121862, 41.37568], [2.121838, 41.375761], [2.122832, 41.375713], [2.123747, 41.37629], [2.124727, 41.376904], [2.125301, 41.377244], [2.125756, 41.377513], [2.126264, 41.377822], [2.126983, 41.378257], [2.127339, 41.378435], [2.127539, 41.378539], [2.129141, 41.379455], [2.129157, 41.379465], [2.12916, 41.379466], [2.129315, 41.378877], [2.129456, 41.378464], [2.129509, 41.378309], [2.12964, 41.377944], [2.129893, 41.377241], [2.12999, 41.376977], [2.13018, 41.376458], [2.130325, 41.376064]]]]
    },
    "properties": {
      "neighbourhood": "Sants - Badal",
      "neighbourhood_group": "Sants-Montjuïc"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.142054, 41.378458], [2.142052, 41.378444], [2.142043, 41.378445], [2.141992, 41.378447], [2.141852, 41.378448], [2.141839, 41.376982], [2.141979, 41.376981], [2.142138, 41.376838], [2.142289, 41.37669], [2.142294, 41.376662], [2.140507, 41.376523], [2.140497, 41.376129], [2.140467, 41.375336], [2.140841, 41.37533], [2.140853, 41.375204], [2.140854, 41.375201], [2.140891, 41.375052], [2.141061, 41.37489], [2.141076, 41.374836], [2.141054, 41.374587], [2.141041, 41.374512], [2.141024, 41.374416], [2.141023, 41.374405], [2.141019, 41.37439], [2.141014, 41.374368], [2.141011, 41.374355], [2.141009, 41.37434], [2.141008, 41.374325], [2.141008, 41.374318], [2.141008, 41.374309], [2.141008, 41.374299], [2.141009, 41.37429], [2.141009, 41.37428], [2.141012, 41.374261], [2.141013, 41.374252], [2.141015, 41.374239], [2.141017, 41.374229], [2.14102, 41.374217], [2.141022, 41.374206], [2.141025, 41.374193], [2.141027, 41.374184], [2.14104, 41.37413], [2.141057, 41.374081], [2.141059, 41.374075], [2.141064, 41.37406], [2.141068, 41.374048], [2.141073, 41.374035], [2.141077, 41.374022], [2.141083, 41.374007], [2.141088, 41.373992], [2.141094, 41.373978], [2.1411, 41.373963], [2.141151, 41.373833], [2.14035, 41.373845], [2.140276, 41.373773], [2.140426, 41.373224], [2.139822, 41.373023], [2.139488, 41.372912], [2.138695, 41.372646], [2.137879, 41.372373], [2.138071, 41.372011], [2.137124, 41.371699], [2.135938, 41.371313], [2.135345, 41.371122], [2.135254, 41.371115], [2.134699, 41.371075], [2.134582, 41.371127], [2.13405, 41.371179], [2.133637, 41.371212], [2.133297, 41.37114], [2.132004, 41.370866], [2.132004, 41.370868], [2.132001, 41.370885], [2.132, 41.3709], [2.131999, 41.37091], [2.131999, 41.370921], [2.131998, 41.370933], [2.131998, 41.370945], [2.131987, 41.370974], [2.131918, 41.371166], [2.131895, 41.371236], [2.131855, 41.371313], [2.131838, 41.371358], [2.13175, 41.371591], [2.131708, 41.371704], [2.131781, 41.371903], [2.131702, 41.372141], [2.13149, 41.372779], [2.131408, 41.373027], [2.131282, 41.373366], [2.130987, 41.37416], [2.130457, 41.375546], [2.130325, 41.376064], [2.13018, 41.376458], [2.12999, 41.376977], [2.129893, 41.377241], [2.12964, 41.377944], [2.129509, 41.378309], [2.129456, 41.378464], [2.129315, 41.378877], [2.12916, 41.379466], [2.129427, 41.379617], [2.129914, 41.379853], [2.130222, 41.380002], [2.130732, 41.380233], [2.131428, 41.380556], [2.13175, 41.380681], [2.13241, 41.380857], [2.133572, 41.381173], [2.135495, 41.38183], [2.136209, 41.382079], [2.136286, 41.382114], [2.137591, 41.382608], [2.138225, 41.382852], [2.139069, 41.383248], [2.140262, 41.383927], [2.140348, 41.383991], [2.141746, 41.384949], [2.142206, 41.385292], [2.142397, 41.385396], [2.142646, 41.385503], [2.142554, 41.3841], [2.142542, 41.383916], [2.142437, 41.382422], [2.142417, 41.382091], [2.142342, 41.380873], [2.142563, 41.380684], [2.142992, 41.380317], [2.142178, 41.379719], [2.142102, 41.379032], [2.142387, 41.378756], [2.142424, 41.37872], [2.14231, 41.378658], [2.142271, 41.378638], [2.142222, 41.378609], [2.142178, 41.378582], [2.142135, 41.378555], [2.142115, 41.378541], [2.142101, 41.378529], [2.142089, 41.378517], [2.142078, 41.378505], [2.142069, 41.378494], [2.142062, 41.378483], [2.142058, 41.378471], [2.142055, 41.378463], [2.142054, 41.378458]]]]
    },
    "properties": {
      "neighbourhood": "Sants",
      "neighbourhood_group": "Sants-Montjuïc"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.137593, 41.391431], [2.138341, 41.391284], [2.139331, 41.391511], [2.141871, 41.392124], [2.142827, 41.39235], [2.144034, 41.392644], [2.144397, 41.392415], [2.143958, 41.391478], [2.143684, 41.390717], [2.14364, 41.390526], [2.14364, 41.390525], [2.143525, 41.390112], [2.143318, 41.389231], [2.143058, 41.388261], [2.142942, 41.387642], [2.142769, 41.386635], [2.142663, 41.385682], [2.142646, 41.385503], [2.142397, 41.385396], [2.142206, 41.385292], [2.141746, 41.384949], [2.140348, 41.383991], [2.140262, 41.383927], [2.139069, 41.383248], [2.138225, 41.382852], [2.137591, 41.382608], [2.136286, 41.382114], [2.136209, 41.382079], [2.135495, 41.38183], [2.133572, 41.381173], [2.13241, 41.380857], [2.13175, 41.380681], [2.131428, 41.380556], [2.130732, 41.380233], [2.130222, 41.380002], [2.129914, 41.379853], [2.129427, 41.379617], [2.12916, 41.379466], [2.129157, 41.379465], [2.128836, 41.380416], [2.128806, 41.380507], [2.128576, 41.381161], [2.128205, 41.382186], [2.128133, 41.382415], [2.127693, 41.383801], [2.127388, 41.384763], [2.127321, 41.384992], [2.127315, 41.385025], [2.127295, 41.385145], [2.127248, 41.385425], [2.127239, 41.38546], [2.127187, 41.385924], [2.127176, 41.386279], [2.127174, 41.386313], [2.12717, 41.386501], [2.127169, 41.386522], [2.127175, 41.386733], [2.127176, 41.386793], [2.127181, 41.386945], [2.127185, 41.387011], [2.127199, 41.387216], [2.127202, 41.387251], [2.12721, 41.387343], [2.12722, 41.387408], [2.12719, 41.387868], [2.126955, 41.388183], [2.126941, 41.388239], [2.126809, 41.388763], [2.127645, 41.389013], [2.127825, 41.389533], [2.127874, 41.38967], [2.127904, 41.389748], [2.127947, 41.389855], [2.128408, 41.390818], [2.128812, 41.391511], [2.128954, 41.391749], [2.128965, 41.391764], [2.128987, 41.391796], [2.128998, 41.391812], [2.12901, 41.391827], [2.129034, 41.391858], [2.129046, 41.391874], [2.129058, 41.391889], [2.129084, 41.39192], [2.129097, 41.391935], [2.12911, 41.391949], [2.129124, 41.391964], [2.129137, 41.391979], [2.129151, 41.391993], [2.129165, 41.392008], [2.129179, 41.392023], [2.129208, 41.392051], [2.129223, 41.392065], [2.129237, 41.392079], [2.129253, 41.392093], [2.129268, 41.392107], [2.129284, 41.392121], [2.129299, 41.392134], [2.129331, 41.392161], [2.129348, 41.392174], [2.12962, 41.392361], [2.129604, 41.392395], [2.129598, 41.392412], [2.129595, 41.392429], [2.129591, 41.392537], [2.129778, 41.392588], [2.129962, 41.39257], [2.130648, 41.392503], [2.131752, 41.392336], [2.132499, 41.392224], [2.134847, 41.39187], [2.13645, 41.391614], [2.137593, 41.391431]]]]
    },
    "properties": {
      "neighbourhood": "les Corts",
      "neighbourhood_group": "Les Corts"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.127248, 41.385425], [2.127295, 41.385145], [2.127315, 41.385025], [2.127321, 41.384992], [2.127388, 41.384763], [2.127693, 41.383801], [2.128133, 41.382415], [2.128205, 41.382186], [2.128576, 41.381161], [2.128806, 41.380507], [2.128836, 41.380416], [2.129157, 41.379465], [2.129141, 41.379455], [2.127539, 41.378539], [2.127339, 41.378435], [2.126983, 41.378257], [2.126264, 41.377822], [2.125756, 41.377513], [2.125301, 41.377244], [2.124727, 41.376904], [2.123747, 41.37629], [2.122832, 41.375713], [2.121838, 41.375761], [2.121802, 41.375879], [2.121785, 41.376554], [2.121786, 41.377115], [2.121806, 41.377323], [2.121792, 41.377478], [2.121793, 41.377517], [2.12172, 41.377737], [2.121578, 41.378056], [2.121475, 41.378012], [2.121457, 41.378002], [2.119714, 41.37698], [2.118832, 41.376444], [2.117865, 41.375857], [2.117366, 41.375851], [2.116912, 41.375867], [2.114255, 41.375926], [2.113215, 41.375951], [2.1124, 41.375954], [2.109288, 41.376012], [2.109308, 41.376559], [2.109273, 41.377149], [2.108781, 41.377862], [2.108667, 41.377978], [2.108594, 41.378002], [2.108481, 41.378004], [2.108427, 41.377992], [2.108367, 41.378011], [2.108322, 41.378031], [2.108295, 41.378062], [2.10825, 41.378151], [2.10821, 41.378249], [2.107988, 41.378392], [2.107691, 41.378547], [2.107147, 41.378738], [2.106982, 41.378782], [2.106504, 41.378849], [2.106343, 41.378911], [2.106209, 41.378997], [2.106111, 41.37904], [2.106046, 41.379079], [2.105985, 41.379142], [2.105938, 41.379206], [2.10581, 41.379387], [2.105737, 41.379454], [2.105677, 41.379478], [2.104947, 41.379472], [2.104766, 41.379453], [2.104609, 41.379481], [2.104179, 41.379715], [2.103731, 41.379988], [2.102552, 41.380699], [2.102168, 41.380897], [2.101881, 41.381155], [2.101556, 41.381741], [2.101541, 41.381775], [2.103677, 41.382288], [2.106651, 41.383006], [2.110975, 41.38421], [2.112068, 41.384514], [2.1132, 41.384829], [2.114204, 41.385087], [2.114919, 41.385266], [2.114922, 41.385259], [2.120817, 41.386691], [2.122052, 41.387004], [2.125357, 41.387839], [2.126941, 41.388239], [2.126955, 41.388183], [2.12719, 41.387868], [2.12722, 41.387408], [2.12721, 41.387343], [2.127202, 41.387251], [2.127199, 41.387216], [2.127185, 41.387011], [2.127181, 41.386945], [2.127176, 41.386793], [2.127175, 41.386733], [2.127169, 41.386522], [2.12717, 41.386501], [2.127174, 41.386313], [2.127176, 41.386279], [2.127187, 41.385924], [2.127239, 41.38546], [2.127248, 41.385425]]]]
    },
    "properties": {
      "neighbourhood": "la Maternitat i Sant Ramon",
      "neighbourhood_group": "Les Corts"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.169952, 41.407958], [2.16867, 41.406996], [2.167818, 41.407622], [2.16715, 41.408119], [2.166505, 41.408599], [2.165888, 41.409065], [2.165172, 41.409603], [2.164423, 41.410181], [2.164293, 41.410345], [2.163916, 41.410528], [2.163503, 41.410934], [2.162654, 41.411962], [2.162342, 41.412358], [2.162066, 41.412631], [2.162032, 41.412673], [2.161317, 41.413529], [2.161332, 41.413643], [2.161408, 41.413732], [2.162377, 41.414134], [2.162747, 41.414271], [2.163474, 41.41449], [2.164168, 41.414654], [2.164279, 41.414673], [2.164866, 41.414774], [2.165583, 41.414868], [2.16582, 41.414906], [2.16631, 41.414984], [2.166837, 41.415262], [2.167312, 41.415483], [2.167409, 41.415528], [2.167799, 41.415694], [2.167846, 41.415714], [2.167894, 41.415732], [2.16794, 41.415747], [2.167981, 41.415759], [2.168008, 41.415767], [2.168044, 41.415773], [2.168077, 41.415779], [2.16811, 41.415783], [2.168139, 41.415785], [2.16817, 41.415787], [2.168181, 41.415787], [2.168195, 41.415788], [2.168225, 41.415787], [2.168253, 41.415785], [2.168294, 41.415782], [2.1684, 41.415772], [2.168651, 41.415726], [2.168811, 41.415696], [2.16891, 41.415681], [2.168936, 41.415677], [2.168954, 41.415675], [2.168978, 41.415673], [2.169104, 41.415669], [2.169227, 41.415652], [2.169267, 41.415637], [2.169301, 41.415614], [2.169323, 41.415595], [2.169339, 41.415576], [2.169358, 41.415546], [2.169365, 41.41552], [2.169371, 41.415486], [2.169339, 41.415404], [2.169337, 41.415389], [2.169333, 41.415341], [2.169333, 41.415293], [2.169338, 41.415245], [2.169347, 41.415198], [2.16936, 41.415151], [2.169372, 41.415119], [2.169385, 41.415087], [2.1694, 41.415055], [2.169417, 41.415025], [2.169436, 41.414994], [2.169456, 41.414965], [2.169481, 41.414933], [2.169507, 41.414902], [2.169536, 41.414872], [2.169566, 41.414844], [2.169599, 41.414816], [2.169856, 41.41462], [2.170103, 41.414433], [2.170963, 41.413778], [2.171268, 41.413546], [2.173034, 41.412203], [2.174305, 41.411236], [2.17322, 41.410424], [2.172102, 41.409579], [2.171001, 41.408757], [2.169952, 41.407958]]]]
    },
    "properties": {
      "neighbourhood": "el Baix Guinardó",
      "neighbourhood_group": "Horta-Guinardó"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.102776, 41.401117], [2.102857, 41.401113], [2.102932, 41.401125], [2.102965, 41.401132], [2.102995, 41.401135], [2.103027, 41.401134], [2.10308, 41.401124], [2.103107, 41.401121], [2.103138, 41.401119], [2.103167, 41.40112], [2.103198, 41.401126], [2.103238, 41.401132], [2.103347, 41.401145], [2.103436, 41.401133], [2.103534, 41.401117], [2.103628, 41.401096], [2.103703, 41.401077], [2.103792, 41.401054], [2.103857, 41.401036], [2.104017, 41.400987], [2.104416, 41.40086], [2.104607, 41.4008], [2.104932, 41.400713], [2.105336, 41.400676], [2.105368, 41.400667], [2.10544, 41.400645], [2.10546, 41.400634], [2.105478, 41.400618], [2.105497, 41.400601], [2.10552, 41.400559], [2.105533, 41.400541], [2.105551, 41.400521], [2.105571, 41.400505], [2.10559, 41.400493], [2.105609, 41.400484], [2.105628, 41.400476], [2.105647, 41.400473], [2.105663, 41.400475], [2.105683, 41.400478], [2.105703, 41.400478], [2.105723, 41.400469], [2.105744, 41.400461], [2.105825, 41.400438], [2.105849, 41.400427], [2.105901, 41.400402], [2.105926, 41.400391], [2.105941, 41.400388], [2.105963, 41.400386], [2.105984, 41.400376], [2.10603, 41.40036], [2.106047, 41.40035], [2.106065, 41.400334], [2.106295, 41.400244], [2.10635, 41.400229], [2.106379, 41.400221], [2.106415, 41.400206], [2.10646, 41.400183], [2.106486, 41.400173], [2.106499, 41.400167], [2.106542, 41.400159], [2.106556, 41.400149], [2.106582, 41.400139], [2.106625, 41.400113], [2.106678, 41.400094], [2.106708, 41.400079], [2.106729, 41.400065], [2.10675, 41.400046], [2.106762, 41.400031], [2.106777, 41.400018], [2.106808, 41.399998], [2.106823, 41.399983], [2.106841, 41.39997], [2.106923, 41.399932], [2.106971, 41.399903], [2.106981, 41.399897], [2.106998, 41.39989], [2.107024, 41.39988], [2.107078, 41.399852], [2.107096, 41.39984], [2.107114, 41.399823], [2.107126, 41.399799], [2.107151, 41.399775], [2.10717, 41.399743], [2.107193, 41.399704], [2.107211, 41.399686], [2.107223, 41.399669], [2.107232, 41.399653], [2.107238, 41.399631], [2.107244, 41.399598], [2.107256, 41.399579], [2.107285, 41.39953], [2.107298, 41.399507], [2.107312, 41.399487], [2.107323, 41.399464], [2.107335, 41.399448], [2.107358, 41.399433], [2.107384, 41.399419], [2.107422, 41.399399], [2.107487, 41.399361], [2.107531, 41.39934], [2.107556, 41.399329], [2.107631, 41.399307], [2.107673, 41.399294], [2.10773, 41.399285], [2.10776, 41.399274], [2.107784, 41.399261], [2.108206, 41.39887], [2.108276, 41.398714], [2.108291, 41.398688], [2.108306, 41.398675], [2.108323, 41.398663], [2.108353, 41.398645], [2.108369, 41.398637], [2.108445, 41.398596], [2.108669, 41.398481], [2.108768, 41.398342], [2.108744, 41.398323], [2.10873, 41.39831], [2.108722, 41.39828], [2.108731, 41.398226], [2.108794, 41.398077], [2.108809, 41.39804], [2.108896, 41.39786], [2.108914, 41.397818], [2.108976, 41.39772], [2.10899, 41.397692], [2.108991, 41.397664], [2.108978, 41.397633], [2.108969, 41.397618], [2.108966, 41.397607], [2.108967, 41.397597], [2.108971, 41.397585], [2.109021, 41.397498], [2.109029, 41.39749], [2.109043, 41.397474], [2.10907, 41.397448], [2.109168, 41.397374], [2.109238, 41.397329], [2.109261, 41.397315], [2.109283, 41.397299], [2.109308, 41.397275], [2.109336, 41.39724], [2.10935, 41.397213], [2.109355, 41.397169], [2.109369, 41.397043], [2.109599, 41.396788], [2.109855, 41.396191], [2.110288, 41.395868], [2.110495, 41.395839], [2.110614, 41.395844], [2.11116, 41.395945], [2.111837, 41.396288], [2.112164, 41.396516], [2.112709, 41.397026], [2.113165, 41.397278], [2.114409, 41.396573], [2.114711, 41.396406], [2.115828, 41.395801], [2.116508, 41.395597], [2.116943, 41.395515], [2.117305, 41.395409], [2.117607, 41.395264], [2.117898, 41.395087], [2.118108, 41.394863], [2.118266, 41.394655], [2.118403, 41.394407], [2.118459, 41.394112], [2.118436, 41.393482], [2.118348, 41.393131], [2.118156, 41.39285], [2.117982, 41.392626], [2.117553, 41.392216], [2.117778, 41.392058], [2.118235, 41.391878], [2.118703, 41.391778], [2.119575, 41.391514], [2.11983, 41.391404], [2.119904, 41.391359], [2.120055, 41.391278], [2.1204, 41.390976], [2.120515, 41.390875], [2.120634, 41.390716], [2.1207, 41.390541], [2.120808, 41.390359], [2.120928, 41.390112], [2.121801, 41.390453], [2.122572, 41.390747], [2.123025, 41.390878], [2.123132, 41.39089], [2.123216, 41.390896], [2.123892, 41.391065], [2.125615, 41.391504], [2.127065, 41.39188], [2.129407, 41.392487], [2.129591, 41.392537], [2.129595, 41.392429], [2.129598, 41.392412], [2.129604, 41.392395], [2.12962, 41.392361], [2.129348, 41.392174], [2.129331, 41.392161], [2.129299, 41.392134], [2.129284, 41.392121], [2.129268, 41.392107], [2.129253, 41.392093], [2.129237, 41.392079], [2.129223, 41.392065], [2.129208, 41.392051], [2.129179, 41.392023], [2.129165, 41.392008], [2.129151, 41.391993], [2.129137, 41.391979], [2.129124, 41.391964], [2.12911, 41.391949], [2.129097, 41.391935], [2.129084, 41.39192], [2.129058, 41.391889], [2.129046, 41.391874], [2.129034, 41.391858], [2.12901, 41.391827], [2.128998, 41.391812], [2.128987, 41.391796], [2.128965, 41.391764], [2.128954, 41.391749], [2.128812, 41.391511], [2.128408, 41.390818], [2.127947, 41.389855], [2.127904, 41.389748], [2.127874, 41.38967], [2.127825, 41.389533], [2.127645, 41.389013], [2.126809, 41.388763], [2.126941, 41.388239], [2.125357, 41.387839], [2.122052, 41.387004], [2.120817, 41.386691], [2.114922, 41.385259], [2.114919, 41.385266], [2.114204, 41.385087], [2.1132, 41.384829], [2.112068, 41.384514], [2.110975, 41.38421], [2.106651, 41.383006], [2.103677, 41.382288], [2.101541, 41.381775], [2.101489, 41.381944], [2.101496, 41.382153], [2.101696, 41.383605], [2.102399, 41.383644], [2.102632, 41.383751], [2.102905, 41.383981], [2.103142, 41.384211], [2.103217, 41.384285], [2.103287, 41.384352], [2.103388, 41.384408], [2.103583, 41.384716], [2.103591, 41.384771], [2.103491, 41.384872], [2.103315, 41.384989], [2.103295, 41.385004], [2.103287, 41.385017], [2.103277, 41.385102], [2.10317, 41.385141], [2.103077, 41.38516], [2.103059, 41.385166], [2.103049, 41.385172], [2.103026, 41.385192], [2.10301, 41.385211], [2.103003, 41.385228], [2.102992, 41.385284], [2.10294, 41.385306], [2.102875, 41.38534], [2.102851, 41.385359], [2.102846, 41.385377], [2.102835, 41.385466], [2.10275, 41.38552], [2.102768, 41.385567], [2.102685, 41.385621], [2.102661, 41.385714], [2.102557, 41.38573], [2.102441, 41.385774], [2.102358, 41.385861], [2.102366, 41.385931], [2.10233, 41.385969], [2.102299, 41.386017], [2.102265, 41.386042], [2.102175, 41.386067], [2.101998, 41.386184], [2.101963, 41.386221], [2.101876, 41.386326], [2.101632, 41.386544], [2.101518, 41.386599], [2.101351, 41.386757], [2.101012, 41.387002], [2.101075, 41.38706], [2.101127, 41.387092], [2.101226, 41.387142], [2.101427, 41.387223], [2.101608, 41.387272], [2.102059, 41.387372], [2.102139, 41.387414], [2.102133, 41.387431], [2.102014, 41.387474], [2.101916, 41.387494], [2.101806, 41.387544], [2.10151, 41.387769], [2.101343, 41.387875], [2.101128, 41.387923], [2.101048, 41.387933], [2.100777, 41.388036], [2.10052, 41.388247], [2.100408, 41.388619], [2.100274, 41.389011], [2.10024, 41.389088], [2.100218, 41.38917], [2.100103, 41.389932], [2.10006, 41.39004], [2.099985, 41.390292], [2.099934, 41.390623], [2.100001, 41.390853], [2.099945, 41.39105], [2.0999, 41.391212], [2.099906, 41.391285], [2.099885, 41.391651], [2.099919, 41.391943], [2.099821, 41.392097], [2.099535, 41.392357], [2.09919, 41.392797], [2.098989, 41.392948], [2.098844, 41.393045], [2.098613, 41.393144], [2.098386, 41.39319], [2.098048, 41.393285], [2.097978, 41.393361], [2.097937, 41.393423], [2.097891, 41.393813], [2.09789, 41.393984], [2.097972, 41.394087], [2.09803, 41.394164], [2.098206, 41.394317], [2.098314, 41.394465], [2.098431, 41.394695], [2.098492, 41.394933], [2.098648, 41.395084], [2.098777, 41.395187], [2.099039, 41.395395], [2.099043, 41.395578], [2.09902, 41.39576], [2.099218, 41.396057], [2.099386, 41.396278], [2.099612, 41.396437], [2.09978, 41.396608], [2.100012, 41.397006], [2.100106, 41.397359], [2.100179, 41.397469], [2.100344, 41.397771], [2.100432, 41.397927], [2.100466, 41.397988], [2.100503, 41.398517], [2.100523, 41.398579], [2.100824, 41.398749], [2.101108, 41.398902], [2.101507, 41.399041], [2.101643, 41.399137], [2.101805, 41.399307], [2.101965, 41.399392], [2.102088, 41.399485], [2.102176, 41.399613], [2.102178, 41.399945], [2.102382, 41.400297], [2.102535, 41.400551], [2.102594, 41.400682], [2.102554, 41.401079], [2.102562, 41.401151], [2.102619, 41.401152], [2.102776, 41.401117]]]]
    },
    "properties": {
      "neighbourhood": "Pedralbes",
      "neighbourhood_group": "Les Corts"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.078427, 41.414184], [2.078454, 41.414196], [2.078348, 41.414314], [2.078418, 41.414799], [2.078549, 41.4151], [2.078644, 41.415084], [2.079403, 41.415063], [2.079668, 41.415099], [2.079771, 41.415138], [2.079935, 41.41523], [2.080044, 41.415337], [2.080132, 41.415517], [2.080149, 41.415674], [2.080155, 41.415753], [2.080071, 41.415983], [2.079882, 41.416226], [2.079722, 41.416365], [2.079499, 41.416514], [2.079403, 41.416704], [2.079376, 41.416741], [2.079332, 41.416824], [2.079216, 41.416909], [2.079166, 41.41695], [2.079119, 41.417085], [2.07911, 41.417261], [2.078963, 41.417649], [2.078883, 41.417748], [2.078583, 41.417915], [2.078628, 41.418089], [2.078734, 41.418353], [2.07871, 41.418431], [2.078611, 41.418583], [2.077654, 41.418539], [2.07747, 41.418991], [2.077324, 41.419173], [2.076995, 41.419415], [2.076919, 41.419556], [2.076904, 41.419678], [2.076998, 41.420529], [2.077005, 41.4207], [2.077084, 41.420848], [2.077064, 41.420937], [2.076971, 41.421021], [2.076686, 41.42118], [2.076517, 41.421238], [2.075802, 41.421621], [2.075309, 41.421988], [2.074956, 41.422493], [2.075113, 41.422581], [2.075303, 41.422625], [2.075377, 41.422647], [2.075412, 41.422653], [2.075441, 41.422653], [2.075471, 41.422648], [2.075508, 41.42264], [2.075643, 41.422606], [2.075801, 41.422566], [2.075875, 41.422549], [2.07595, 41.422522], [2.076031, 41.422511], [2.076126, 41.42249], [2.076254, 41.422479], [2.076396, 41.422472], [2.076589, 41.422448], [2.076692, 41.422441], [2.076833, 41.422435], [2.077152, 41.422437], [2.07726, 41.422441], [2.077326, 41.422455], [2.077605, 41.422509], [2.077968, 41.422495], [2.078001, 41.422517], [2.07803, 41.422533], [2.078086, 41.422566], [2.078135, 41.422583], [2.078224, 41.422603], [2.07833, 41.422617], [2.078447, 41.422636], [2.07861, 41.422672], [2.078751, 41.422696], [2.078877, 41.422717], [2.078939, 41.422741], [2.079017, 41.422759], [2.079088, 41.422775], [2.07917, 41.4228], [2.079234, 41.422821], [2.079392, 41.422879], [2.079466, 41.422906], [2.079536, 41.422929], [2.079604, 41.422946], [2.079668, 41.42296], [2.07974, 41.422977], [2.079801, 41.422996], [2.079866, 41.423023], [2.079923, 41.423057], [2.079973, 41.42309], [2.08001, 41.423128], [2.080036, 41.423168], [2.080051, 41.423216], [2.080046, 41.423271], [2.080039, 41.423341], [2.080036, 41.423406], [2.080042, 41.423479], [2.08006, 41.423547], [2.080077, 41.423609], [2.080104, 41.423716], [2.080117, 41.423787], [2.080123, 41.423843], [2.080135, 41.423899], [2.080157, 41.423952], [2.080168, 41.424014], [2.080171, 41.424058], [2.080158, 41.424253], [2.080329, 41.42428], [2.080419, 41.424301], [2.080514, 41.424328], [2.080623, 41.424362], [2.080608, 41.424451], [2.080569, 41.424473], [2.080534, 41.424476], [2.080472, 41.424479], [2.080403, 41.42448], [2.080333, 41.42448], [2.080213, 41.424475], [2.080126, 41.424478], [2.080019, 41.424485], [2.079892, 41.424497], [2.079784, 41.424506], [2.079662, 41.424517], [2.079566, 41.424522], [2.079466, 41.424536], [2.079358, 41.424546], [2.079239, 41.424561], [2.079147, 41.424583], [2.079037, 41.424614], [2.078897, 41.424654], [2.078677, 41.424712], [2.078532, 41.424754], [2.078469, 41.424772], [2.07836, 41.424799], [2.078186, 41.42485], [2.078132, 41.424862], [2.077905, 41.424926], [2.077812, 41.424946], [2.077725, 41.424987], [2.077366, 41.425041], [2.077114, 41.425078], [2.076877, 41.425062], [2.076683, 41.425081], [2.076408, 41.425062], [2.07576, 41.424964], [2.075453, 41.425], [2.075282, 41.425025], [2.075143, 41.425023], [2.074596, 41.424842], [2.07421, 41.424848], [2.073858, 41.424896], [2.073516, 41.424975], [2.073304, 41.424997], [2.072656, 41.425124], [2.072721, 41.425544], [2.072774, 41.426101], [2.072825, 41.426158], [2.072926, 41.426255], [2.072949, 41.426316], [2.07293, 41.426469], [2.073052, 41.426932], [2.07318, 41.427269], [2.073192, 41.42744], [2.074804, 41.428167], [2.074952, 41.428231], [2.075279, 41.42832], [2.076611, 41.428698], [2.076601, 41.428718], [2.076133, 41.429045], [2.075998, 41.429165], [2.075896, 41.429244], [2.07576, 41.429378], [2.075598, 41.429519], [2.075434, 41.429616], [2.075058, 41.429769], [2.07487, 41.429842], [2.0746, 41.429951], [2.073934, 41.430388], [2.073599, 41.430478], [2.073148, 41.4307], [2.073046, 41.430812], [2.072697, 41.431313], [2.07262, 41.431493], [2.07239, 41.431864], [2.072183, 41.432067], [2.071512, 41.432917], [2.07136, 41.433193], [2.070964, 41.434399], [2.07101, 41.435027], [2.071745, 41.436331], [2.072466, 41.43682], [2.073249, 41.437193], [2.072625, 41.435353], [2.072853, 41.435111], [2.073316, 41.435187], [2.074224, 41.435399], [2.074615, 41.435538], [2.074831, 41.435411], [2.075247, 41.434414], [2.074964, 41.433667], [2.074944, 41.433471], [2.074957, 41.433371], [2.075188, 41.433088], [2.075415, 41.432956], [2.075622, 41.432919], [2.076453, 41.43294], [2.07681, 41.432848], [2.076951, 41.432787], [2.077253, 41.432531], [2.077589, 41.432316], [2.077904, 41.432149], [2.078215, 41.432074], [2.079591, 41.431955], [2.079796, 41.431934], [2.079982, 41.431908], [2.080152, 41.431817], [2.080253, 41.431642], [2.080277, 41.431442], [2.080245, 41.431279], [2.080232, 41.431222], [2.08018, 41.43105], [2.080194, 41.430937], [2.08033, 41.430822], [2.080536, 41.430736], [2.080863, 41.430664], [2.081115, 41.430688], [2.081227, 41.430723], [2.081245, 41.430794], [2.081165, 41.431069], [2.08115, 41.431267], [2.081201, 41.431389], [2.08138, 41.431496], [2.081439, 41.431599], [2.08148, 41.431703], [2.081531, 41.431776], [2.081696, 41.431884], [2.081866, 41.431946], [2.082133, 41.432008], [2.082352, 41.432008], [2.082499, 41.431943], [2.082608, 41.431852], [2.082699, 41.431687], [2.0827, 41.431617], [2.082681, 41.431585], [2.082514, 41.431348], [2.082497, 41.431241], [2.082587, 41.4309], [2.082668, 41.430795], [2.082882, 41.430791], [2.08312, 41.43082], [2.083545, 41.430934], [2.083679, 41.430951], [2.083864, 41.430933], [2.083978, 41.430899], [2.084058, 41.430838], [2.084116, 41.430797], [2.08413, 41.430756], [2.084124, 41.430706], [2.08408, 41.430641], [2.083863, 41.430454], [2.083771, 41.43034], [2.083737, 41.430215], [2.083767, 41.43014], [2.083919, 41.430015], [2.085508, 41.42926], [2.08561, 41.429192], [2.085644, 41.429161], [2.085701, 41.429028], [2.08577, 41.428958], [2.085848, 41.428933], [2.086283, 41.428955], [2.086772, 41.428948], [2.086873, 41.428936], [2.087149, 41.428846], [2.087503, 41.428797], [2.087566, 41.428766], [2.087603, 41.428735], [2.087651, 41.428641], [2.08796, 41.428328], [2.088153, 41.428233], [2.08833, 41.428198], [2.088786, 41.428543], [2.088843, 41.428615], [2.088862, 41.42866], [2.088985, 41.428769], [2.08929, 41.429201], [2.089572, 41.429089], [2.089683, 41.429074], [2.089983, 41.428924], [2.090147, 41.428807], [2.090551, 41.428629], [2.09098, 41.428977], [2.090986, 41.428963], [2.091001, 41.428982], [2.091044, 41.429094], [2.091058, 41.429155], [2.091107, 41.429196], [2.091253, 41.429231], [2.091266, 41.429219], [2.091428, 41.42925], [2.091498, 41.429386], [2.091763, 41.429498], [2.092032, 41.429551], [2.092289, 41.429623], [2.092332, 41.429752], [2.092453, 41.430109], [2.092533, 41.430229], [2.092672, 41.4303], [2.092793, 41.430452], [2.092858, 41.430513], [2.092953, 41.430716], [2.093046, 41.430765], [2.093161, 41.43086], [2.093366, 41.431044], [2.093599, 41.43124], [2.093716, 41.431437], [2.093949, 41.431709], [2.094092, 41.431964], [2.09418, 41.432142], [2.094401, 41.432433], [2.094432, 41.43249], [2.094626, 41.432628], [2.094693, 41.432742], [2.094945, 41.432802], [2.095219, 41.43286], [2.095356, 41.432891], [2.095391, 41.432953], [2.095845, 41.433016], [2.09648, 41.432959], [2.09657, 41.432877], [2.096576, 41.432831], [2.096891, 41.432549], [2.097243, 41.432424], [2.097421, 41.43234], [2.09761, 41.432221], [2.097852, 41.43216], [2.09829, 41.432001], [2.098716, 41.431832], [2.098802, 41.431782], [2.098868, 41.431711], [2.098928, 41.431656], [2.098942, 41.431597], [2.098734, 41.430923], [2.099035, 41.430331], [2.099099, 41.430234], [2.099109, 41.430146], [2.099358, 41.430196], [2.099488, 41.430216], [2.099595, 41.430203], [2.1, 41.430108], [2.100301, 41.429996], [2.100544, 41.429944], [2.100835, 41.429869], [2.101116, 41.429774], [2.10115, 41.42976], [2.101186, 41.429726], [2.101215, 41.429665], [2.101432, 41.429402], [2.101558, 41.429302], [2.101674, 41.429197], [2.101965, 41.428848], [2.102075, 41.428668], [2.102285, 41.428586], [2.102408, 41.428512], [2.102418, 41.428519], [2.102532, 41.428465], [2.102698, 41.428464], [2.10283, 41.428405], [2.103236, 41.428104], [2.10338, 41.428128], [2.103847, 41.428315], [2.104045, 41.428451], [2.105423, 41.428832], [2.105548, 41.428816], [2.105596, 41.428809], [2.105749, 41.428811], [2.105763, 41.428794], [2.105778, 41.428775], [2.106665, 41.428652], [2.107374, 41.428652], [2.108419, 41.428748], [2.109345, 41.428643], [2.109551, 41.428619], [2.111123, 41.42832], [2.111865, 41.428373], [2.11198, 41.428421], [2.112104, 41.428559], [2.11215, 41.428602], [2.112222, 41.428618], [2.112323, 41.428646], [2.112418, 41.428632], [2.112463, 41.428626], [2.112919, 41.428388], [2.11299, 41.428397], [2.113325, 41.428514], [2.114034, 41.428254], [2.114072, 41.428245], [2.114169, 41.428196], [2.114195, 41.428183], [2.114238, 41.428161], [2.114368, 41.428118], [2.114545, 41.428071], [2.114745, 41.427998], [2.115014, 41.427975], [2.115084, 41.427951], [2.115161, 41.427922], [2.115232, 41.427857], [2.115351, 41.42771], [2.115374, 41.427664], [2.115443, 41.427565], [2.115598, 41.427211], [2.115764, 41.42695], [2.115985, 41.426778], [2.116585, 41.426533], [2.116712, 41.42649], [2.116783, 41.426436], [2.116843, 41.426409], [2.117327, 41.426274], [2.117447, 41.426271], [2.117702, 41.426297], [2.117862, 41.426288], [2.117972, 41.426255], [2.11807, 41.426243], [2.118102, 41.426232], [2.119025, 41.425912], [2.11965, 41.42568], [2.119858, 41.425654], [2.120754, 41.425711], [2.120893, 41.425743], [2.120944, 41.425769], [2.121084, 41.425783], [2.121172, 41.425833], [2.121276, 41.425768], [2.121341, 41.425685], [2.121364, 41.425592], [2.121348, 41.425492], [2.121244, 41.425302], [2.120543, 41.424156], [2.120465, 41.423918], [2.120464, 41.423693], [2.120557, 41.423109], [2.120554, 41.42299], [2.120506, 41.422905], [2.120478, 41.42279], [2.120484, 41.422697], [2.12054, 41.422594], [2.120686, 41.422347], [2.120823, 41.422037], [2.120908, 41.421901], [2.121008, 41.421798], [2.121172, 41.42167], [2.121421, 41.421409], [2.121517, 41.421258], [2.121588, 41.421055], [2.121551, 41.420932], [2.121522, 41.420895], [2.121449, 41.420857], [2.121179, 41.420744], [2.121228, 41.420723], [2.121224, 41.420721], [2.121286, 41.420695], [2.121284, 41.420691], [2.121449, 41.420621], [2.121563, 41.42057], [2.121576, 41.420592], [2.12184, 41.420479], [2.12197, 41.420423], [2.122074, 41.420378], [2.122548, 41.420176], [2.122891, 41.420029], [2.123025, 41.419973], [2.124305, 41.419427], [2.124409, 41.419384], [2.124747, 41.419242], [2.12486, 41.419211], [2.124946, 41.419185], [2.12517, 41.419105], [2.125208, 41.419088], [2.12526, 41.419069], [2.125334, 41.419038], [2.125443, 41.41899], [2.12588, 41.418799], [2.126462, 41.418541], [2.12681, 41.418386], [2.128063, 41.417828], [2.128185, 41.417774], [2.128801, 41.417498], [2.128814, 41.417516], [2.128905, 41.417478], [2.129011, 41.417432], [2.129123, 41.417385], [2.129279, 41.417318], [2.129289, 41.417314], [2.129459, 41.41724], [2.129587, 41.417186], [2.129675, 41.417148], [2.129708, 41.417148], [2.129803, 41.41711], [2.129922, 41.41706], [2.130046, 41.417006], [2.130221, 41.416928], [2.130457, 41.416822], [2.130693, 41.416718], [2.13081, 41.416666], [2.130917, 41.416618], [2.131048, 41.416561], [2.131064, 41.416583], [2.131188, 41.41653], [2.131209, 41.416521], [2.13129, 41.416487], [2.1313, 41.416499], [2.131351, 41.416477], [2.13132, 41.416436], [2.131314, 41.416438], [2.131258, 41.416363], [2.131222, 41.416378], [2.131105, 41.416428], [2.130857, 41.416534], [2.130709, 41.416598], [2.130427, 41.416718], [2.130168, 41.416828], [2.129827, 41.416973], [2.129707, 41.417025], [2.129446, 41.417135], [2.129279, 41.417206], [2.129207, 41.417237], [2.128979, 41.417332], [2.128941, 41.417349], [2.128829, 41.417186], [2.128709, 41.416977], [2.128631, 41.416857], [2.128548, 41.416718], [2.128446, 41.41666], [2.12831, 41.416628], [2.128115, 41.416624], [2.127802, 41.416638], [2.127721, 41.416643], [2.127577, 41.416658], [2.127407, 41.4167], [2.127188, 41.416754], [2.127027, 41.416775], [2.126895, 41.416783], [2.126775, 41.416775], [2.126687, 41.416747], [2.126626, 41.416708], [2.126583, 41.416661], [2.126553, 41.41661], [2.126505, 41.416453], [2.12644, 41.416295], [2.126363, 41.416129], [2.126311, 41.416033], [2.126238, 41.41596], [2.126121, 41.415887], [2.125891, 41.415804], [2.125755, 41.41577], [2.125614, 41.415713], [2.12555, 41.415664], [2.125517, 41.415639], [2.125375, 41.415401], [2.125323, 41.415303], [2.125272, 41.415187], [2.125209, 41.415087], [2.125136, 41.41498], [2.125132, 41.414915], [2.125143, 41.414841], [2.125331, 41.41439], [2.125394, 41.414307], [2.125445, 41.414244], [2.125513, 41.414182], [2.125536, 41.414133], [2.125534, 41.414092], [2.125501, 41.414037], [2.125439, 41.414002], [2.125312, 41.413991], [2.125121, 41.41398], [2.125018, 41.413967], [2.124791, 41.413914], [2.124585, 41.413848], [2.124437, 41.413775], [2.124289, 41.413698], [2.124204, 41.413652], [2.124108, 41.413635], [2.124007, 41.413634], [2.123575, 41.413725], [2.123514, 41.41375], [2.123452, 41.413787], [2.123375, 41.413842], [2.123268, 41.413944], [2.123231, 41.414], [2.123204, 41.414092], [2.123226, 41.414217], [2.123268, 41.414314], [2.123369, 41.414647], [2.123424, 41.414846], [2.12343, 41.41492], [2.123415, 41.414984], [2.123359, 41.415046], [2.123313, 41.415118], [2.123271, 41.415185], [2.123241, 41.415291], [2.12323, 41.415349], [2.123192, 41.415383], [2.123136, 41.415397], [2.123076, 41.415389], [2.123005, 41.415349], [2.122719, 41.415123], [2.122627, 41.41507], [2.122562, 41.41506], [2.122504, 41.415069], [2.122451, 41.415112], [2.122419, 41.415203], [2.122404, 41.4154], [2.122376, 41.415512], [2.122356, 41.415578], [2.122315, 41.415634], [2.122261, 41.4157], [2.122229, 41.415758], [2.122218, 41.415845], [2.122225, 41.415902], [2.122225, 41.416056], [2.122188, 41.416124], [2.122129, 41.416154], [2.122054, 41.416175], [2.121963, 41.4162], [2.121893, 41.416228], [2.121844, 41.416266], [2.121796, 41.416316], [2.121754, 41.416392], [2.121726, 41.416469], [2.121711, 41.416554], [2.12172, 41.416615], [2.121741, 41.416668], [2.121754, 41.416722], [2.121751, 41.416785], [2.121731, 41.41685], [2.121692, 41.416898], [2.121643, 41.416932], [2.121581, 41.41695], [2.121543, 41.416942], [2.121481, 41.416899], [2.121403, 41.416822], [2.121302, 41.416706], [2.121168, 41.416531], [2.12114, 41.416492], [2.121084, 41.416347], [2.121028, 41.416205], [2.120989, 41.416091], [2.120963, 41.416052], [2.120919, 41.416013], [2.120852, 41.415968], [2.120793, 41.415955], [2.12074, 41.415954], [2.120673, 41.415975], [2.120403, 41.416096], [2.120264, 41.41616], [2.120175, 41.416166], [2.120101, 41.416144], [2.120051, 41.416082], [2.120031, 41.415978], [2.12003, 41.415891], [2.120038, 41.415786], [2.120035, 41.415685], [2.120058, 41.415577], [2.1201, 41.415453], [2.120162, 41.415354], [2.120284, 41.41518], [2.120304, 41.415117], [2.120305, 41.415052], [2.120282, 41.415001], [2.120232, 41.414956], [2.120179, 41.41493], [2.120103, 41.414917], [2.120036, 41.414929], [2.119904, 41.414951], [2.119774, 41.414976], [2.119606, 41.414991], [2.119483, 41.41499], [2.119403, 41.414985], [2.118973, 41.414919], [2.118885, 41.414873], [2.118838, 41.41481], [2.118836, 41.414732], [2.118859, 41.414654], [2.118885, 41.414541], [2.118929, 41.41442], [2.118966, 41.414359], [2.11902, 41.414255], [2.119071, 41.414203], [2.119128, 41.414119], [2.119192, 41.414003], [2.119274, 41.41369], [2.119356, 41.413493], [2.119405, 41.413433], [2.119573, 41.413248], [2.119599, 41.413218], [2.119637, 41.413145], [2.119628, 41.412997], [2.119613, 41.412837], [2.119599, 41.412633], [2.119587, 41.412574], [2.119547, 41.412513], [2.119496, 41.412478], [2.119487, 41.412476], [2.119409, 41.41246], [2.11931, 41.412476], [2.119126, 41.412542], [2.118985, 41.412593], [2.118919, 41.412637], [2.118862, 41.412697], [2.11881, 41.412834], [2.118789, 41.412936], [2.118787, 41.413106], [2.118801, 41.413264], [2.118799, 41.413439], [2.118764, 41.413497], [2.118674, 41.413552], [2.11855, 41.413599], [2.118325, 41.413654], [2.118195, 41.413672], [2.118052, 41.413673], [2.117848, 41.413657], [2.117647, 41.413607], [2.11746, 41.413568], [2.117334, 41.413526], [2.117155, 41.413512], [2.116996, 41.413526], [2.116872, 41.413563], [2.116696, 41.413652], [2.116614, 41.413715], [2.116529, 41.413807], [2.116358, 41.414031], [2.116298, 41.414119], [2.116211, 41.414167], [2.11609, 41.414177], [2.116006, 41.414159], [2.115937, 41.414127], [2.115701, 41.413845], [2.115569, 41.413682], [2.115325, 41.413277], [2.115281, 41.413222], [2.115217, 41.413179], [2.115094, 41.413149], [2.115013, 41.41315], [2.11482, 41.413136], [2.114702, 41.413101], [2.114627, 41.413065], [2.114566, 41.413022], [2.114525, 41.412974], [2.114478, 41.412897], [2.11437, 41.412445], [2.114357, 41.412363], [2.114311, 41.412285], [2.114258, 41.412246], [2.114164, 41.412197], [2.11406, 41.412173], [2.113971, 41.412179], [2.113802, 41.412209], [2.113678, 41.412273], [2.113458, 41.412421], [2.113301, 41.412557], [2.113196, 41.412656], [2.113125, 41.41272], [2.113054, 41.412762], [2.112978, 41.412791], [2.11292, 41.412797], [2.112858, 41.412796], [2.112783, 41.412777], [2.112699, 41.412736], [2.112598, 41.412634], [2.112438, 41.412468], [2.112357, 41.4124], [2.112246, 41.412364], [2.112165, 41.412361], [2.112044, 41.412394], [2.111894, 41.412481], [2.111698, 41.412608], [2.111517, 41.412729], [2.111455, 41.412781], [2.111421, 41.412842], [2.111355, 41.41296], [2.111303, 41.413086], [2.111239, 41.413273], [2.111218, 41.413361], [2.111194, 41.41349], [2.111145, 41.41357], [2.111057, 41.413624], [2.110971, 41.413625], [2.110846, 41.41358], [2.110771, 41.413529], [2.110536, 41.413295], [2.110407, 41.413151], [2.110366, 41.413087], [2.110334, 41.413013], [2.110254, 41.412755], [2.110207, 41.412464], [2.110169, 41.412371], [2.110098, 41.41229], [2.11002, 41.412243], [2.109945, 41.412234], [2.109844, 41.412252], [2.10967, 41.412304], [2.109549, 41.412368], [2.109439, 41.412458], [2.109362, 41.412561], [2.109319, 41.412649], [2.10929, 41.412712], [2.109222, 41.412783], [2.109134, 41.412854], [2.109038, 41.412895], [2.108948, 41.412903], [2.108876, 41.412881], [2.108809, 41.412847], [2.108712, 41.412792], [2.108561, 41.412742], [2.108425, 41.41269], [2.108333, 41.412654], [2.108261, 41.412586], [2.108223, 41.412502], [2.108213, 41.412421], [2.108237, 41.412358], [2.108269, 41.412251], [2.108244, 41.41209], [2.108216, 41.411908], [2.108229, 41.41181], [2.108257, 41.411693], [2.108285, 41.411592], [2.108252, 41.411517], [2.108153, 41.411461], [2.108099, 41.411451], [2.108043, 41.41144], [2.107707, 41.411429], [2.107423, 41.411456], [2.107182, 41.411497], [2.107011, 41.411556], [2.106845, 41.411644], [2.106649, 41.411764], [2.106529, 41.411809], [2.106438, 41.411814], [2.106335, 41.411773], [2.106267, 41.411709], [2.106257, 41.411596], [2.106258, 41.411516], [2.106198, 41.411438], [2.106134, 41.411397], [2.106016, 41.411359], [2.10589, 41.411337], [2.105825, 41.411294], [2.105796, 41.411204], [2.105836, 41.411104], [2.105944, 41.410989], [2.106103, 41.410864], [2.106211, 41.410804], [2.106323, 41.410719], [2.106427, 41.410622], [2.106539, 41.410556], [2.106708, 41.410465], [2.10679, 41.410397], [2.106938, 41.410205], [2.106984, 41.410142], [2.106986, 41.410053], [2.106929, 41.409966], [2.106816, 41.409876], [2.106759, 41.409835], [2.10668, 41.409786], [2.106615, 41.40973], [2.106559, 41.409644], [2.106503, 41.409648], [2.105722, 41.409859], [2.105659, 41.409873], [2.105641, 41.409841], [2.105558, 41.409754], [2.10549, 41.409693], [2.105414, 41.409675], [2.105303, 41.409665], [2.105203, 41.409676], [2.105042, 41.40971], [2.104545, 41.409821], [2.104403, 41.409851], [2.104273, 41.409833], [2.104178, 41.409778], [2.104129, 41.409734], [2.104033, 41.409529], [2.103988, 41.409465], [2.103927, 41.409416], [2.103867, 41.409366], [2.103787, 41.409331], [2.103638, 41.40929], [2.103566, 41.409263], [2.103509, 41.409231], [2.103468, 41.409202], [2.10343, 41.409144], [2.103415, 41.409104], [2.103552, 41.408604], [2.103557, 41.408543], [2.103539, 41.408486], [2.103524, 41.408413], [2.103449, 41.408324], [2.103317, 41.40819], [2.103261, 41.408135], [2.103231, 41.408074], [2.103205, 41.408005], [2.103218, 41.407924], [2.103282, 41.407703], [2.103337, 41.407574], [2.103399, 41.407502], [2.103496, 41.407425], [2.103607, 41.407377], [2.103726, 41.407355], [2.104161, 41.40731], [2.104303, 41.407273], [2.104372, 41.407239], [2.104403, 41.407199], [2.104419, 41.407153], [2.104401, 41.407067], [2.10429, 41.406504], [2.104284, 41.406398], [2.104297, 41.406312], [2.104367, 41.40622], [2.104478, 41.406152], [2.104751, 41.406039], [2.104892, 41.406048], [2.10501, 41.406095], [2.105362, 41.406369], [2.105464, 41.406465], [2.105608, 41.406512], [2.105723, 41.406516], [2.105989, 41.406454], [2.106219, 41.406422], [2.106356, 41.406443], [2.106439, 41.406541], [2.106495, 41.406651], [2.106584, 41.406819], [2.10666, 41.406909], [2.10677, 41.406976], [2.106903, 41.407003], [2.107026, 41.406978], [2.107146, 41.406884], [2.107283, 41.406747], [2.107395, 41.406644], [2.107496, 41.40659], [2.10758, 41.406562], [2.107741, 41.406572], [2.107843, 41.406613], [2.10798, 41.406666], [2.108159, 41.40675], [2.108295, 41.406864], [2.108404, 41.406977], [2.108529, 41.407047], [2.108663, 41.407057], [2.108808, 41.407055], [2.108927, 41.407013], [2.109032, 41.40693], [2.109106, 41.40683], [2.109111, 41.406694], [2.108991, 41.406359], [2.108929, 41.406152], [2.108911, 41.406048], [2.108851, 41.405949], [2.108768, 41.405865], [2.108643, 41.405781], [2.108415, 41.405664], [2.108245, 41.405579], [2.107946, 41.405387], [2.107844, 41.405262], [2.107756, 41.405057], [2.107715, 41.40493], [2.107641, 41.404797], [2.107531, 41.404733], [2.107401, 41.404674], [2.107322, 41.40461], [2.107308, 41.404527], [2.107369, 41.40437], [2.107437, 41.404236], [2.107461, 41.404122], [2.107458, 41.40408], [2.107435, 41.403792], [2.107425, 41.403717], [2.107375, 41.403603], [2.107305, 41.403521], [2.107238, 41.403467], [2.107133, 41.403393], [2.107059, 41.403352], [2.106886, 41.403296], [2.106704, 41.403265], [2.10654, 41.403258], [2.10643, 41.403261], [2.106268, 41.403287], [2.10615, 41.403313], [2.106066, 41.403316], [2.105991, 41.403299], [2.105938, 41.40327], [2.105905, 41.403226], [2.105892, 41.403158], [2.105901, 41.402982], [2.105852, 41.402775], [2.105813, 41.402654], [2.105782, 41.40259], [2.105712, 41.402517], [2.10558, 41.402396], [2.105494, 41.40235], [2.105389, 41.402313], [2.105259, 41.402288], [2.105174, 41.402248], [2.105143, 41.402201], [2.105141, 41.402147], [2.105167, 41.402092], [2.105243, 41.402015], [2.105294, 41.401919], [2.105296, 41.401858], [2.105273, 41.401727], [2.105133, 41.401493], [2.104852, 41.401107], [2.104802, 41.401061], [2.104737, 41.40101], [2.104657, 41.400979], [2.104598, 41.400968], [2.104503, 41.400958], [2.104452, 41.40093], [2.104421, 41.400888], [2.104416, 41.40086], [2.104017, 41.400987], [2.103857, 41.401036], [2.103792, 41.401054], [2.103703, 41.401077], [2.103628, 41.401096], [2.103534, 41.401117], [2.103436, 41.401133], [2.103347, 41.401145], [2.103238, 41.401132], [2.103198, 41.401126], [2.103167, 41.40112], [2.103138, 41.401119], [2.103107, 41.401121], [2.10308, 41.401124], [2.103027, 41.401134], [2.102995, 41.401135], [2.102965, 41.401132], [2.102932, 41.401125], [2.103059, 41.40138], [2.103148, 41.401663], [2.103197, 41.402068], [2.103295, 41.40234], [2.103485, 41.402617], [2.103715, 41.403021], [2.103787, 41.403244], [2.103834, 41.403513], [2.103833, 41.403766], [2.103667, 41.404208], [2.103505, 41.40449], [2.103423, 41.40457], [2.103191, 41.404647], [2.102962, 41.404748], [2.102736, 41.404838], [2.102387, 41.404925], [2.101972, 41.405009], [2.101911, 41.405094], [2.10184, 41.405192], [2.101754, 41.405415], [2.101742, 41.405972], [2.10168, 41.406385], [2.101564, 41.40655], [2.101425, 41.406684], [2.101397, 41.406822], [2.101355, 41.407234], [2.101352, 41.407292], [2.101315, 41.407349], [2.101238, 41.407438], [2.100879, 41.407861], [2.100598, 41.408385], [2.100183, 41.408438], [2.099032, 41.408857], [2.098833, 41.408915], [2.098199, 41.409069], [2.097812, 41.409136], [2.097543, 41.409126], [2.097377, 41.409076], [2.097233, 41.408999], [2.097109, 41.408835], [2.096918, 41.408492], [2.096681, 41.408261], [2.096216, 41.407969], [2.095506, 41.407819], [2.094056, 41.408039], [2.093024, 41.408203], [2.092506, 41.408253], [2.091835, 41.408212], [2.091498, 41.408167], [2.091445, 41.408177], [2.09073, 41.408307], [2.089818, 41.408402], [2.089188, 41.408528], [2.088704, 41.40861], [2.087822, 41.408896], [2.087503, 41.409002], [2.087213, 41.409188], [2.086935, 41.409427], [2.086609, 41.409593], [2.086395, 41.409656], [2.086001, 41.409692], [2.085592, 41.40967], [2.085402, 41.409643], [2.085209, 41.409548], [2.085048, 41.409482], [2.084664, 41.409194], [2.084472, 41.409021], [2.084235, 41.408851], [2.083152, 41.407981], [2.082666, 41.407506], [2.082541, 41.407319], [2.08261, 41.407192], [2.082394, 41.407054], [2.082146, 41.406913], [2.081302, 41.406513], [2.081154, 41.406467], [2.080991, 41.40638], [2.080922, 41.406268], [2.080832, 41.406185], [2.080469, 41.405985], [2.08043, 41.405904], [2.080498, 41.405197], [2.080453, 41.405023], [2.080409, 41.404828], [2.080203, 41.404521], [2.079881, 41.404238], [2.079495, 41.403925], [2.079022, 41.403474], [2.078864, 41.403366], [2.07871, 41.403286], [2.078445, 41.403201], [2.078248, 41.403009], [2.078088, 41.402949], [2.077904, 41.40293], [2.077749, 41.402944], [2.076893, 41.403143], [2.076426, 41.40321], [2.075869, 41.403238], [2.075621, 41.403208], [2.075361, 41.403137], [2.075059, 41.403022], [2.074827, 41.402892], [2.074581, 41.403139], [2.074139, 41.403464], [2.073679, 41.403734], [2.072953, 41.403562], [2.072172, 41.403901], [2.071589, 41.404599], [2.070948, 41.40526], [2.070754, 41.405482], [2.0703, 41.405838], [2.06962, 41.406322], [2.069443, 41.406898], [2.069736, 41.407087], [2.070061, 41.40711], [2.070439, 41.407161], [2.071084, 41.407211], [2.07139, 41.407242], [2.071583, 41.407332], [2.071772, 41.407509], [2.071899, 41.407686], [2.071914, 41.407769], [2.071698, 41.408211], [2.071523, 41.408586], [2.071464, 41.408778], [2.071431, 41.409004], [2.071429, 41.409142], [2.071517, 41.40941], [2.071689, 41.409792], [2.071778, 41.409943], [2.071952, 41.410195], [2.072803, 41.410134], [2.073009, 41.410139], [2.07316, 41.410164], [2.07332, 41.410211], [2.073589, 41.410365], [2.073746, 41.410509], [2.07461, 41.411024], [2.074812, 41.411105], [2.074971, 41.411177], [2.075348, 41.411267], [2.0757, 41.4113], [2.075967, 41.411257], [2.076151, 41.411197], [2.076428, 41.411056], [2.07658, 41.410924], [2.076643, 41.410858], [2.076742, 41.411121], [2.076842, 41.411289], [2.076987, 41.41145], [2.077382, 41.411656], [2.077588, 41.411788], [2.07664, 41.412323], [2.078427, 41.414184]]]]
    },
    "properties": {
      "neighbourhood": "Vallvidrera, el Tibidabo i les Planes",
      "neighbourhood_group": "Sarrià-Sant Gervasi"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.116996, 41.413526], [2.117155, 41.413512], [2.117334, 41.413526], [2.11746, 41.413568], [2.117647, 41.413607], [2.117848, 41.413657], [2.118052, 41.413673], [2.118195, 41.413672], [2.118325, 41.413654], [2.11855, 41.413599], [2.118674, 41.413552], [2.118764, 41.413497], [2.118799, 41.413439], [2.118801, 41.413264], [2.118787, 41.413106], [2.118789, 41.412936], [2.11881, 41.412834], [2.118862, 41.412697], [2.118919, 41.412637], [2.118985, 41.412593], [2.119126, 41.412542], [2.11931, 41.412476], [2.119409, 41.41246], [2.119487, 41.412476], [2.119515, 41.41244], [2.119583, 41.412353], [2.120285, 41.41149], [2.120309, 41.411469], [2.120343, 41.41145], [2.120369, 41.411429], [2.120405, 41.411395], [2.120436, 41.411371], [2.120481, 41.411351], [2.120505, 41.411327], [2.120595, 41.411268], [2.120685, 41.411214], [2.120735, 41.411181], [2.120803, 41.411134], [2.12088, 41.411084], [2.120946, 41.411042], [2.120958, 41.411034], [2.120972, 41.411022], [2.121013, 41.41098], [2.121036, 41.410935], [2.121066, 41.410907], [2.121071, 41.410888], [2.12108, 41.410859], [2.121083, 41.410838], [2.121091, 41.410801], [2.121098, 41.410762], [2.121108, 41.410751], [2.121117, 41.41074], [2.121137, 41.410728], [2.121156, 41.410716], [2.121181, 41.410693], [2.121201, 41.410675], [2.121213, 41.410667], [2.121236, 41.410644], [2.121251, 41.410613], [2.12126, 41.410592], [2.121276, 41.410556], [2.121295, 41.410519], [2.121309, 41.410505], [2.121323, 41.410492], [2.121341, 41.410476], [2.121356, 41.410461], [2.121372, 41.410443], [2.121378, 41.410432], [2.121402, 41.410408], [2.121425, 41.410392], [2.121458, 41.410367], [2.121501, 41.410335], [2.121555, 41.410297], [2.121607, 41.410267], [2.121648, 41.410241], [2.121662, 41.410233], [2.121686, 41.410219], [2.121724, 41.410195], [2.121774, 41.410156], [2.12181, 41.410131], [2.121828, 41.41011], [2.121849, 41.41009], [2.121868, 41.410069], [2.121882, 41.410056], [2.121897, 41.410044], [2.121916, 41.41003], [2.121931, 41.410021], [2.121968, 41.409997], [2.121982, 41.409977], [2.121996, 41.40996], [2.122006, 41.409937], [2.122012, 41.4099], [2.12201, 41.409868], [2.122007, 41.409835], [2.122002, 41.409802], [2.121995, 41.409768], [2.121993, 41.40974], [2.121997, 41.409698], [2.121998, 41.409683], [2.122, 41.409669], [2.121992, 41.409652], [2.121982, 41.409629], [2.121973, 41.409605], [2.121977, 41.409567], [2.121984, 41.409524], [2.121987, 41.409492], [2.121994, 41.409462], [2.121967, 41.409351], [2.121922, 41.409021], [2.121901, 41.408968], [2.121933, 41.408883], [2.121997, 41.408712], [2.12204, 41.408585], [2.122103, 41.408397], [2.12211, 41.408384], [2.122338, 41.407976], [2.12241, 41.407902], [2.122524, 41.40782], [2.122634, 41.407753], [2.122268, 41.4074], [2.122023, 41.407205], [2.121841, 41.407066], [2.122015, 41.406847], [2.122774, 41.405929], [2.122797, 41.405821], [2.122809, 41.405782], [2.122861, 41.405695], [2.122901, 41.40563], [2.122917, 41.405593], [2.122942, 41.405515], [2.123006, 41.405431], [2.12313, 41.404975], [2.123145, 41.404924], [2.123177, 41.40486], [2.123287, 41.404662], [2.12342, 41.40446], [2.123488, 41.404354], [2.123452, 41.404347], [2.123511, 41.404268], [2.123527, 41.404246], [2.12358, 41.404176], [2.123654, 41.404075], [2.123769, 41.40402], [2.123792, 41.403935], [2.123901, 41.403836], [2.123906, 41.403833], [2.123905, 41.403832], [2.123946, 41.403795], [2.123985, 41.403759], [2.123973, 41.403753], [2.124055, 41.403674], [2.124164, 41.403569], [2.124303, 41.403434], [2.124416, 41.403345], [2.12451, 41.403271], [2.124588, 41.40321], [2.124665, 41.40322], [2.124747, 41.403176], [2.124785, 41.403075], [2.124648, 41.403014], [2.124717, 41.402885], [2.124767, 41.402739], [2.124797, 41.402606], [2.124807, 41.402457], [2.124802, 41.40236], [2.124864, 41.402322], [2.124881, 41.402312], [2.124951, 41.402271], [2.124994, 41.402251], [2.125059, 41.402221], [2.125068, 41.402213], [2.125074, 41.402207], [2.125113, 41.402173], [2.125157, 41.402133], [2.125226, 41.402059], [2.124494, 41.40165], [2.122894, 41.400755], [2.123071, 41.400579], [2.123411, 41.400266], [2.123708, 41.400005], [2.124026, 41.399723], [2.124088, 41.399677], [2.124393, 41.399452], [2.124873, 41.399113], [2.125099, 41.398941], [2.125344, 41.398733], [2.126131, 41.398177], [2.126195, 41.398146], [2.126223, 41.398128], [2.126255, 41.398109], [2.126288, 41.398092], [2.126322, 41.398075], [2.126354, 41.398062], [2.12641, 41.398038], [2.126468, 41.398014], [2.126527, 41.397992], [2.126586, 41.397971], [2.126657, 41.397948], [2.126728, 41.397926], [2.126801, 41.397906], [2.126875, 41.397889], [2.12695, 41.397873], [2.127028, 41.397859], [2.127107, 41.397846], [2.127186, 41.397834], [2.127268, 41.397824], [2.127278, 41.397824], [2.127287, 41.397823], [2.127292, 41.397824], [2.1273, 41.397822], [2.127311, 41.39782], [2.127374, 41.397815], [2.127432, 41.397811], [2.12749, 41.397808], [2.127601, 41.397805], [2.127656, 41.397803], [2.128183, 41.397808], [2.127637, 41.397448], [2.126265, 41.396543], [2.126171, 41.39648], [2.126129, 41.396448], [2.126089, 41.396416], [2.126051, 41.396383], [2.126013, 41.396349], [2.125946, 41.396284], [2.125884, 41.396217], [2.125827, 41.396146], [2.125776, 41.396074], [2.12573, 41.395999], [2.125692, 41.395928], [2.125656, 41.395832], [2.125626, 41.395735], [2.126002, 41.395644], [2.126245, 41.395458], [2.126309, 41.39541], [2.127166, 41.394748], [2.127576, 41.394432], [2.128011, 41.3941], [2.129051, 41.393305], [2.129689, 41.39279], [2.129962, 41.39257], [2.129778, 41.392588], [2.129591, 41.392537], [2.129407, 41.392487], [2.127065, 41.39188], [2.125615, 41.391504], [2.123892, 41.391065], [2.123216, 41.390896], [2.123132, 41.39089], [2.123025, 41.390878], [2.122572, 41.390747], [2.121801, 41.390453], [2.120928, 41.390112], [2.120808, 41.390359], [2.1207, 41.390541], [2.120634, 41.390716], [2.120515, 41.390875], [2.1204, 41.390976], [2.120055, 41.391278], [2.119904, 41.391359], [2.11983, 41.391404], [2.119575, 41.391514], [2.118703, 41.391778], [2.118235, 41.391878], [2.117778, 41.392058], [2.117553, 41.392216], [2.117982, 41.392626], [2.118156, 41.39285], [2.118348, 41.393131], [2.118436, 41.393482], [2.118459, 41.394112], [2.118403, 41.394407], [2.118266, 41.394655], [2.118108, 41.394863], [2.117898, 41.395087], [2.117607, 41.395264], [2.117305, 41.395409], [2.116943, 41.395515], [2.116508, 41.395597], [2.115828, 41.395801], [2.114711, 41.396406], [2.114409, 41.396573], [2.113165, 41.397278], [2.112709, 41.397026], [2.112164, 41.396516], [2.111837, 41.396288], [2.11116, 41.395945], [2.110614, 41.395844], [2.110495, 41.395839], [2.110288, 41.395868], [2.109855, 41.396191], [2.109599, 41.396788], [2.109369, 41.397043], [2.109355, 41.397169], [2.10935, 41.397213], [2.109336, 41.39724], [2.109308, 41.397275], [2.109283, 41.397299], [2.109261, 41.397315], [2.109238, 41.397329], [2.109168, 41.397374], [2.10907, 41.397448], [2.109043, 41.397474], [2.109029, 41.39749], [2.109021, 41.397498], [2.108971, 41.397585], [2.108967, 41.397597], [2.108966, 41.397607], [2.108969, 41.397618], [2.108978, 41.397633], [2.108991, 41.397664], [2.10899, 41.397692], [2.108976, 41.39772], [2.108914, 41.397818], [2.108896, 41.39786], [2.108809, 41.39804], [2.108794, 41.398077], [2.108731, 41.398226], [2.108722, 41.39828], [2.10873, 41.39831], [2.108744, 41.398323], [2.108768, 41.398342], [2.108669, 41.398481], [2.108445, 41.398596], [2.108369, 41.398637], [2.108353, 41.398645], [2.108323, 41.398663], [2.108306, 41.398675], [2.108291, 41.398688], [2.108276, 41.398714], [2.108206, 41.39887], [2.107784, 41.399261], [2.10776, 41.399274], [2.10773, 41.399285], [2.107673, 41.399294], [2.107631, 41.399307], [2.107556, 41.399329], [2.107531, 41.39934], [2.107487, 41.399361], [2.107422, 41.399399], [2.107384, 41.399419], [2.107358, 41.399433], [2.107335, 41.399448], [2.107323, 41.399464], [2.107312, 41.399487], [2.107298, 41.399507], [2.107285, 41.39953], [2.107256, 41.399579], [2.107244, 41.399598], [2.107238, 41.399631], [2.107232, 41.399653], [2.107223, 41.399669], [2.107211, 41.399686], [2.107193, 41.399704], [2.10717, 41.399743], [2.107151, 41.399775], [2.107126, 41.399799], [2.107114, 41.399823], [2.107096, 41.39984], [2.107078, 41.399852], [2.107024, 41.39988], [2.106998, 41.39989], [2.106981, 41.399897], [2.106971, 41.399903], [2.106923, 41.399932], [2.106841, 41.39997], [2.106823, 41.399983], [2.106808, 41.399998], [2.106777, 41.400018], [2.106762, 41.400031], [2.10675, 41.400046], [2.106729, 41.400065], [2.106708, 41.400079], [2.106678, 41.400094], [2.106625, 41.400113], [2.106582, 41.400139], [2.106556, 41.400149], [2.106542, 41.400159], [2.106499, 41.400167], [2.106486, 41.400173], [2.10646, 41.400183], [2.106415, 41.400206], [2.106379, 41.400221], [2.10635, 41.400229], [2.106295, 41.400244], [2.106065, 41.400334], [2.106047, 41.40035], [2.10603, 41.40036], [2.105984, 41.400376], [2.105963, 41.400386], [2.105941, 41.400388], [2.105926, 41.400391], [2.105901, 41.400402], [2.105849, 41.400427], [2.105825, 41.400438], [2.105744, 41.400461], [2.105723, 41.400469], [2.105703, 41.400478], [2.105683, 41.400478], [2.105663, 41.400475], [2.105647, 41.400473], [2.105628, 41.400476], [2.105609, 41.400484], [2.10559, 41.400493], [2.105571, 41.400505], [2.105551, 41.400521], [2.105533, 41.400541], [2.10552, 41.400559], [2.105497, 41.400601], [2.105478, 41.400618], [2.10546, 41.400634], [2.10544, 41.400645], [2.105368, 41.400667], [2.105336, 41.400676], [2.104932, 41.400713], [2.104607, 41.4008], [2.104416, 41.40086], [2.104421, 41.400888], [2.104452, 41.40093], [2.104503, 41.400958], [2.104598, 41.400968], [2.104657, 41.400979], [2.104737, 41.40101], [2.104802, 41.401061], [2.104852, 41.401107], [2.105133, 41.401493], [2.105273, 41.401727], [2.105296, 41.401858], [2.105294, 41.401919], [2.105243, 41.402015], [2.105167, 41.402092], [2.105141, 41.402147], [2.105143, 41.402201], [2.105174, 41.402248], [2.105259, 41.402288], [2.105389, 41.402313], [2.105494, 41.40235], [2.10558, 41.402396], [2.105712, 41.402517], [2.105782, 41.40259], [2.105813, 41.402654], [2.105852, 41.402775], [2.105901, 41.402982], [2.105892, 41.403158], [2.105905, 41.403226], [2.105938, 41.40327], [2.105991, 41.403299], [2.106066, 41.403316], [2.10615, 41.403313], [2.106268, 41.403287], [2.10643, 41.403261], [2.10654, 41.403258], [2.106704, 41.403265], [2.106886, 41.403296], [2.107059, 41.403352], [2.107133, 41.403393], [2.107238, 41.403467], [2.107305, 41.403521], [2.107375, 41.403603], [2.107425, 41.403717], [2.107435, 41.403792], [2.107458, 41.40408], [2.107461, 41.404122], [2.107437, 41.404236], [2.107369, 41.40437], [2.107308, 41.404527], [2.107322, 41.40461], [2.107401, 41.404674], [2.107531, 41.404733], [2.107641, 41.404797], [2.107715, 41.40493], [2.107756, 41.405057], [2.107844, 41.405262], [2.107946, 41.405387], [2.108245, 41.405579], [2.108415, 41.405664], [2.108643, 41.405781], [2.108768, 41.405865], [2.108851, 41.405949], [2.108911, 41.406048], [2.108929, 41.406152], [2.108991, 41.406359], [2.109111, 41.406694], [2.109106, 41.40683], [2.109032, 41.40693], [2.108927, 41.407013], [2.108808, 41.407055], [2.108663, 41.407057], [2.108529, 41.407047], [2.108404, 41.406977], [2.108295, 41.406864], [2.108159, 41.40675], [2.10798, 41.406666], [2.107843, 41.406613], [2.107741, 41.406572], [2.10758, 41.406562], [2.107496, 41.40659], [2.107395, 41.406644], [2.107283, 41.406747], [2.107146, 41.406884], [2.107026, 41.406978], [2.106903, 41.407003], [2.10677, 41.406976], [2.10666, 41.406909], [2.106584, 41.406819], [2.106495, 41.406651], [2.106439, 41.406541], [2.106356, 41.406443], [2.106219, 41.406422], [2.105989, 41.406454], [2.105723, 41.406516], [2.105608, 41.406512], [2.105464, 41.406465], [2.105362, 41.406369], [2.10501, 41.406095], [2.104892, 41.406048], [2.104751, 41.406039], [2.104478, 41.406152], [2.104367, 41.40622], [2.104297, 41.406312], [2.104284, 41.406398], [2.10429, 41.406504], [2.104401, 41.407067], [2.104419, 41.407153], [2.104403, 41.407199], [2.104372, 41.407239], [2.104303, 41.407273], [2.104161, 41.40731], [2.103726, 41.407355], [2.103607, 41.407377], [2.103496, 41.407425], [2.103399, 41.407502], [2.103337, 41.407574], [2.103282, 41.407703], [2.103218, 41.407924], [2.103205, 41.408005], [2.103231, 41.408074], [2.103261, 41.408135], [2.103317, 41.40819], [2.103449, 41.408324], [2.103524, 41.408413], [2.103539, 41.408486], [2.103557, 41.408543], [2.103552, 41.408604], [2.103415, 41.409104], [2.10343, 41.409144], [2.103468, 41.409202], [2.103509, 41.409231], [2.103566, 41.409263], [2.103638, 41.40929], [2.103787, 41.409331], [2.103867, 41.409366], [2.103927, 41.409416], [2.103988, 41.409465], [2.104033, 41.409529], [2.104129, 41.409734], [2.104178, 41.409778], [2.104273, 41.409833], [2.104403, 41.409851], [2.104545, 41.409821], [2.105042, 41.40971], [2.105203, 41.409676], [2.105303, 41.409665], [2.105414, 41.409675], [2.10549, 41.409693], [2.105558, 41.409754], [2.105641, 41.409841], [2.105659, 41.409873], [2.105722, 41.409859], [2.106503, 41.409648], [2.106559, 41.409644], [2.106615, 41.40973], [2.10668, 41.409786], [2.106759, 41.409835], [2.106816, 41.409876], [2.106929, 41.409966], [2.106986, 41.410053], [2.106984, 41.410142], [2.106938, 41.410205], [2.10679, 41.410397], [2.106708, 41.410465], [2.106539, 41.410556], [2.106427, 41.410622], [2.106323, 41.410719], [2.106211, 41.410804], [2.106103, 41.410864], [2.105944, 41.410989], [2.105836, 41.411104], [2.105796, 41.411204], [2.105825, 41.411294], [2.10589, 41.411337], [2.106016, 41.411359], [2.106134, 41.411397], [2.106198, 41.411438], [2.106258, 41.411516], [2.106257, 41.411596], [2.106267, 41.411709], [2.106335, 41.411773], [2.106438, 41.411814], [2.106529, 41.411809], [2.106649, 41.411764], [2.106845, 41.411644], [2.107011, 41.411556], [2.107182, 41.411497], [2.107423, 41.411456], [2.107707, 41.411429], [2.108043, 41.41144], [2.108099, 41.411451], [2.108153, 41.411461], [2.108252, 41.411517], [2.108285, 41.411592], [2.108257, 41.411693], [2.108229, 41.41181], [2.108216, 41.411908], [2.108244, 41.41209], [2.108269, 41.412251], [2.108237, 41.412358], [2.108213, 41.412421], [2.108223, 41.412502], [2.108261, 41.412586], [2.108333, 41.412654], [2.108425, 41.41269], [2.108561, 41.412742], [2.108712, 41.412792], [2.108809, 41.412847], [2.108876, 41.412881], [2.108948, 41.412903], [2.109038, 41.412895], [2.109134, 41.412854], [2.109222, 41.412783], [2.10929, 41.412712], [2.109319, 41.412649], [2.109362, 41.412561], [2.109439, 41.412458], [2.109549, 41.412368], [2.10967, 41.412304], [2.109844, 41.412252], [2.109945, 41.412234], [2.11002, 41.412243], [2.110098, 41.41229], [2.110169, 41.412371], [2.110207, 41.412464], [2.110254, 41.412755], [2.110334, 41.413013], [2.110366, 41.413087], [2.110407, 41.413151], [2.110536, 41.413295], [2.110771, 41.413529], [2.110846, 41.41358], [2.110971, 41.413625], [2.111057, 41.413624], [2.111145, 41.41357], [2.111194, 41.41349], [2.111218, 41.413361], [2.111239, 41.413273], [2.111303, 41.413086], [2.111355, 41.41296], [2.111421, 41.412842], [2.111455, 41.412781], [2.111517, 41.412729], [2.111698, 41.412608], [2.111894, 41.412481], [2.112044, 41.412394], [2.112165, 41.412361], [2.112246, 41.412364], [2.112357, 41.4124], [2.112438, 41.412468], [2.112598, 41.412634], [2.112699, 41.412736], [2.112783, 41.412777], [2.112858, 41.412796], [2.11292, 41.412797], [2.112978, 41.412791], [2.113054, 41.412762], [2.113125, 41.41272], [2.113196, 41.412656], [2.113301, 41.412557], [2.113458, 41.412421], [2.113678, 41.412273], [2.113802, 41.412209], [2.113971, 41.412179], [2.11406, 41.412173], [2.114164, 41.412197], [2.114258, 41.412246], [2.114311, 41.412285], [2.114357, 41.412363], [2.11437, 41.412445], [2.114478, 41.412897], [2.114525, 41.412974], [2.114566, 41.413022], [2.114627, 41.413065], [2.114702, 41.413101], [2.11482, 41.413136], [2.115013, 41.41315], [2.115094, 41.413149], [2.115217, 41.413179], [2.115281, 41.413222], [2.115325, 41.413277], [2.115569, 41.413682], [2.115701, 41.413845], [2.115937, 41.414127], [2.116006, 41.414159], [2.11609, 41.414177], [2.116211, 41.414167], [2.116298, 41.414119], [2.116358, 41.414031], [2.116529, 41.413807], [2.116614, 41.413715], [2.116696, 41.413652], [2.116872, 41.413563], [2.116996, 41.413526]]]]
    },
    "properties": {
      "neighbourhood": "Sarrià",
      "neighbourhood_group": "Sarrià-Sant Gervasi"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.193798, 41.405043], [2.196091, 41.403303], [2.197345, 41.402351], [2.195628, 41.400254], [2.193892, 41.398135], [2.196051, 41.396493], [2.191829, 41.393445], [2.191408, 41.393141], [2.189966, 41.3921], [2.189134, 41.391478], [2.18796, 41.390601], [2.186883, 41.39144], [2.184618, 41.389787], [2.183478, 41.390642], [2.182407, 41.391457], [2.183544, 41.39229], [2.185835, 41.393968], [2.186731, 41.394624], [2.18675, 41.394936], [2.186785, 41.395518], [2.186751, 41.396663], [2.186771, 41.39672], [2.186842, 41.396925], [2.18684, 41.398298], [2.186833, 41.401796], [2.186836, 41.402319], [2.186562, 41.402308], [2.185962, 41.402471], [2.18598, 41.402497], [2.185766, 41.402575], [2.185712, 41.402672], [2.185659, 41.402761], [2.185611, 41.402848], [2.1855, 41.403068], [2.185472, 41.403137], [2.185441, 41.40323], [2.18554, 41.403349], [2.185634, 41.40369], [2.185743, 41.403862], [2.185977, 41.404102], [2.186397, 41.404287], [2.186481, 41.404333], [2.186545, 41.404365], [2.186621, 41.404394], [2.186644, 41.404401], [2.18669, 41.404414], [2.186733, 41.404424], [2.186777, 41.404433], [2.186821, 41.404441], [2.186865, 41.404447], [2.18691, 41.404453], [2.186962, 41.404457], [2.187015, 41.40446], [2.187068, 41.404461], [2.18712, 41.404461], [2.187175, 41.404458], [2.18723, 41.404454], [2.187285, 41.404448], [2.187339, 41.40444], [2.187392, 41.40443], [2.18743, 41.404422], [2.187476, 41.40441], [2.187521, 41.404398], [2.187566, 41.404383], [2.18761, 41.404368], [2.187977, 41.404225], [2.188297, 41.404467], [2.188619, 41.404709], [2.19009, 41.405813], [2.191437, 41.406827], [2.192252, 41.406211], [2.192681, 41.405887], [2.193798, 41.405043]]]]
    },
    "properties": {
      "neighbourhood": "el Parc i la Llacuna del Poblenou",
      "neighbourhood_group": "Sant Martí"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.132903, 41.397868], [2.132878, 41.397828], [2.132855, 41.397777], [2.132831, 41.397725], [2.132821, 41.397667], [2.132812, 41.397586], [2.132808, 41.397504], [2.13281, 41.397423], [2.132817, 41.397342], [2.132829, 41.397261], [2.132846, 41.397203], [2.132866, 41.397147], [2.132891, 41.397091], [2.13292, 41.397037], [2.132954, 41.396984], [2.132991, 41.396933], [2.133033, 41.396883], [2.133106, 41.396807], [2.13345, 41.396454], [2.133774, 41.396122], [2.133802, 41.396094], [2.133856, 41.396038], [2.133891, 41.395998], [2.133923, 41.395956], [2.133953, 41.395914], [2.133972, 41.395883], [2.134112, 41.395712], [2.134584, 41.395138], [2.135156, 41.39385], [2.135282, 41.393567], [2.135787, 41.392318], [2.135828, 41.392267], [2.135882, 41.392209], [2.136072, 41.391982], [2.136204, 41.39184], [2.13645, 41.391614], [2.134847, 41.39187], [2.132499, 41.392224], [2.131752, 41.392336], [2.130648, 41.392503], [2.129962, 41.39257], [2.129689, 41.39279], [2.129051, 41.393305], [2.128011, 41.3941], [2.127576, 41.394432], [2.127166, 41.394748], [2.126309, 41.39541], [2.126245, 41.395458], [2.126002, 41.395644], [2.125626, 41.395735], [2.125656, 41.395832], [2.125692, 41.395928], [2.12573, 41.395999], [2.125776, 41.396074], [2.125827, 41.396146], [2.125884, 41.396217], [2.125946, 41.396284], [2.126013, 41.396349], [2.126051, 41.396383], [2.126089, 41.396416], [2.126129, 41.396448], [2.126171, 41.39648], [2.126265, 41.396543], [2.127637, 41.397448], [2.128183, 41.397808], [2.127656, 41.397803], [2.127601, 41.397805], [2.12749, 41.397808], [2.127432, 41.397811], [2.127374, 41.397815], [2.127311, 41.39782], [2.1273, 41.397822], [2.127292, 41.397824], [2.127287, 41.397823], [2.127278, 41.397824], [2.127268, 41.397824], [2.127186, 41.397834], [2.127107, 41.397846], [2.127028, 41.397859], [2.12695, 41.397873], [2.126875, 41.397889], [2.126801, 41.397906], [2.126728, 41.397926], [2.126657, 41.397948], [2.126586, 41.397971], [2.126527, 41.397992], [2.126468, 41.398014], [2.12641, 41.398038], [2.126354, 41.398062], [2.126322, 41.398075], [2.126288, 41.398092], [2.126255, 41.398109], [2.126223, 41.398128], [2.126195, 41.398146], [2.126131, 41.398177], [2.125344, 41.398733], [2.125099, 41.398941], [2.124873, 41.399113], [2.124393, 41.399452], [2.124088, 41.399677], [2.124026, 41.399723], [2.123708, 41.400005], [2.123411, 41.400266], [2.123071, 41.400579], [2.122894, 41.400755], [2.124494, 41.40165], [2.125226, 41.402059], [2.126885, 41.402987], [2.130018, 41.404737], [2.130478, 41.404134], [2.131461, 41.402867], [2.131844, 41.402373], [2.132948, 41.40095], [2.133188, 41.40064], [2.133343, 41.400439], [2.134175, 41.399364], [2.133446, 41.398545], [2.133045, 41.398065], [2.133003, 41.398014], [2.132925, 41.397898], [2.132903, 41.397868]]]]
    },
    "properties": {
      "neighbourhood": "les Tres Torres",
      "neighbourhood_group": "Sarrià-Sant Gervasi"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.146713, 41.401716], [2.147632, 41.401192], [2.147983, 41.401223], [2.148069, 41.401228], [2.14813, 41.401232], [2.148163, 41.401234], [2.148345, 41.401239], [2.148401, 41.40124], [2.148442, 41.40124], [2.148483, 41.40124], [2.148503, 41.401239], [2.1487, 41.401232], [2.14902, 41.401208], [2.149029, 41.401207], [2.14913, 41.401195], [2.149237, 41.401181], [2.149343, 41.401166], [2.149449, 41.401148], [2.149541, 41.40113], [2.149634, 41.40111], [2.149726, 41.401089], [2.149792, 41.401073], [2.149857, 41.401055], [2.149909, 41.401041], [2.150119, 41.400985], [2.150127, 41.400982], [2.15013, 41.400981], [2.150155, 41.400973], [2.150184, 41.400963], [2.15021, 41.400954], [2.150277, 41.400935], [2.150357, 41.400905], [2.150454, 41.400869], [2.150507, 41.400847], [2.150552, 41.40083], [2.150805, 41.400727], [2.151187, 41.400565], [2.151658, 41.400081], [2.15204, 41.399689], [2.153126, 41.398604], [2.153247, 41.398492], [2.153261, 41.398479], [2.154062, 41.397704], [2.15498, 41.396766], [2.155325, 41.396322], [2.155679, 41.395622], [2.154789, 41.395398], [2.154719, 41.39538], [2.153161, 41.394998], [2.15129, 41.394523], [2.149585, 41.394091], [2.147912, 41.393657], [2.147808, 41.39363], [2.146197, 41.393228], [2.145922, 41.393159], [2.145595, 41.393077], [2.144944, 41.392908], [2.145003, 41.392642], [2.144856, 41.392516], [2.144789, 41.392459], [2.144397, 41.392415], [2.144034, 41.392644], [2.142827, 41.39235], [2.141871, 41.392124], [2.139331, 41.391511], [2.138341, 41.391284], [2.137593, 41.391431], [2.13645, 41.391614], [2.136204, 41.39184], [2.136072, 41.391982], [2.135882, 41.392209], [2.135828, 41.392267], [2.135787, 41.392318], [2.135282, 41.393567], [2.135156, 41.39385], [2.134584, 41.395138], [2.134112, 41.395712], [2.133972, 41.395883], [2.133953, 41.395914], [2.133923, 41.395956], [2.133891, 41.395998], [2.133856, 41.396038], [2.133802, 41.396094], [2.133774, 41.396122], [2.13345, 41.396454], [2.133106, 41.396807], [2.133033, 41.396883], [2.132991, 41.396933], [2.132954, 41.396984], [2.13292, 41.397037], [2.132891, 41.397091], [2.132866, 41.397147], [2.132846, 41.397203], [2.132829, 41.397261], [2.132817, 41.397342], [2.13281, 41.397423], [2.132808, 41.397504], [2.132812, 41.397586], [2.132821, 41.397667], [2.132831, 41.397725], [2.132855, 41.397777], [2.132878, 41.397828], [2.132903, 41.397868], [2.132925, 41.397898], [2.133003, 41.398014], [2.133045, 41.398065], [2.133446, 41.398545], [2.134175, 41.399364], [2.134245, 41.39944], [2.135106, 41.400282], [2.135323, 41.400473], [2.135801, 41.400868], [2.136092, 41.401109], [2.136384, 41.401345], [2.136874, 41.401808], [2.136992, 41.401923], [2.137355, 41.402277], [2.137565, 41.402492], [2.137659, 41.402587], [2.137755, 41.402681], [2.137826, 41.402748], [2.137875, 41.402795], [2.137938, 41.402848], [2.137976, 41.40288], [2.138009, 41.402906], [2.138041, 41.402929], [2.138065, 41.402946], [2.138098, 41.402971], [2.138134, 41.402999], [2.138227, 41.403068], [2.138345, 41.403152], [2.138465, 41.403236], [2.138586, 41.403318], [2.138749, 41.403427], [2.138845, 41.403489], [2.138977, 41.403569], [2.13907, 41.403623], [2.139368, 41.403782], [2.139432, 41.403817], [2.139489, 41.403848], [2.139625, 41.403919], [2.139779, 41.403997], [2.13998, 41.404097], [2.140698, 41.404454], [2.141995, 41.40399], [2.142017, 41.403981], [2.142076, 41.403956], [2.142134, 41.403929], [2.142192, 41.403901], [2.142246, 41.403873], [2.142298, 41.403844], [2.142349, 41.403814], [2.142399, 41.403783], [2.142429, 41.403764], [2.142458, 41.403745], [2.142486, 41.403726], [2.142736, 41.403551], [2.142777, 41.403522], [2.142928, 41.403418], [2.143061, 41.403327], [2.143206, 41.403254], [2.143346, 41.403196], [2.143492, 41.403144], [2.143683, 41.403086], [2.144021, 41.402994], [2.14443, 41.402876], [2.144912, 41.402716], [2.145594, 41.402331], [2.146203, 41.401996], [2.146713, 41.401716]]]]
    },
    "properties": {
      "neighbourhood": "Sant Gervasi - Galvany",
      "neighbourhood_group": "Sarrià-Sant Gervasi"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.152108, 41.416242], [2.152211, 41.416231], [2.152318, 41.416264], [2.152453, 41.416347], [2.152566, 41.41641], [2.152679, 41.41648], [2.152911, 41.416625], [2.152956, 41.416654], [2.153163, 41.416526], [2.153675, 41.416066], [2.154179, 41.415635], [2.154535, 41.415381], [2.154674, 41.415255], [2.154771, 41.415228], [2.155046, 41.415012], [2.155124, 41.414975], [2.155241, 41.414955], [2.155352, 41.414981], [2.15545, 41.415032], [2.155468, 41.41504], [2.155597, 41.415127], [2.155887, 41.415155], [2.156184, 41.415333], [2.156398, 41.415477], [2.156564, 41.415575], [2.156677, 41.415686], [2.157182, 41.41646], [2.157241, 41.416527], [2.157382, 41.416583], [2.157471, 41.416574], [2.157604, 41.41652], [2.157912, 41.415896], [2.158206, 41.415433], [2.158541, 41.415066], [2.158925, 41.414698], [2.159309, 41.414395], [2.159634, 41.414152], [2.159999, 41.413988], [2.160044, 41.413979], [2.160509, 41.413881], [2.160734, 41.413985], [2.161063, 41.414103], [2.161179, 41.414111], [2.161376, 41.413937], [2.161401, 41.413849], [2.161408, 41.413732], [2.161332, 41.413643], [2.161317, 41.413529], [2.162032, 41.412673], [2.160476, 41.411807], [2.160316, 41.411718], [2.158461, 41.410756], [2.158206, 41.410628], [2.158084, 41.410588], [2.157532, 41.410325], [2.156633, 41.409852], [2.156128, 41.409586], [2.15608, 41.409561], [2.155574, 41.409296], [2.154236, 41.408589], [2.153766, 41.409072], [2.153448, 41.408959], [2.153048, 41.408818], [2.152579, 41.408652], [2.152416, 41.408595], [2.152302, 41.408555], [2.151794, 41.408377], [2.151686, 41.408337], [2.151568, 41.40829], [2.151451, 41.408241], [2.151353, 41.408198], [2.151255, 41.408155], [2.151158, 41.40811], [2.151123, 41.408093], [2.151088, 41.408075], [2.151054, 41.408058], [2.150973, 41.408011], [2.150886, 41.408099], [2.150775, 41.408044], [2.150688, 41.407991], [2.150138, 41.408487], [2.150085, 41.408535], [2.148031, 41.410594], [2.149093, 41.411143], [2.149665, 41.41144], [2.150216, 41.411726], [2.149461, 41.412539], [2.149035, 41.412996], [2.149595, 41.413062], [2.149657, 41.413069], [2.149844, 41.413657], [2.149856, 41.413701], [2.149867, 41.413745], [2.149875, 41.41379], [2.14988, 41.413834], [2.149883, 41.413879], [2.149885, 41.413925], [2.149885, 41.413971], [2.149883, 41.414016], [2.149879, 41.414062], [2.149834, 41.414375], [2.14983, 41.414397], [2.149825, 41.414419], [2.149818, 41.41444], [2.149809, 41.414461], [2.149799, 41.414482], [2.149787, 41.414502], [2.149775, 41.414521], [2.149668, 41.414704], [2.14964, 41.41475], [2.149618, 41.414812], [2.149613, 41.414829], [2.149625, 41.414885], [2.149659, 41.41494], [2.149745, 41.415033], [2.149842, 41.415103], [2.149962, 41.415167], [2.150028, 41.415196], [2.15013, 41.415232], [2.150267, 41.415279], [2.150474, 41.41533], [2.150616, 41.415361], [2.150709, 41.415371], [2.150912, 41.415389], [2.150969, 41.415395], [2.15103, 41.415406], [2.15109, 41.415426], [2.151101, 41.415446], [2.151095, 41.415468], [2.151103, 41.415507], [2.151152, 41.415618], [2.151187, 41.415714], [2.15121, 41.415821], [2.151196, 41.415875], [2.151174, 41.415913], [2.151145, 41.415952], [2.151054, 41.416019], [2.151003, 41.416052], [2.150948, 41.416065], [2.15086, 41.416084], [2.15075, 41.416114], [2.150666, 41.416132], [2.150599, 41.416156], [2.150512, 41.416205], [2.15045, 41.416252], [2.150391, 41.41627], [2.150365, 41.416292], [2.150376, 41.416315], [2.150454, 41.416374], [2.150535, 41.416412], [2.150601, 41.416435], [2.150698, 41.41645], [2.150812, 41.416466], [2.150963, 41.416482], [2.151125, 41.416502], [2.151222, 41.416508], [2.151368, 41.416528], [2.151604, 41.416555], [2.151784, 41.416573], [2.151947, 41.416594], [2.152081, 41.416623], [2.152203, 41.41667], [2.152344, 41.416741], [2.152391, 41.416749], [2.152414, 41.416726], [2.152398, 41.416684], [2.152278, 41.416567], [2.152152, 41.416472], [2.15194, 41.416313], [2.151955, 41.416263], [2.152108, 41.416242]]]]
    },
    "properties": {
      "neighbourhood": "la Salut",
      "neighbourhood_group": "Gràcia"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.128918, 41.419901], [2.129019, 41.419705], [2.129135, 41.419615], [2.129287, 41.41956], [2.129361, 41.419537], [2.129417, 41.419505], [2.129481, 41.419478], [2.129521, 41.419468], [2.129565, 41.419462], [2.129614, 41.419465], [2.129665, 41.419476], [2.129718, 41.419492], [2.129771, 41.419517], [2.129813, 41.419547], [2.129855, 41.419576], [2.129885, 41.419603], [2.129927, 41.419638], [2.129967, 41.419666], [2.130013, 41.419688], [2.13006, 41.419692], [2.130104, 41.419678], [2.130147, 41.419636], [2.130153, 41.419598], [2.130148, 41.419539], [2.130121, 41.419402], [2.130077, 41.419143], [2.130238, 41.418696], [2.130538, 41.418346], [2.131288, 41.418245], [2.132155, 41.418598], [2.132319, 41.418572], [2.134215, 41.417827], [2.135191, 41.417011], [2.136294, 41.416006], [2.136069, 41.415399], [2.13633, 41.415158], [2.137153, 41.414398], [2.13768, 41.414224], [2.13786, 41.414077], [2.137885, 41.414056], [2.137792, 41.414022], [2.137786, 41.414021], [2.137776, 41.414016], [2.137767, 41.414012], [2.137758, 41.414007], [2.13775, 41.414002], [2.137742, 41.413996], [2.137735, 41.413991], [2.137728, 41.413984], [2.137722, 41.413978], [2.137717, 41.413971], [2.137711, 41.413963], [2.137708, 41.413956], [2.137705, 41.413948], [2.137702, 41.413941], [2.137701, 41.413934], [2.1377, 41.413926], [2.137699, 41.413918], [2.1377, 41.413911], [2.1377, 41.413903], [2.137702, 41.413896], [2.137704, 41.413889], [2.138072, 41.412439], [2.138207, 41.41192], [2.138249, 41.411765], [2.138263, 41.41171], [2.138269, 41.41168], [2.13827, 41.411678], [2.138282, 41.411621], [2.138287, 41.411592], [2.138296, 41.411551], [2.138307, 41.411496], [2.138315, 41.411452], [2.138317, 41.411407], [2.138316, 41.411366], [2.138315, 41.411346], [2.138308, 41.411296], [2.138299, 41.411241], [2.138293, 41.411208], [2.138293, 41.411207], [2.138291, 41.411199], [2.138277, 41.411139], [2.138261, 41.411092], [2.138238, 41.411035], [2.138198, 41.410953], [2.138161, 41.410894], [2.138107, 41.410814], [2.138063, 41.41076], [2.137992, 41.410687], [2.137941, 41.410644], [2.13791, 41.410622], [2.137836, 41.410564], [2.137785, 41.410526], [2.137732, 41.41049], [2.13766, 41.410455], [2.13761, 41.410433], [2.137521, 41.410398], [2.137376, 41.410344], [2.137151, 41.410258], [2.137326, 41.409907], [2.137334, 41.409889], [2.13734, 41.409871], [2.137344, 41.409852], [2.137347, 41.409834], [2.137348, 41.409815], [2.137348, 41.409796], [2.137346, 41.409777], [2.137342, 41.409759], [2.137336, 41.40974], [2.13733, 41.409722], [2.137321, 41.409704], [2.137295, 41.409657], [2.137289, 41.409647], [2.137284, 41.409635], [2.137266, 41.409598], [2.137257, 41.409572], [2.137255, 41.409539], [2.137264, 41.409502], [2.138025, 41.408044], [2.138027, 41.408042], [2.138399, 41.407316], [2.139301, 41.405556], [2.139304, 41.405549], [2.13935, 41.405462], [2.139415, 41.405356], [2.139471, 41.405279], [2.139512, 41.405224], [2.139622, 41.405133], [2.139713, 41.405072], [2.140698, 41.404454], [2.13998, 41.404097], [2.139779, 41.403997], [2.139625, 41.403919], [2.139489, 41.403848], [2.139432, 41.403817], [2.139368, 41.403782], [2.13907, 41.403623], [2.138977, 41.403569], [2.138845, 41.403489], [2.138749, 41.403427], [2.138586, 41.403318], [2.138465, 41.403236], [2.138345, 41.403152], [2.138227, 41.403068], [2.138134, 41.402999], [2.138098, 41.402971], [2.138065, 41.402946], [2.138041, 41.402929], [2.138009, 41.402906], [2.137976, 41.40288], [2.137938, 41.402848], [2.137875, 41.402795], [2.137826, 41.402748], [2.137755, 41.402681], [2.137659, 41.402587], [2.137565, 41.402492], [2.137355, 41.402277], [2.136992, 41.401923], [2.136874, 41.401808], [2.136384, 41.401345], [2.136092, 41.401109], [2.135801, 41.400868], [2.135323, 41.400473], [2.135106, 41.400282], [2.134245, 41.39944], [2.134175, 41.399364], [2.133343, 41.400439], [2.133188, 41.40064], [2.132948, 41.40095], [2.131844, 41.402373], [2.131461, 41.402867], [2.130478, 41.404134], [2.130018, 41.404737], [2.126885, 41.402987], [2.125226, 41.402059], [2.125157, 41.402133], [2.125113, 41.402173], [2.125074, 41.402207], [2.125068, 41.402213], [2.125059, 41.402221], [2.124994, 41.402251], [2.124951, 41.402271], [2.124881, 41.402312], [2.124864, 41.402322], [2.124802, 41.40236], [2.124807, 41.402457], [2.124797, 41.402606], [2.124767, 41.402739], [2.124717, 41.402885], [2.124648, 41.403014], [2.124785, 41.403075], [2.124747, 41.403176], [2.124665, 41.40322], [2.124588, 41.40321], [2.12451, 41.403271], [2.124416, 41.403345], [2.124303, 41.403434], [2.124164, 41.403569], [2.124055, 41.403674], [2.123973, 41.403753], [2.123985, 41.403759], [2.123946, 41.403795], [2.123905, 41.403832], [2.123906, 41.403833], [2.123901, 41.403836], [2.123792, 41.403935], [2.123769, 41.40402], [2.123654, 41.404075], [2.12358, 41.404176], [2.123527, 41.404246], [2.123511, 41.404268], [2.123452, 41.404347], [2.123488, 41.404354], [2.12342, 41.40446], [2.123287, 41.404662], [2.123177, 41.40486], [2.123145, 41.404924], [2.12313, 41.404975], [2.123006, 41.405431], [2.122942, 41.405515], [2.122917, 41.405593], [2.122901, 41.40563], [2.122861, 41.405695], [2.122809, 41.405782], [2.122797, 41.405821], [2.122774, 41.405929], [2.122015, 41.406847], [2.121841, 41.407066], [2.122023, 41.407205], [2.122268, 41.4074], [2.122634, 41.407753], [2.122524, 41.40782], [2.12241, 41.407902], [2.122338, 41.407976], [2.12211, 41.408384], [2.122103, 41.408397], [2.12204, 41.408585], [2.121997, 41.408712], [2.121933, 41.408883], [2.121901, 41.408968], [2.121922, 41.409021], [2.121967, 41.409351], [2.121994, 41.409462], [2.121987, 41.409492], [2.121984, 41.409524], [2.121977, 41.409567], [2.121973, 41.409605], [2.121982, 41.409629], [2.121992, 41.409652], [2.122, 41.409669], [2.121998, 41.409683], [2.121997, 41.409698], [2.121993, 41.40974], [2.121995, 41.409768], [2.122002, 41.409802], [2.122007, 41.409835], [2.12201, 41.409868], [2.122012, 41.4099], [2.122006, 41.409937], [2.121996, 41.40996], [2.121982, 41.409977], [2.121968, 41.409997], [2.121931, 41.410021], [2.121916, 41.41003], [2.121897, 41.410044], [2.121882, 41.410056], [2.121868, 41.410069], [2.121849, 41.41009], [2.121828, 41.41011], [2.12181, 41.410131], [2.121774, 41.410156], [2.121724, 41.410195], [2.121686, 41.410219], [2.121662, 41.410233], [2.121648, 41.410241], [2.121607, 41.410267], [2.121555, 41.410297], [2.121501, 41.410335], [2.121458, 41.410367], [2.121425, 41.410392], [2.121402, 41.410408], [2.121378, 41.410432], [2.121372, 41.410443], [2.121356, 41.410461], [2.121341, 41.410476], [2.121323, 41.410492], [2.121309, 41.410505], [2.121295, 41.410519], [2.121276, 41.410556], [2.12126, 41.410592], [2.121251, 41.410613], [2.121236, 41.410644], [2.121213, 41.410667], [2.121201, 41.410675], [2.121181, 41.410693], [2.121156, 41.410716], [2.121137, 41.410728], [2.121117, 41.41074], [2.121108, 41.410751], [2.121098, 41.410762], [2.121091, 41.410801], [2.121083, 41.410838], [2.12108, 41.410859], [2.121071, 41.410888], [2.121066, 41.410907], [2.121036, 41.410935], [2.121013, 41.41098], [2.120972, 41.411022], [2.120958, 41.411034], [2.120946, 41.411042], [2.12088, 41.411084], [2.120803, 41.411134], [2.120735, 41.411181], [2.120685, 41.411214], [2.120595, 41.411268], [2.120505, 41.411327], [2.120481, 41.411351], [2.120436, 41.411371], [2.120405, 41.411395], [2.120369, 41.411429], [2.120343, 41.41145], [2.120309, 41.411469], [2.120285, 41.41149], [2.119583, 41.412353], [2.119515, 41.41244], [2.119487, 41.412476], [2.119496, 41.412478], [2.119547, 41.412513], [2.119587, 41.412574], [2.119599, 41.412633], [2.119613, 41.412837], [2.119628, 41.412997], [2.119637, 41.413145], [2.119599, 41.413218], [2.119573, 41.413248], [2.119405, 41.413433], [2.119356, 41.413493], [2.119274, 41.41369], [2.119192, 41.414003], [2.119128, 41.414119], [2.119071, 41.414203], [2.11902, 41.414255], [2.118966, 41.414359], [2.118929, 41.41442], [2.118885, 41.414541], [2.118859, 41.414654], [2.118836, 41.414732], [2.118838, 41.41481], [2.118885, 41.414873], [2.118973, 41.414919], [2.119403, 41.414985], [2.119483, 41.41499], [2.119606, 41.414991], [2.119774, 41.414976], [2.119904, 41.414951], [2.120036, 41.414929], [2.120103, 41.414917], [2.120179, 41.41493], [2.120232, 41.414956], [2.120282, 41.415001], [2.120305, 41.415052], [2.120304, 41.415117], [2.120284, 41.41518], [2.120162, 41.415354], [2.1201, 41.415453], [2.120058, 41.415577], [2.120035, 41.415685], [2.120038, 41.415786], [2.12003, 41.415891], [2.120031, 41.415978], [2.120051, 41.416082], [2.120101, 41.416144], [2.120175, 41.416166], [2.120264, 41.41616], [2.120403, 41.416096], [2.120673, 41.415975], [2.12074, 41.415954], [2.120793, 41.415955], [2.120852, 41.415968], [2.120919, 41.416013], [2.120963, 41.416052], [2.120989, 41.416091], [2.121028, 41.416205], [2.121084, 41.416347], [2.12114, 41.416492], [2.121168, 41.416531], [2.121302, 41.416706], [2.121403, 41.416822], [2.121481, 41.416899], [2.121543, 41.416942], [2.121581, 41.41695], [2.121643, 41.416932], [2.121692, 41.416898], [2.121731, 41.41685], [2.121751, 41.416785], [2.121754, 41.416722], [2.121741, 41.416668], [2.12172, 41.416615], [2.121711, 41.416554], [2.121726, 41.416469], [2.121754, 41.416392], [2.121796, 41.416316], [2.121844, 41.416266], [2.121893, 41.416228], [2.121963, 41.4162], [2.122054, 41.416175], [2.122129, 41.416154], [2.122188, 41.416124], [2.122225, 41.416056], [2.122225, 41.415902], [2.122218, 41.415845], [2.122229, 41.415758], [2.122261, 41.4157], [2.122315, 41.415634], [2.122356, 41.415578], [2.122376, 41.415512], [2.122404, 41.4154], [2.122419, 41.415203], [2.122451, 41.415112], [2.122504, 41.415069], [2.122562, 41.41506], [2.122627, 41.41507], [2.122719, 41.415123], [2.123005, 41.415349], [2.123076, 41.415389], [2.123136, 41.415397], [2.123192, 41.415383], [2.12323, 41.415349], [2.123241, 41.415291], [2.123271, 41.415185], [2.123313, 41.415118], [2.123359, 41.415046], [2.123415, 41.414984], [2.12343, 41.41492], [2.123424, 41.414846], [2.123369, 41.414647], [2.123268, 41.414314], [2.123226, 41.414217], [2.123204, 41.414092], [2.123231, 41.414], [2.123268, 41.413944], [2.123375, 41.413842], [2.123452, 41.413787], [2.123514, 41.41375], [2.123575, 41.413725], [2.124007, 41.413634], [2.124108, 41.413635], [2.124204, 41.413652], [2.124289, 41.413698], [2.124437, 41.413775], [2.124585, 41.413848], [2.124791, 41.413914], [2.125018, 41.413967], [2.125121, 41.41398], [2.125312, 41.413991], [2.125439, 41.414002], [2.125501, 41.414037], [2.125534, 41.414092], [2.125536, 41.414133], [2.125513, 41.414182], [2.125445, 41.414244], [2.125394, 41.414307], [2.125331, 41.41439], [2.125143, 41.414841], [2.125132, 41.414915], [2.125136, 41.41498], [2.125209, 41.415087], [2.125272, 41.415187], [2.125323, 41.415303], [2.125375, 41.415401], [2.125517, 41.415639], [2.12555, 41.415664], [2.125614, 41.415713], [2.125755, 41.41577], [2.125891, 41.415804], [2.126121, 41.415887], [2.126238, 41.41596], [2.126311, 41.416033], [2.126363, 41.416129], [2.12644, 41.416295], [2.126505, 41.416453], [2.126553, 41.41661], [2.126583, 41.416661], [2.126626, 41.416708], [2.126687, 41.416747], [2.126775, 41.416775], [2.126895, 41.416783], [2.127027, 41.416775], [2.127188, 41.416754], [2.127407, 41.4167], [2.127577, 41.416658], [2.127721, 41.416643], [2.127802, 41.416638], [2.128115, 41.416624], [2.12831, 41.416628], [2.128446, 41.41666], [2.128548, 41.416718], [2.128631, 41.416857], [2.128709, 41.416977], [2.128829, 41.417186], [2.128941, 41.417349], [2.128979, 41.417332], [2.129207, 41.417237], [2.129279, 41.417206], [2.129446, 41.417135], [2.129707, 41.417025], [2.129827, 41.416973], [2.130168, 41.416828], [2.130427, 41.416718], [2.130709, 41.416598], [2.130857, 41.416534], [2.131105, 41.416428], [2.131222, 41.416378], [2.131258, 41.416363], [2.131314, 41.416438], [2.13132, 41.416436], [2.131351, 41.416477], [2.1313, 41.416499], [2.13129, 41.416487], [2.131209, 41.416521], [2.131188, 41.41653], [2.131064, 41.416583], [2.131048, 41.416561], [2.130917, 41.416618], [2.13081, 41.416666], [2.130693, 41.416718], [2.130457, 41.416822], [2.130221, 41.416928], [2.130046, 41.417006], [2.129922, 41.41706], [2.129803, 41.41711], [2.129708, 41.417148], [2.129675, 41.417148], [2.129587, 41.417186], [2.129459, 41.41724], [2.129289, 41.417314], [2.129279, 41.417318], [2.129123, 41.417385], [2.129011, 41.417432], [2.128905, 41.417478], [2.128937, 41.417531], [2.128774, 41.417696], [2.1285, 41.417943], [2.12809, 41.418167], [2.127948, 41.418283], [2.127896, 41.418362], [2.127901, 41.418423], [2.127945, 41.418476], [2.128099, 41.418591], [2.128158, 41.418682], [2.128182, 41.418765], [2.128151, 41.418841], [2.127937, 41.419062], [2.12776, 41.419144], [2.127594, 41.419192], [2.127483, 41.419244], [2.127471, 41.419406], [2.1276, 41.419528], [2.127874, 41.419632], [2.128059, 41.419747], [2.128179, 41.419763], [2.128342, 41.419728], [2.12847, 41.419756], [2.128707, 41.419936], [2.128789, 41.419953], [2.12887, 41.419942], [2.128918, 41.419901]]]]
    },
    "properties": {
      "neighbourhood": "Sant Gervasi - la Bonanova",
      "neighbourhood_group": "Sarrià-Sant Gervasi"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.196051, 41.396493], [2.199825, 41.393652], [2.200862, 41.394547], [2.204351, 41.39183], [2.204366, 41.39184], [2.20442, 41.39188], [2.204605, 41.392021], [2.204675, 41.392085], [2.205004, 41.391834], [2.20516, 41.391718], [2.205251, 41.39165], [2.205261, 41.391642], [2.205379, 41.391547], [2.205502, 41.391442], [2.20562, 41.391333], [2.205733, 41.391221], [2.20628, 41.390806], [2.206322, 41.390774], [2.20577, 41.390357], [2.205015, 41.390936], [2.202131, 41.390035], [2.20143, 41.388815], [2.202773, 41.387803], [2.203002, 41.387975], [2.203702, 41.387449], [2.203376, 41.386904], [2.203056, 41.386452], [2.202624, 41.385919], [2.202223, 41.385478], [2.201729, 41.385002], [2.201221, 41.384569], [2.200807, 41.38425], [2.200134, 41.383837], [2.199586, 41.383562], [2.199162, 41.38388], [2.199907, 41.384231], [2.200043, 41.384184], [2.200414, 41.384413], [2.200725, 41.384638], [2.20122, 41.385053], [2.20191, 41.385707], [2.202693, 41.386624], [2.202412, 41.386835], [2.201302, 41.386], [2.201508, 41.385844], [2.200852, 41.38535], [2.200128, 41.385896], [2.201895, 41.387225], [2.200474, 41.388297], [2.200355, 41.388208], [2.200237, 41.388297], [2.198413, 41.386925], [2.198531, 41.386835], [2.198413, 41.386747], [2.199543, 41.385894], [2.20008, 41.38521], [2.19974, 41.384967], [2.196418, 41.387446], [2.195922, 41.387566], [2.195791, 41.387918], [2.193648, 41.386365], [2.193574, 41.386321], [2.19338, 41.386453], [2.192983, 41.386761], [2.192574, 41.387066], [2.189201, 41.38965], [2.18796, 41.390601], [2.189134, 41.391478], [2.189966, 41.3921], [2.191408, 41.393141], [2.191829, 41.393445], [2.196051, 41.396493]]]]
    },
    "properties": {
      "neighbourhood": "la Vila Olímpica del Poblenou",
      "neighbourhood_group": "Sant Martí"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.148402, 41.406832], [2.148462, 41.406783], [2.148493, 41.406806], [2.148507, 41.406794], [2.148532, 41.406791], [2.148538, 41.406796], [2.148549, 41.406787], [2.148743, 41.406632], [2.148806, 41.406677], [2.148949, 41.406556], [2.149017, 41.406599], [2.148867, 41.406731], [2.149083, 41.406862], [2.149142, 41.406823], [2.149517, 41.406511], [2.149952, 41.406155], [2.150049, 41.405974], [2.150069, 41.405819], [2.149985, 41.40561], [2.149979, 41.405455], [2.150033, 41.405241], [2.150372, 41.404381], [2.15034, 41.404161], [2.150044, 41.403776], [2.149904, 41.403256], [2.149987, 41.403073], [2.150189, 41.402806], [2.150872, 41.401904], [2.151044, 41.401702], [2.151167, 41.401502], [2.151224, 41.401087], [2.151174, 41.400769], [2.151187, 41.400565], [2.150805, 41.400727], [2.150552, 41.40083], [2.150507, 41.400847], [2.150454, 41.400869], [2.150357, 41.400905], [2.150277, 41.400935], [2.15021, 41.400954], [2.150184, 41.400963], [2.150155, 41.400973], [2.15013, 41.400981], [2.150127, 41.400982], [2.150119, 41.400985], [2.149909, 41.401041], [2.149857, 41.401055], [2.149792, 41.401073], [2.149726, 41.401089], [2.149634, 41.40111], [2.149541, 41.40113], [2.149449, 41.401148], [2.149343, 41.401166], [2.149237, 41.401181], [2.14913, 41.401195], [2.149029, 41.401207], [2.14902, 41.401208], [2.1487, 41.401232], [2.148503, 41.401239], [2.148483, 41.40124], [2.148442, 41.40124], [2.148401, 41.40124], [2.148345, 41.401239], [2.148163, 41.401234], [2.14813, 41.401232], [2.148069, 41.401228], [2.147983, 41.401223], [2.147632, 41.401192], [2.146713, 41.401716], [2.146203, 41.401996], [2.145594, 41.402331], [2.144912, 41.402716], [2.14443, 41.402876], [2.144021, 41.402994], [2.143683, 41.403086], [2.143492, 41.403144], [2.143346, 41.403196], [2.143206, 41.403254], [2.143061, 41.403327], [2.142928, 41.403418], [2.142777, 41.403522], [2.142736, 41.403551], [2.142486, 41.403726], [2.142458, 41.403745], [2.142429, 41.403764], [2.142399, 41.403783], [2.142349, 41.403814], [2.142298, 41.403844], [2.142246, 41.403873], [2.142192, 41.403901], [2.142134, 41.403929], [2.142076, 41.403956], [2.142017, 41.403981], [2.141995, 41.40399], [2.140698, 41.404454], [2.139713, 41.405072], [2.139622, 41.405133], [2.139512, 41.405224], [2.139471, 41.405279], [2.139415, 41.405356], [2.13935, 41.405462], [2.139304, 41.405549], [2.139301, 41.405556], [2.138399, 41.407316], [2.138027, 41.408042], [2.138025, 41.408044], [2.137264, 41.409502], [2.137255, 41.409539], [2.137257, 41.409572], [2.137266, 41.409598], [2.137284, 41.409635], [2.137289, 41.409647], [2.137295, 41.409657], [2.137321, 41.409704], [2.13733, 41.409722], [2.137336, 41.40974], [2.137342, 41.409759], [2.137346, 41.409777], [2.137348, 41.409796], [2.137348, 41.409815], [2.137347, 41.409834], [2.137344, 41.409852], [2.13734, 41.409871], [2.137334, 41.409889], [2.137326, 41.409907], [2.137151, 41.410258], [2.137376, 41.410344], [2.137521, 41.410398], [2.13761, 41.410433], [2.13766, 41.410455], [2.137732, 41.41049], [2.137785, 41.410526], [2.137836, 41.410564], [2.13791, 41.410622], [2.137941, 41.410644], [2.137992, 41.410687], [2.138063, 41.41076], [2.138107, 41.410814], [2.138161, 41.410894], [2.138198, 41.410953], [2.138238, 41.411035], [2.138261, 41.411092], [2.138277, 41.411139], [2.138291, 41.411199], [2.138293, 41.411207], [2.138293, 41.411208], [2.138299, 41.411241], [2.138308, 41.411296], [2.138315, 41.411346], [2.138316, 41.411366], [2.138317, 41.411407], [2.138315, 41.411452], [2.138307, 41.411496], [2.138296, 41.411551], [2.138287, 41.411592], [2.138282, 41.411621], [2.13827, 41.411678], [2.138269, 41.41168], [2.138263, 41.41171], [2.138249, 41.411765], [2.138207, 41.41192], [2.138072, 41.412439], [2.137704, 41.413889], [2.137702, 41.413896], [2.1377, 41.413903], [2.1377, 41.413911], [2.137699, 41.413918], [2.1377, 41.413926], [2.137701, 41.413934], [2.137702, 41.413941], [2.137705, 41.413948], [2.137708, 41.413956], [2.137711, 41.413963], [2.137717, 41.413971], [2.137722, 41.413978], [2.137728, 41.413984], [2.137735, 41.413991], [2.137742, 41.413996], [2.13775, 41.414002], [2.137758, 41.414007], [2.137767, 41.414012], [2.137776, 41.414016], [2.137786, 41.414021], [2.137792, 41.414022], [2.137885, 41.414056], [2.139822, 41.412573], [2.13995, 41.41245], [2.140211, 41.412251], [2.140702, 41.411894], [2.140916, 41.411772], [2.140948, 41.411767], [2.140993, 41.41176], [2.141026, 41.411755], [2.141922, 41.411649], [2.142779, 41.411567], [2.143126, 41.411536], [2.144531, 41.41143], [2.145012, 41.411357], [2.145226, 41.41124], [2.145345, 41.411152], [2.145366, 41.411126], [2.145706, 41.41071], [2.145798, 41.410512], [2.145965, 41.410137], [2.146306, 41.409707], [2.146702, 41.409193], [2.147179, 41.408581], [2.14743, 41.408268], [2.147598, 41.408092], [2.148064, 41.407706], [2.148668, 41.407221], [2.148599, 41.40717], [2.148385, 41.407009], [2.148512, 41.406909], [2.148402, 41.406832]]]]
    },
    "properties": {
      "neighbourhood": "el Putxet i el Farró",
      "neighbourhood_group": "Sarrià-Sant Gervasi"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.150986, 41.420235], [2.1513, 41.420197], [2.151615, 41.420209], [2.15176, 41.420174], [2.151728, 41.419848], [2.151689, 41.41951], [2.151622, 41.419189], [2.151427, 41.418828], [2.151129, 41.418435], [2.150951, 41.418035], [2.150942, 41.41792], [2.150981, 41.417814], [2.151249, 41.417535], [2.151761, 41.417191], [2.151913, 41.417048], [2.151942, 41.416936], [2.152708, 41.416847], [2.152947, 41.416659], [2.152956, 41.416654], [2.152911, 41.416625], [2.152679, 41.41648], [2.152566, 41.41641], [2.152453, 41.416347], [2.152318, 41.416264], [2.152211, 41.416231], [2.152108, 41.416242], [2.151955, 41.416263], [2.15194, 41.416313], [2.152152, 41.416472], [2.152278, 41.416567], [2.152398, 41.416684], [2.152414, 41.416726], [2.152391, 41.416749], [2.152344, 41.416741], [2.152203, 41.41667], [2.152081, 41.416623], [2.151947, 41.416594], [2.151784, 41.416573], [2.151604, 41.416555], [2.151368, 41.416528], [2.151222, 41.416508], [2.151125, 41.416502], [2.150963, 41.416482], [2.150812, 41.416466], [2.150698, 41.41645], [2.150601, 41.416435], [2.150535, 41.416412], [2.150454, 41.416374], [2.150376, 41.416315], [2.150365, 41.416292], [2.150335, 41.416264], [2.150328, 41.416249], [2.150332, 41.416229], [2.150386, 41.416173], [2.150462, 41.416135], [2.150537, 41.416114], [2.150608, 41.416095], [2.150672, 41.416078], [2.150731, 41.416056], [2.150816, 41.416017], [2.150888, 41.415985], [2.150967, 41.415944], [2.151019, 41.415908], [2.151043, 41.415867], [2.151046, 41.415816], [2.150975, 41.415701], [2.150058, 41.415841], [2.149926, 41.415846], [2.149786, 41.415837], [2.149703, 41.41583], [2.149535, 41.415833], [2.149428, 41.415813], [2.149247, 41.415774], [2.14916, 41.415744], [2.14911, 41.415737], [2.149028, 41.415736], [2.148947, 41.415721], [2.148799, 41.415709], [2.148676, 41.415776], [2.148625, 41.415809], [2.148574, 41.415846], [2.148543, 41.415868], [2.148516, 41.415888], [2.148493, 41.415911], [2.148472, 41.415935], [2.148456, 41.415953], [2.148407, 41.416006], [2.148356, 41.416062], [2.148145, 41.415589], [2.148125, 41.415544], [2.14761, 41.415134], [2.147142, 41.41476], [2.146725, 41.414512], [2.145822, 41.413973], [2.144858, 41.413404], [2.144734, 41.414058], [2.144734, 41.414059], [2.144722, 41.41412], [2.144714, 41.414166], [2.144714, 41.414205], [2.144751, 41.414447], [2.144762, 41.41448], [2.144763, 41.414482], [2.144779, 41.414523], [2.144787, 41.414542], [2.144803, 41.414572], [2.144821, 41.414601], [2.144839, 41.414627], [2.14484, 41.41463], [2.144858, 41.414655], [2.144878, 41.41468], [2.1449, 41.414704], [2.144923, 41.414727], [2.144949, 41.414749], [2.144976, 41.41477], [2.145004, 41.414789], [2.145081, 41.414842], [2.145161, 41.414893], [2.145241, 41.414942], [2.145258, 41.414953], [2.145278, 41.414964], [2.145297, 41.414974], [2.145318, 41.414984], [2.145337, 41.414993], [2.145422, 41.415034], [2.146533, 41.415578], [2.146589, 41.415608], [2.146637, 41.415639], [2.146678, 41.415665], [2.146715, 41.415693], [2.14675, 41.415723], [2.146782, 41.415755], [2.146811, 41.415789], [2.146837, 41.415824], [2.14686, 41.41586], [2.146879, 41.415897], [2.146895, 41.415935], [2.146907, 41.415974], [2.146916, 41.416013], [2.146995, 41.416379], [2.146842, 41.41646], [2.146366, 41.416718], [2.14633, 41.416737], [2.146011, 41.416908], [2.145548, 41.416694], [2.145508, 41.416674], [2.145485, 41.416663], [2.14546, 41.416653], [2.145435, 41.416643], [2.145408, 41.416635], [2.145381, 41.416629], [2.145354, 41.416623], [2.145326, 41.416619], [2.145297, 41.416617], [2.145269, 41.416616], [2.14524, 41.416616], [2.145205, 41.416618], [2.145173, 41.416622], [2.145142, 41.416627], [2.145111, 41.416634], [2.145081, 41.416642], [2.145052, 41.416653], [2.145024, 41.416664], [2.144996, 41.416678], [2.144986, 41.416685], [2.144977, 41.416691], [2.144968, 41.416697], [2.14491, 41.416737], [2.144603, 41.416979], [2.144552, 41.417018], [2.144503, 41.417058], [2.144455, 41.417098], [2.144409, 41.417139], [2.144379, 41.417169], [2.14435, 41.4172], [2.144321, 41.417231], [2.144168, 41.417421], [2.144126, 41.417505], [2.144088, 41.417605], [2.144047, 41.41773], [2.144044, 41.417742], [2.144035, 41.417777], [2.144026, 41.417826], [2.144019, 41.417874], [2.144015, 41.417923], [2.144015, 41.417972], [2.144017, 41.41802], [2.144019, 41.418053], [2.144022, 41.418085], [2.144026, 41.418117], [2.144051, 41.418338], [2.144059, 41.4184], [2.144067, 41.418461], [2.144076, 41.418523], [2.144085, 41.418574], [2.144095, 41.418624], [2.144104, 41.418674], [2.144111, 41.418706], [2.144118, 41.418738], [2.144125, 41.418769], [2.144134, 41.41881], [2.144144, 41.41885], [2.144154, 41.41889], [2.144167, 41.418942], [2.144181, 41.418994], [2.144195, 41.419047], [2.14422, 41.419117], [2.144261, 41.41919], [2.144328, 41.419294], [2.144466, 41.419511], [2.144478, 41.419533], [2.144489, 41.419554], [2.144498, 41.419576], [2.144506, 41.419598], [2.144513, 41.41962], [2.144518, 41.419642], [2.144521, 41.419666], [2.144522, 41.419689], [2.144522, 41.419713], [2.14452, 41.419737], [2.144516, 41.419761], [2.144511, 41.419784], [2.144506, 41.419802], [2.144499, 41.41982], [2.144492, 41.419838], [2.144484, 41.419855], [2.144474, 41.419872], [2.144464, 41.419889], [2.144449, 41.419911], [2.144432, 41.419933], [2.144427, 41.419939], [2.144407, 41.419961], [2.144385, 41.419981], [2.144362, 41.42], [2.144338, 41.420019], [2.144312, 41.420036], [2.144286, 41.420053], [2.144264, 41.420065], [2.144241, 41.420076], [2.144218, 41.420087], [2.144194, 41.420096], [2.144169, 41.420105], [2.144143, 41.420113], [2.144123, 41.420119], [2.14407, 41.420131], [2.144055, 41.420198], [2.144059, 41.420198], [2.144199, 41.420321], [2.144546, 41.420561], [2.144701, 41.420725], [2.144837, 41.420821], [2.145161, 41.420924], [2.145696, 41.421018], [2.146952, 41.421279], [2.147772, 41.421605], [2.147825, 41.421616], [2.147919, 41.421634], [2.149326, 41.421659], [2.149404, 41.421635], [2.149497, 41.421564], [2.149523, 41.421461], [2.149543, 41.42077], [2.149538, 41.42071], [2.149533, 41.420645], [2.149369, 41.420476], [2.14937, 41.420419], [2.149407, 41.42039], [2.15013, 41.420333], [2.150236, 41.420318], [2.150986, 41.420235]]]]
    },
    "properties": {
      "neighbourhood": "el Coll",
      "neighbourhood_group": "Gràcia"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.136212, 41.42369], [2.136428, 41.423584], [2.13704, 41.423531], [2.137207, 41.423494], [2.137411, 41.423427], [2.137691, 41.423273], [2.13784, 41.423134], [2.138018, 41.422908], [2.138385, 41.422067], [2.138452, 41.42191], [2.13841, 41.421725], [2.138333, 41.421618], [2.138206, 41.421551], [2.137843, 41.421406], [2.137713, 41.421323], [2.137679, 41.421236], [2.137681, 41.421068], [2.137739, 41.420972], [2.137824, 41.420913], [2.13808, 41.420823], [2.138881, 41.420592], [2.140025, 41.420272], [2.140151, 41.420558], [2.140387, 41.421091], [2.140473, 41.421129], [2.140576, 41.421174], [2.140916, 41.421324], [2.141137, 41.421375], [2.141727, 41.421567], [2.141866, 41.421589], [2.142014, 41.421569], [2.142135, 41.421529], [2.143265, 41.420664], [2.143786, 41.420247], [2.143892, 41.420178], [2.144055, 41.420198], [2.14407, 41.420131], [2.144123, 41.420119], [2.144143, 41.420113], [2.144169, 41.420105], [2.144194, 41.420096], [2.144218, 41.420087], [2.144241, 41.420076], [2.144264, 41.420065], [2.144286, 41.420053], [2.144312, 41.420036], [2.144338, 41.420019], [2.144362, 41.42], [2.144385, 41.419981], [2.144407, 41.419961], [2.144427, 41.419939], [2.144432, 41.419933], [2.144449, 41.419911], [2.144464, 41.419889], [2.144474, 41.419872], [2.144484, 41.419855], [2.144492, 41.419838], [2.144499, 41.41982], [2.144506, 41.419802], [2.144511, 41.419784], [2.144516, 41.419761], [2.14452, 41.419737], [2.144522, 41.419713], [2.144522, 41.419689], [2.144521, 41.419666], [2.144518, 41.419642], [2.144513, 41.41962], [2.144506, 41.419598], [2.144498, 41.419576], [2.144489, 41.419554], [2.144478, 41.419533], [2.144466, 41.419511], [2.144328, 41.419294], [2.144261, 41.41919], [2.14422, 41.419117], [2.144195, 41.419047], [2.144181, 41.418994], [2.144167, 41.418942], [2.144154, 41.41889], [2.144144, 41.41885], [2.144134, 41.41881], [2.144125, 41.418769], [2.144118, 41.418738], [2.144111, 41.418706], [2.144104, 41.418674], [2.144095, 41.418624], [2.144085, 41.418574], [2.144076, 41.418523], [2.144067, 41.418461], [2.144059, 41.4184], [2.144051, 41.418338], [2.144026, 41.418117], [2.144022, 41.418085], [2.144019, 41.418053], [2.144017, 41.41802], [2.144015, 41.417972], [2.144015, 41.417923], [2.144019, 41.417874], [2.144026, 41.417826], [2.144035, 41.417777], [2.144044, 41.417742], [2.144047, 41.41773], [2.144088, 41.417605], [2.144126, 41.417505], [2.144168, 41.417421], [2.144321, 41.417231], [2.14435, 41.4172], [2.144379, 41.417169], [2.144409, 41.417139], [2.144455, 41.417098], [2.144503, 41.417058], [2.144552, 41.417018], [2.144603, 41.416979], [2.14491, 41.416737], [2.144968, 41.416697], [2.144977, 41.416691], [2.144986, 41.416685], [2.144996, 41.416678], [2.145024, 41.416664], [2.145052, 41.416653], [2.145081, 41.416642], [2.145111, 41.416634], [2.145142, 41.416627], [2.145173, 41.416622], [2.145205, 41.416618], [2.14524, 41.416616], [2.145269, 41.416616], [2.145297, 41.416617], [2.145326, 41.416619], [2.145354, 41.416623], [2.145381, 41.416629], [2.145408, 41.416635], [2.145435, 41.416643], [2.14546, 41.416653], [2.145485, 41.416663], [2.145508, 41.416674], [2.145548, 41.416694], [2.146011, 41.416908], [2.14633, 41.416737], [2.146366, 41.416718], [2.146842, 41.41646], [2.146995, 41.416379], [2.146916, 41.416013], [2.146907, 41.415974], [2.146895, 41.415935], [2.146879, 41.415897], [2.14686, 41.41586], [2.146837, 41.415824], [2.146811, 41.415789], [2.146782, 41.415755], [2.14675, 41.415723], [2.146715, 41.415693], [2.146678, 41.415665], [2.146637, 41.415639], [2.146589, 41.415608], [2.146533, 41.415578], [2.145422, 41.415034], [2.145337, 41.414993], [2.145318, 41.414984], [2.145297, 41.414974], [2.145278, 41.414964], [2.145258, 41.414953], [2.145241, 41.414942], [2.145161, 41.414893], [2.145081, 41.414842], [2.145004, 41.414789], [2.144976, 41.41477], [2.144949, 41.414749], [2.144923, 41.414727], [2.1449, 41.414704], [2.144878, 41.41468], [2.144858, 41.414655], [2.14484, 41.41463], [2.144839, 41.414627], [2.144821, 41.414601], [2.144803, 41.414572], [2.144787, 41.414542], [2.144779, 41.414523], [2.144763, 41.414482], [2.144762, 41.41448], [2.144751, 41.414447], [2.144714, 41.414205], [2.144714, 41.414166], [2.144722, 41.41412], [2.144734, 41.414059], [2.144734, 41.414058], [2.144858, 41.413404], [2.145822, 41.413973], [2.146725, 41.414512], [2.147142, 41.41476], [2.14761, 41.415134], [2.148125, 41.415544], [2.148145, 41.415589], [2.148356, 41.416062], [2.148407, 41.416006], [2.148456, 41.415953], [2.148472, 41.415935], [2.148493, 41.415911], [2.148516, 41.415888], [2.148543, 41.415868], [2.148574, 41.415846], [2.148625, 41.415809], [2.148676, 41.415776], [2.148799, 41.415709], [2.148947, 41.415721], [2.149028, 41.415736], [2.14911, 41.415737], [2.14916, 41.415744], [2.149247, 41.415774], [2.149428, 41.415813], [2.149535, 41.415833], [2.149703, 41.41583], [2.149786, 41.415837], [2.149926, 41.415846], [2.150058, 41.415841], [2.150975, 41.415701], [2.151046, 41.415816], [2.151043, 41.415867], [2.151019, 41.415908], [2.150967, 41.415944], [2.150888, 41.415985], [2.150816, 41.416017], [2.150731, 41.416056], [2.150672, 41.416078], [2.150608, 41.416095], [2.150537, 41.416114], [2.150462, 41.416135], [2.150386, 41.416173], [2.150332, 41.416229], [2.150328, 41.416249], [2.150335, 41.416264], [2.150365, 41.416292], [2.150391, 41.41627], [2.15045, 41.416252], [2.150512, 41.416205], [2.150599, 41.416156], [2.150666, 41.416132], [2.15075, 41.416114], [2.15086, 41.416084], [2.150948, 41.416065], [2.151003, 41.416052], [2.151054, 41.416019], [2.151145, 41.415952], [2.151174, 41.415913], [2.151196, 41.415875], [2.15121, 41.415821], [2.151187, 41.415714], [2.151152, 41.415618], [2.151103, 41.415507], [2.151095, 41.415468], [2.151101, 41.415446], [2.15109, 41.415426], [2.15103, 41.415406], [2.150969, 41.415395], [2.150912, 41.415389], [2.150709, 41.415371], [2.150616, 41.415361], [2.150474, 41.41533], [2.150267, 41.415279], [2.15013, 41.415232], [2.150028, 41.415196], [2.149962, 41.415167], [2.149842, 41.415103], [2.149745, 41.415033], [2.149659, 41.41494], [2.149625, 41.414885], [2.149613, 41.414829], [2.149618, 41.414812], [2.14964, 41.41475], [2.149668, 41.414704], [2.149775, 41.414521], [2.149787, 41.414502], [2.149799, 41.414482], [2.149809, 41.414461], [2.149818, 41.41444], [2.149825, 41.414419], [2.14983, 41.414397], [2.149834, 41.414375], [2.149879, 41.414062], [2.149883, 41.414016], [2.149885, 41.413971], [2.149885, 41.413925], [2.149883, 41.413879], [2.14988, 41.413834], [2.149875, 41.41379], [2.149867, 41.413745], [2.149856, 41.413701], [2.149844, 41.413657], [2.149657, 41.413069], [2.149595, 41.413062], [2.149035, 41.412996], [2.149461, 41.412539], [2.150216, 41.411726], [2.149665, 41.41144], [2.149093, 41.411143], [2.148031, 41.410594], [2.150085, 41.408535], [2.150138, 41.408487], [2.150688, 41.407991], [2.150507, 41.407881], [2.150123, 41.407596], [2.150085, 41.40757], [2.149583, 41.40723], [2.149495, 41.407169], [2.149083, 41.406862], [2.148867, 41.406731], [2.149017, 41.406599], [2.148949, 41.406556], [2.148806, 41.406677], [2.148743, 41.406632], [2.148549, 41.406787], [2.148538, 41.406796], [2.148532, 41.406791], [2.148507, 41.406794], [2.148493, 41.406806], [2.148462, 41.406783], [2.148402, 41.406832], [2.148512, 41.406909], [2.148385, 41.407009], [2.148599, 41.40717], [2.148668, 41.407221], [2.148064, 41.407706], [2.147598, 41.408092], [2.14743, 41.408268], [2.147179, 41.408581], [2.146702, 41.409193], [2.146306, 41.409707], [2.145965, 41.410137], [2.145798, 41.410512], [2.145706, 41.41071], [2.145366, 41.411126], [2.145345, 41.411152], [2.145226, 41.41124], [2.145012, 41.411357], [2.144531, 41.41143], [2.143126, 41.411536], [2.142779, 41.411567], [2.141922, 41.411649], [2.141026, 41.411755], [2.140993, 41.41176], [2.140948, 41.411767], [2.140916, 41.411772], [2.140702, 41.411894], [2.140211, 41.412251], [2.13995, 41.41245], [2.139822, 41.412573], [2.137885, 41.414056], [2.13786, 41.414077], [2.13768, 41.414224], [2.137153, 41.414398], [2.13633, 41.415158], [2.136069, 41.415399], [2.136294, 41.416006], [2.135191, 41.417011], [2.134215, 41.417827], [2.132319, 41.418572], [2.132155, 41.418598], [2.131288, 41.418245], [2.130538, 41.418346], [2.130238, 41.418696], [2.130077, 41.419143], [2.130121, 41.419402], [2.130148, 41.419539], [2.130153, 41.419598], [2.130147, 41.419636], [2.130104, 41.419678], [2.13006, 41.419692], [2.130013, 41.419688], [2.129967, 41.419666], [2.129927, 41.419638], [2.129885, 41.419603], [2.129855, 41.419576], [2.129813, 41.419547], [2.129771, 41.419517], [2.129718, 41.419492], [2.129665, 41.419476], [2.129614, 41.419465], [2.129565, 41.419462], [2.129521, 41.419468], [2.129481, 41.419478], [2.129417, 41.419505], [2.129361, 41.419537], [2.129287, 41.41956], [2.129483, 41.419539], [2.129687, 41.419593], [2.129831, 41.419791], [2.129896, 41.420029], [2.130127, 41.420121], [2.130543, 41.41997], [2.130681, 41.419853], [2.130803, 41.419582], [2.130888, 41.419476], [2.131001, 41.419424], [2.131155, 41.419419], [2.131312, 41.419501], [2.131651, 41.41967], [2.132127, 41.419835], [2.132202, 41.419908], [2.132229, 41.419991], [2.132213, 41.420076], [2.132008, 41.420301], [2.131747, 41.420639], [2.131482, 41.420929], [2.131372, 41.421029], [2.131296, 41.421147], [2.131272, 41.421323], [2.131301, 41.421365], [2.131405, 41.421414], [2.131662, 41.421427], [2.132131, 41.421501], [2.132488, 41.421534], [2.132844, 41.421604], [2.132983, 41.421723], [2.133134, 41.42183], [2.133329, 41.421858], [2.133566, 41.421821], [2.133806, 41.421812], [2.134046, 41.421887], [2.134241, 41.421924], [2.134536, 41.421921], [2.134742, 41.421871], [2.135212, 41.421455], [2.135245, 41.421453], [2.135273, 41.421484], [2.135268, 41.42151], [2.135052, 41.421901], [2.134713, 41.422288], [2.134671, 41.422347], [2.134626, 41.422378], [2.134507, 41.422449], [2.134428, 41.422499], [2.134321, 41.422586], [2.134274, 41.422637], [2.134238, 41.4227], [2.134229, 41.422789], [2.134302, 41.423048], [2.13442, 41.423286], [2.134505, 41.423432], [2.134666, 41.423642], [2.134792, 41.423614], [2.13484, 41.423724], [2.134864, 41.423754], [2.134898, 41.423789], [2.134987, 41.423841], [2.13506, 41.423897], [2.135176, 41.424002], [2.135252, 41.42409], [2.135321, 41.4242], [2.135373, 41.424309], [2.135386, 41.424346], [2.135387, 41.424376], [2.135379, 41.424408], [2.13536, 41.424436], [2.135121, 41.424652], [2.135084, 41.424699], [2.135065, 41.424734], [2.135056, 41.424768], [2.13506, 41.424803], [2.135077, 41.424835], [2.135159, 41.424878], [2.135762, 41.424679], [2.135885, 41.42462], [2.136062, 41.424457], [2.136095, 41.424377], [2.136122, 41.423871], [2.136212, 41.42369]]]]
    },
    "properties": {
      "neighbourhood": "Vallcarca i els Penitents",
      "neighbourhood_group": "Gràcia"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.159603, 41.40916], [2.160442, 41.408269], [2.160566, 41.408137], [2.16088, 41.407801], [2.161394, 41.407254], [2.162732, 41.405827], [2.163034, 41.405489], [2.163525, 41.404939], [2.162841, 41.404525], [2.162424, 41.404271], [2.162269, 41.40417], [2.161635, 41.403755], [2.163711, 41.402178], [2.164176, 41.401825], [2.165259, 41.401002], [2.164132, 41.400147], [2.16301, 41.399296], [2.162937, 41.399241], [2.161872, 41.398437], [2.1616, 41.398237], [2.160016, 41.397028], [2.159734, 41.396835], [2.159615, 41.396752], [2.159564, 41.396716], [2.15932, 41.396542], [2.155679, 41.395622], [2.155325, 41.396322], [2.15498, 41.396766], [2.154062, 41.397704], [2.153261, 41.398479], [2.153247, 41.398492], [2.153126, 41.398604], [2.15204, 41.399689], [2.151658, 41.400081], [2.151187, 41.400565], [2.151174, 41.400769], [2.151224, 41.401087], [2.151167, 41.401502], [2.151044, 41.401702], [2.150872, 41.401904], [2.150189, 41.402806], [2.149987, 41.403073], [2.149904, 41.403256], [2.150044, 41.403776], [2.15034, 41.404161], [2.150372, 41.404381], [2.150033, 41.405241], [2.149979, 41.405455], [2.149985, 41.40561], [2.150069, 41.405819], [2.150049, 41.405974], [2.149952, 41.406155], [2.149517, 41.406511], [2.149142, 41.406823], [2.149083, 41.406862], [2.149495, 41.407169], [2.149583, 41.40723], [2.150085, 41.40757], [2.150123, 41.407596], [2.150507, 41.407881], [2.150688, 41.407991], [2.150775, 41.408044], [2.150886, 41.408099], [2.150973, 41.408011], [2.151054, 41.408058], [2.151088, 41.408075], [2.151123, 41.408093], [2.151158, 41.40811], [2.151255, 41.408155], [2.151353, 41.408198], [2.151451, 41.408241], [2.151568, 41.40829], [2.151686, 41.408337], [2.151794, 41.408377], [2.152302, 41.408555], [2.152416, 41.408595], [2.152579, 41.408652], [2.153048, 41.408818], [2.153448, 41.408959], [2.153766, 41.409072], [2.154236, 41.408589], [2.155574, 41.409296], [2.15608, 41.409561], [2.156128, 41.409586], [2.156633, 41.409852], [2.157532, 41.410325], [2.158084, 41.410588], [2.158206, 41.410628], [2.158867, 41.409943], [2.159603, 41.40916]]]]
    },
    "properties": {
      "neighbourhood": "la Vila de Gràcia",
      "neighbourhood_group": "Gràcia"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.168681, 41.401861], [2.167472, 41.400959], [2.166347, 41.401822], [2.165267, 41.401009], [2.165259, 41.401002], [2.164176, 41.401825], [2.163711, 41.402178], [2.161635, 41.403755], [2.162269, 41.40417], [2.162424, 41.404271], [2.162841, 41.404525], [2.163525, 41.404939], [2.163034, 41.405489], [2.162732, 41.405827], [2.161394, 41.407254], [2.16088, 41.407801], [2.160566, 41.408137], [2.160442, 41.408269], [2.159603, 41.40916], [2.158867, 41.409943], [2.158206, 41.410628], [2.158461, 41.410756], [2.160316, 41.411718], [2.160476, 41.411807], [2.162032, 41.412673], [2.162066, 41.412631], [2.162342, 41.412358], [2.162654, 41.411962], [2.163503, 41.410934], [2.163916, 41.410528], [2.164293, 41.410345], [2.164423, 41.410181], [2.165172, 41.409603], [2.165888, 41.409065], [2.166505, 41.408599], [2.16715, 41.408119], [2.167818, 41.407622], [2.16867, 41.406996], [2.169811, 41.406111], [2.170912, 41.405261], [2.172057, 41.40438], [2.170918, 41.403532], [2.169802, 41.402701], [2.168681, 41.401861]]]]
    },
    "properties": {
      "neighbourhood": "el Camp d'en Grassot i Gràcia Nova",
      "neighbourhood_group": "Gràcia"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.16617, 41.420053], [2.166176, 41.420025], [2.16618, 41.419986], [2.166175, 41.419944], [2.166168, 41.419907], [2.166159, 41.41988], [2.166156, 41.419861], [2.166149, 41.419832], [2.166143, 41.4198], [2.166133, 41.419755], [2.166126, 41.419724], [2.16612, 41.419705], [2.166116, 41.419674], [2.166105, 41.419621], [2.166088, 41.419569], [2.166069, 41.419527], [2.166047, 41.419483], [2.166021, 41.419446], [2.165998, 41.419417], [2.165977, 41.419392], [2.165942, 41.419355], [2.165897, 41.419309], [2.165849, 41.41927], [2.165804, 41.419236], [2.16575, 41.419212], [2.165681, 41.419189], [2.165614, 41.419173], [2.165509, 41.419159], [2.16544, 41.41916], [2.165113, 41.419159], [2.164993, 41.418891], [2.165005, 41.41888], [2.164842, 41.418761], [2.165078, 41.418424], [2.165275, 41.418211], [2.165323, 41.418176], [2.165354, 41.418157], [2.165392, 41.418147], [2.16543, 41.41815], [2.165503, 41.418165], [2.16556, 41.418179], [2.165601, 41.418192], [2.165618, 41.418199], [2.165635, 41.418207], [2.16564, 41.418209], [2.165645, 41.418211], [2.165658, 41.418217], [2.16567, 41.418222], [2.165673, 41.418224], [2.165678, 41.418226], [2.165684, 41.418229], [2.165688, 41.418231], [2.165693, 41.418234], [2.165697, 41.418237], [2.165702, 41.41824], [2.165707, 41.418244], [2.165712, 41.418248], [2.165723, 41.418256], [2.165733, 41.418264], [2.165738, 41.418267], [2.165742, 41.418271], [2.165748, 41.418274], [2.165754, 41.418278], [2.165764, 41.418284], [2.165774, 41.41829], [2.165779, 41.418293], [2.165784, 41.418296], [2.165793, 41.418301], [2.165802, 41.418305], [2.165804, 41.418307], [2.165807, 41.418308], [2.16581, 41.41831], [2.16582, 41.418314], [2.165877, 41.418327], [2.165899, 41.418336], [2.165943, 41.418349], [2.165963, 41.418353], [2.165966, 41.418352], [2.165978, 41.418353], [2.165995, 41.41835], [2.166018, 41.418347], [2.166036, 41.418341], [2.166056, 41.418336], [2.166076, 41.418332], [2.166095, 41.418326], [2.166118, 41.418319], [2.166135, 41.418311], [2.166151, 41.418305], [2.166227, 41.418285], [2.166286, 41.418265], [2.166409, 41.418237], [2.166331, 41.418247], [2.166243, 41.418257], [2.166158, 41.418256], [2.166124, 41.418247], [2.166052, 41.418232], [2.16601, 41.418199], [2.165994, 41.418134], [2.166012, 41.418079], [2.166069, 41.418007], [2.166158, 41.41795], [2.166268, 41.4179], [2.16635, 41.417882], [2.166436, 41.417885], [2.166553, 41.417924], [2.166678, 41.417983], [2.166785, 41.41804], [2.166834, 41.418077], [2.166854, 41.41811], [2.166862, 41.41816], [2.166871, 41.418259], [2.166894, 41.418404], [2.166924, 41.418498], [2.166963, 41.418543], [2.167004, 41.418577], [2.167026, 41.418591], [2.167079, 41.418607], [2.167164, 41.418621], [2.167288, 41.418636], [2.167397, 41.418651], [2.167465, 41.418665], [2.167526, 41.418686], [2.167587, 41.418723], [2.167658, 41.418771], [2.167709, 41.418789], [2.167796, 41.418801], [2.167927, 41.418825], [2.168086, 41.418845], [2.168226, 41.418862], [2.168344, 41.418893], [2.168446, 41.418929], [2.168485, 41.418915], [2.168097, 41.418419], [2.168065, 41.41838], [2.168046, 41.418362], [2.168021, 41.418346], [2.168003, 41.418336], [2.167961, 41.418325], [2.167875, 41.418298], [2.16783, 41.418288], [2.167784, 41.418273], [2.16775, 41.418256], [2.167704, 41.418224], [2.167661, 41.418177], [2.167639, 41.418137], [2.167631, 41.418096], [2.167632, 41.41804], [2.167634, 41.417977], [2.167634, 41.417921], [2.167636, 41.417859], [2.167633, 41.41782], [2.167632, 41.417793], [2.167625, 41.417774], [2.167621, 41.417761], [2.167613, 41.417744], [2.167602, 41.417724], [2.167587, 41.4177], [2.167566, 41.417677], [2.167535, 41.417652], [2.167449, 41.417589], [2.16736, 41.41752], [2.167282, 41.417463], [2.167199, 41.417409], [2.167171, 41.417388], [2.166855, 41.417147], [2.166811, 41.417114], [2.166756, 41.417069], [2.166746, 41.417064], [2.166237, 41.416787], [2.16623, 41.416782], [2.166224, 41.416778], [2.166219, 41.416774], [2.166214, 41.416769], [2.166209, 41.416764], [2.166203, 41.416757], [2.166197, 41.416746], [2.166192, 41.416736], [2.166189, 41.416726], [2.166188, 41.416724], [2.166186, 41.416718], [2.166184, 41.416709], [2.166183, 41.416701], [2.166182, 41.416692], [2.166182, 41.416683], [2.166182, 41.416675], [2.166183, 41.416666], [2.166184, 41.41666], [2.166186, 41.416655], [2.166188, 41.416649], [2.16619, 41.416644], [2.166193, 41.416639], [2.166196, 41.416634], [2.1662, 41.416628], [2.167312, 41.415483], [2.166837, 41.415262], [2.16631, 41.414984], [2.16582, 41.414906], [2.165583, 41.414868], [2.164866, 41.414774], [2.164279, 41.414673], [2.164168, 41.414654], [2.163474, 41.41449], [2.162747, 41.414271], [2.162377, 41.414134], [2.161408, 41.413732], [2.161401, 41.413849], [2.161376, 41.413937], [2.161179, 41.414111], [2.161063, 41.414103], [2.160734, 41.413985], [2.160509, 41.413881], [2.160044, 41.413979], [2.159999, 41.413988], [2.159634, 41.414152], [2.159309, 41.414395], [2.158925, 41.414698], [2.158541, 41.415066], [2.158206, 41.415433], [2.157912, 41.415896], [2.157604, 41.41652], [2.157471, 41.416574], [2.157382, 41.416583], [2.157241, 41.416527], [2.157182, 41.41646], [2.156677, 41.415686], [2.156564, 41.415575], [2.156398, 41.415477], [2.156184, 41.415333], [2.155887, 41.415155], [2.155597, 41.415127], [2.155542, 41.415136], [2.155514, 41.415141], [2.155484, 41.415148], [2.155456, 41.415156], [2.155428, 41.415165], [2.1554, 41.415176], [2.155374, 41.415189], [2.15535, 41.415202], [2.155326, 41.415217], [2.155304, 41.415233], [2.155283, 41.41525], [2.15528, 41.415253], [2.155266, 41.415269], [2.155249, 41.415286], [2.155234, 41.415305], [2.15523, 41.415311], [2.15522, 41.415324], [2.155208, 41.415343], [2.155198, 41.415363], [2.155189, 41.415384], [2.155182, 41.415405], [2.155176, 41.415426], [2.155172, 41.415447], [2.15517, 41.415467], [2.155169, 41.415488], [2.15517, 41.415508], [2.155173, 41.415529], [2.155178, 41.415549], [2.155184, 41.415569], [2.155192, 41.415589], [2.155202, 41.415608], [2.155214, 41.415627], [2.155227, 41.415645], [2.155241, 41.415662], [2.155257, 41.415678], [2.155274, 41.415694], [2.155292, 41.415708], [2.155312, 41.415721], [2.155333, 41.415734], [2.155354, 41.415746], [2.155377, 41.415756], [2.1554, 41.415765], [2.155716, 41.415858], [2.155889, 41.415938], [2.155928, 41.415953], [2.155964, 41.415969], [2.156, 41.415986], [2.156034, 41.416005], [2.156067, 41.416026], [2.156098, 41.416047], [2.156128, 41.416071], [2.15615, 41.41609], [2.156171, 41.41611], [2.156191, 41.41613], [2.156208, 41.416152], [2.156225, 41.416174], [2.15624, 41.416197], [2.156368, 41.416409], [2.156531, 41.416697], [2.156648, 41.416902], [2.156627, 41.417047], [2.156624, 41.417055], [2.156619, 41.417076], [2.156613, 41.417092], [2.156607, 41.417106], [2.156594, 41.417127], [2.156582, 41.41715], [2.156571, 41.41717], [2.156554, 41.417199], [2.156542, 41.417222], [2.156531, 41.41724], [2.15652, 41.417259], [2.156509, 41.417279], [2.156495, 41.417303], [2.156477, 41.41733], [2.156462, 41.417359], [2.156454, 41.41738], [2.156448, 41.417399], [2.156444, 41.417419], [2.156442, 41.417441], [2.156444, 41.417467], [2.15645, 41.417488], [2.156457, 41.417509], [2.156469, 41.417531], [2.156484, 41.41755], [2.156496, 41.417564], [2.156514, 41.417579], [2.156533, 41.417594], [2.15656, 41.41761], [2.156573, 41.417616], [2.156593, 41.417627], [2.156617, 41.417641], [2.156643, 41.417651], [2.156671, 41.417663], [2.156703, 41.417677], [2.156736, 41.417691], [2.156771, 41.417707], [2.156803, 41.417721], [2.156836, 41.417736], [2.15684, 41.417738], [2.156857, 41.417747], [2.15688, 41.417756], [2.156905, 41.417764], [2.156921, 41.41777], [2.15694, 41.417778], [2.156971, 41.417791], [2.156995, 41.417798], [2.157017, 41.417807], [2.157051, 41.417821], [2.157085, 41.417832], [2.157118, 41.417839], [2.157142, 41.417839], [2.157158, 41.41784], [2.157172, 41.417842], [2.157199, 41.417843], [2.157229, 41.41784], [2.157255, 41.417836], [2.157286, 41.417832], [2.157311, 41.417824], [2.157333, 41.417817], [2.157358, 41.417804], [2.157379, 41.417792], [2.157404, 41.417775], [2.157424, 41.417762], [2.157456, 41.41774], [2.157482, 41.417722], [2.157509, 41.417702], [2.157535, 41.417684], [2.157555, 41.417671], [2.157581, 41.417654], [2.157602, 41.417642], [2.157637, 41.417618], [2.157654, 41.417603], [2.157661, 41.417598], [2.157683, 41.417581], [2.15771, 41.417562], [2.157743, 41.417538], [2.157778, 41.417513], [2.157807, 41.417491], [2.157837, 41.417467], [2.157867, 41.417444], [2.157892, 41.417424], [2.157925, 41.4174], [2.157948, 41.417384], [2.157976, 41.417365], [2.158007, 41.417344], [2.158032, 41.417327], [2.158054, 41.417309], [2.158073, 41.417295], [2.158096, 41.417278], [2.15812, 41.417258], [2.158142, 41.417242], [2.158161, 41.417228], [2.158182, 41.417213], [2.158201, 41.4172], [2.158201, 41.4172], [2.158202, 41.4172], [2.158223, 41.417186], [2.15824, 41.417174], [2.158256, 41.417164], [2.158275, 41.417151], [2.15829, 41.417139], [2.1583, 41.417131], [2.158312, 41.417124], [2.158335, 41.417111], [2.158354, 41.417099], [2.158381, 41.417079], [2.158403, 41.41706], [2.158428, 41.41704], [2.158429, 41.417039], [2.158478, 41.417011], [2.158552, 41.416957], [2.158581, 41.416933], [2.158608, 41.416908], [2.158634, 41.416882], [2.158657, 41.416854], [2.158678, 41.416826], [2.158696, 41.416796], [2.158712, 41.416766], [2.158726, 41.416734], [2.158727, 41.41673], [2.158728, 41.416728], [2.158729, 41.416726], [2.158741, 41.416693], [2.158758, 41.416667], [2.158777, 41.416641], [2.158797, 41.416616], [2.158821, 41.416589], [2.158833, 41.416578], [2.158845, 41.416571], [2.158857, 41.416563], [2.15887, 41.416557], [2.158884, 41.416551], [2.158898, 41.416546], [2.158912, 41.416542], [2.158927, 41.416539], [2.158942, 41.416536], [2.158958, 41.416535], [2.158973, 41.416534], [2.158989, 41.416534], [2.159004, 41.416535], [2.15902, 41.416537], [2.159035, 41.41654], [2.15905, 41.416543], [2.159064, 41.416548], [2.159078, 41.416553], [2.159091, 41.416559], [2.159104, 41.416565], [2.159116, 41.416573], [2.159127, 41.41658], [2.159138, 41.416589], [2.159148, 41.416599], [2.159157, 41.416609], [2.159165, 41.416619], [2.159172, 41.41663], [2.159177, 41.416642], [2.159181, 41.416654], [2.159184, 41.416665], [2.159186, 41.416677], [2.159187, 41.41669], [2.159186, 41.416702], [2.159185, 41.416714], [2.159179, 41.41673], [2.159176, 41.416737], [2.15917, 41.416748], [2.159164, 41.416759], [2.159155, 41.41677], [2.159146, 41.41678], [2.159136, 41.416789], [2.159125, 41.416798], [2.159113, 41.416806], [2.159102, 41.416813], [2.159077, 41.416826], [2.15905, 41.41684], [2.159023, 41.416853], [2.158995, 41.416864], [2.158968, 41.416875], [2.158911, 41.416896], [2.158765, 41.416958], [2.159165, 41.417338], [2.159361, 41.417527], [2.159484, 41.417645], [2.159509, 41.417669], [2.159536, 41.417692], [2.159564, 41.417713], [2.159593, 41.417733], [2.159624, 41.417751], [2.159656, 41.417769], [2.159673, 41.417776], [2.15969, 41.417784], [2.159707, 41.417791], [2.159775, 41.417815], [2.159809, 41.417824], [2.159827, 41.417829], [2.159853, 41.417834], [2.15988, 41.417839], [2.159907, 41.417842], [2.159935, 41.417843], [2.159962, 41.417844], [2.159974, 41.417844], [2.159975, 41.417844], [2.160033, 41.417841], [2.160069, 41.417838], [2.160104, 41.417833], [2.16014, 41.417827], [2.160175, 41.417819], [2.160209, 41.417809], [2.160242, 41.417798], [2.160248, 41.417796], [2.160292, 41.417779], [2.160297, 41.417776], [2.160306, 41.417772], [2.160464, 41.417694], [2.160669, 41.417596], [2.16078, 41.417542], [2.160893, 41.417493], [2.160993, 41.417723], [2.160961, 41.417782], [2.160942, 41.41783], [2.160902, 41.417847], [2.16084, 41.417873], [2.160762, 41.417905], [2.160702, 41.41793], [2.160767, 41.418011], [2.160793, 41.418039], [2.160788, 41.418041], [2.160831, 41.418093], [2.160836, 41.4181], [2.160891, 41.418167], [2.160921, 41.418203], [2.160995, 41.418201], [2.161077, 41.418202], [2.161137, 41.418207], [2.161187, 41.418214], [2.161258, 41.418419], [2.161255, 41.41842], [2.161277, 41.418465], [2.161317, 41.418566], [2.161367, 41.418655], [2.161431, 41.418734], [2.161435, 41.418737], [2.161542, 41.418828], [2.161652, 41.418927], [2.161666, 41.418943], [2.16165, 41.418964], [2.161587, 41.418958], [2.161518, 41.418979], [2.161318, 41.418948], [2.161292, 41.419036], [2.161366, 41.419045], [2.161419, 41.419066], [2.161403, 41.419148], [2.161379, 41.419149], [2.161357, 41.419159], [2.16134, 41.419182], [2.161341, 41.419203], [2.161359, 41.419226], [2.161392, 41.41924], [2.161423, 41.419239], [2.161468, 41.419232], [2.161507, 41.419232], [2.161534, 41.419236], [2.161577, 41.419234], [2.161636, 41.41924], [2.161684, 41.419251], [2.161727, 41.419267], [2.162263, 41.419505], [2.16228, 41.419491], [2.162283, 41.419485], [2.162362, 41.41951], [2.162381, 41.419512], [2.162495, 41.419623], [2.162614, 41.41976], [2.162627, 41.419774], [2.162683, 41.419839], [2.162662, 41.419855], [2.162626, 41.419874], [2.162614, 41.419879], [2.162567, 41.419898], [2.1625, 41.419922], [2.162414, 41.419953], [2.162336, 41.419978], [2.162304, 41.419987], [2.162229, 41.420002], [2.162134, 41.420017], [2.162041, 41.420032], [2.162045, 41.420035], [2.161966, 41.420024], [2.16191, 41.420008], [2.161901, 41.420008], [2.161884, 41.420001], [2.16188, 41.419993], [2.161701, 41.419969], [2.161752, 41.419985], [2.161845, 41.420016], [2.161964, 41.42006], [2.16203, 41.42008], [2.162095, 41.420095], [2.162153, 41.420106], [2.16222, 41.42011], [2.162289, 41.420107], [2.162389, 41.420097], [2.162466, 41.420085], [2.162518, 41.420073], [2.162588, 41.420055], [2.162614, 41.420048], [2.162641, 41.420041], [2.162701, 41.420021], [2.162773, 41.419994], [2.162792, 41.420023], [2.162856, 41.42], [2.162917, 41.419981], [2.16298, 41.419964], [2.163066, 41.419947], [2.163097, 41.419941], [2.163144, 41.419938], [2.163189, 41.419938], [2.163243, 41.419939], [2.163303, 41.419939], [2.163355, 41.419947], [2.163397, 41.419953], [2.163447, 41.419959], [2.163525, 41.419969], [2.163618, 41.419983], [2.163686, 41.41999], [2.163742, 41.419994], [2.163818, 41.419999], [2.163984, 41.420005], [2.164187, 41.420019], [2.164361, 41.420028], [2.164511, 41.420025], [2.164669, 41.420021], [2.164828, 41.420023], [2.164902, 41.420028], [2.164993, 41.420036], [2.165053, 41.420041], [2.165114, 41.42005], [2.165168, 41.420062], [2.165399, 41.420144], [2.165883, 41.420199], [2.165939, 41.420202], [2.165996, 41.420193], [2.166042, 41.420179], [2.166079, 41.42016], [2.166111, 41.420139], [2.166139, 41.420111], [2.166158, 41.420086], [2.16617, 41.420053]]]]
    },
    "properties": {
      "neighbourhood": "Can Baró",
      "neighbourhood_group": "Horta-Guinardó"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.179796, 41.42151], [2.180314, 41.42096], [2.180656, 41.420568], [2.18077, 41.420394], [2.18084, 41.420196], [2.180857, 41.420022], [2.180829, 41.419803], [2.180733, 41.419421], [2.180701, 41.419275], [2.180579, 41.418747], [2.180569, 41.418688], [2.180532, 41.418463], [2.180524, 41.418407], [2.180445, 41.417844], [2.180425, 41.417566], [2.180409, 41.417114], [2.180428, 41.416527], [2.180437, 41.416318], [2.180465, 41.415892], [2.180246, 41.415607], [2.179564, 41.415107], [2.179026, 41.414713], [2.178856, 41.41459], [2.17768, 41.413738], [2.176659, 41.41298], [2.175436, 41.412071], [2.174305, 41.411236], [2.173034, 41.412203], [2.171268, 41.413546], [2.170963, 41.413778], [2.170103, 41.414433], [2.169856, 41.41462], [2.169599, 41.414816], [2.169566, 41.414844], [2.169536, 41.414872], [2.169507, 41.414902], [2.169481, 41.414933], [2.169456, 41.414965], [2.169436, 41.414994], [2.169417, 41.415025], [2.1694, 41.415055], [2.169385, 41.415087], [2.169372, 41.415119], [2.16936, 41.415151], [2.169347, 41.415198], [2.169338, 41.415245], [2.169333, 41.415293], [2.169333, 41.415341], [2.169337, 41.415389], [2.169339, 41.415404], [2.169371, 41.415486], [2.169365, 41.41552], [2.169358, 41.415546], [2.169339, 41.415576], [2.169323, 41.415595], [2.169301, 41.415614], [2.169267, 41.415637], [2.169227, 41.415652], [2.169104, 41.415669], [2.168978, 41.415673], [2.168954, 41.415675], [2.168936, 41.415677], [2.16891, 41.415681], [2.168811, 41.415696], [2.168651, 41.415726], [2.1684, 41.415772], [2.168294, 41.415782], [2.168253, 41.415785], [2.168225, 41.415787], [2.168195, 41.415788], [2.168181, 41.415787], [2.16817, 41.415787], [2.168139, 41.415785], [2.16811, 41.415783], [2.168077, 41.415779], [2.168044, 41.415773], [2.168008, 41.415767], [2.167981, 41.415759], [2.16794, 41.415747], [2.167894, 41.415732], [2.167846, 41.415714], [2.167799, 41.415694], [2.167409, 41.415528], [2.167312, 41.415483], [2.1662, 41.416628], [2.166196, 41.416634], [2.166193, 41.416639], [2.16619, 41.416644], [2.166188, 41.416649], [2.166186, 41.416655], [2.166184, 41.41666], [2.166183, 41.416666], [2.166182, 41.416675], [2.166182, 41.416683], [2.166182, 41.416692], [2.166183, 41.416701], [2.166184, 41.416709], [2.166186, 41.416718], [2.166188, 41.416724], [2.166189, 41.416726], [2.166192, 41.416736], [2.166197, 41.416746], [2.166203, 41.416757], [2.166209, 41.416764], [2.166214, 41.416769], [2.166219, 41.416774], [2.166224, 41.416778], [2.16623, 41.416782], [2.166237, 41.416787], [2.166746, 41.417064], [2.166756, 41.417069], [2.166811, 41.417114], [2.166855, 41.417147], [2.167171, 41.417388], [2.167199, 41.417409], [2.167282, 41.417463], [2.16736, 41.41752], [2.167449, 41.417589], [2.167535, 41.417652], [2.167566, 41.417677], [2.167587, 41.4177], [2.167602, 41.417724], [2.167613, 41.417744], [2.167621, 41.417761], [2.167625, 41.417774], [2.167632, 41.417793], [2.167633, 41.41782], [2.167636, 41.417859], [2.167634, 41.417921], [2.167634, 41.417977], [2.167632, 41.41804], [2.167631, 41.418096], [2.167639, 41.418137], [2.167661, 41.418177], [2.167704, 41.418224], [2.16775, 41.418256], [2.167784, 41.418273], [2.16783, 41.418288], [2.167875, 41.418298], [2.167961, 41.418325], [2.168003, 41.418336], [2.168021, 41.418346], [2.168046, 41.418362], [2.168065, 41.41838], [2.168097, 41.418419], [2.168485, 41.418915], [2.168446, 41.418929], [2.168344, 41.418893], [2.168226, 41.418862], [2.168086, 41.418845], [2.167927, 41.418825], [2.167796, 41.418801], [2.167709, 41.418789], [2.167658, 41.418771], [2.167587, 41.418723], [2.167526, 41.418686], [2.167465, 41.418665], [2.167397, 41.418651], [2.167288, 41.418636], [2.167164, 41.418621], [2.167079, 41.418607], [2.167026, 41.418591], [2.167004, 41.418577], [2.166963, 41.418543], [2.166924, 41.418498], [2.166894, 41.418404], [2.166871, 41.418259], [2.166862, 41.41816], [2.166854, 41.41811], [2.166834, 41.418077], [2.166785, 41.41804], [2.166678, 41.417983], [2.166553, 41.417924], [2.166436, 41.417885], [2.16635, 41.417882], [2.166268, 41.4179], [2.166158, 41.41795], [2.166069, 41.418007], [2.166012, 41.418079], [2.165994, 41.418134], [2.16601, 41.418199], [2.166052, 41.418232], [2.166124, 41.418247], [2.166158, 41.418256], [2.166243, 41.418257], [2.166331, 41.418247], [2.166409, 41.418237], [2.166286, 41.418265], [2.166227, 41.418285], [2.166151, 41.418305], [2.166135, 41.418311], [2.166118, 41.418319], [2.166095, 41.418326], [2.166076, 41.418332], [2.166056, 41.418336], [2.166036, 41.418341], [2.166018, 41.418347], [2.165995, 41.41835], [2.165978, 41.418353], [2.165966, 41.418352], [2.165963, 41.418353], [2.165943, 41.418349], [2.165899, 41.418336], [2.165877, 41.418327], [2.16582, 41.418314], [2.16581, 41.41831], [2.165807, 41.418308], [2.165804, 41.418307], [2.165802, 41.418305], [2.165793, 41.418301], [2.165784, 41.418296], [2.165779, 41.418293], [2.165774, 41.41829], [2.165764, 41.418284], [2.165754, 41.418278], [2.165748, 41.418274], [2.165742, 41.418271], [2.165738, 41.418267], [2.165733, 41.418264], [2.165723, 41.418256], [2.165712, 41.418248], [2.165707, 41.418244], [2.165702, 41.41824], [2.165697, 41.418237], [2.165693, 41.418234], [2.165688, 41.418231], [2.165684, 41.418229], [2.165678, 41.418226], [2.165673, 41.418224], [2.16567, 41.418222], [2.165658, 41.418217], [2.165645, 41.418211], [2.16564, 41.418209], [2.165635, 41.418207], [2.165618, 41.418199], [2.165601, 41.418192], [2.16556, 41.418179], [2.165503, 41.418165], [2.16543, 41.41815], [2.165392, 41.418147], [2.165354, 41.418157], [2.165323, 41.418176], [2.165275, 41.418211], [2.165078, 41.418424], [2.164842, 41.418761], [2.165005, 41.41888], [2.164993, 41.418891], [2.165113, 41.419159], [2.16544, 41.41916], [2.165509, 41.419159], [2.165614, 41.419173], [2.165681, 41.419189], [2.16575, 41.419212], [2.165804, 41.419236], [2.165849, 41.41927], [2.165897, 41.419309], [2.165942, 41.419355], [2.165977, 41.419392], [2.165998, 41.419417], [2.166021, 41.419446], [2.166047, 41.419483], [2.166069, 41.419527], [2.166088, 41.419569], [2.166105, 41.419621], [2.166116, 41.419674], [2.16612, 41.419705], [2.166126, 41.419724], [2.166133, 41.419755], [2.166143, 41.4198], [2.166149, 41.419832], [2.166156, 41.419861], [2.166159, 41.41988], [2.166168, 41.419907], [2.166175, 41.419944], [2.16618, 41.419986], [2.166176, 41.420025], [2.16617, 41.420053], [2.166158, 41.420086], [2.166139, 41.420111], [2.166111, 41.420139], [2.166079, 41.42016], [2.166042, 41.420179], [2.165996, 41.420193], [2.165939, 41.420202], [2.165883, 41.420199], [2.165399, 41.420144], [2.164935, 41.420107], [2.164869, 41.420107], [2.164798, 41.420109], [2.164747, 41.42011], [2.164723, 41.420114], [2.164829, 41.420676], [2.164889, 41.420703], [2.164955, 41.420764], [2.164992, 41.420851], [2.165035, 41.420978], [2.165087, 41.421168], [2.165125, 41.421278], [2.165157, 41.42132], [2.165217, 41.421366], [2.16531, 41.421411], [2.16542, 41.421463], [2.165477, 41.421543], [2.165537, 41.421589], [2.165589, 41.421608], [2.165736, 41.421578], [2.165844, 41.421547], [2.165978, 41.421511], [2.16607, 41.421474], [2.166184, 41.421421], [2.166372, 41.421323], [2.166464, 41.421282], [2.16655, 41.421276], [2.166618, 41.421295], [2.166676, 41.421329], [2.166721, 41.421372], [2.16676, 41.421414], [2.166843, 41.421508], [2.166911, 41.421593], [2.166956, 41.421649], [2.166993, 41.421695], [2.167046, 41.421768], [2.167073, 41.421834], [2.167088, 41.421886], [2.167136, 41.422063], [2.167191, 41.422148], [2.167265, 41.42217], [2.167293, 41.422193], [2.167323, 41.422218], [2.167361, 41.422238], [2.167462, 41.422256], [2.167816, 41.422324], [2.16794, 41.422361], [2.168082, 41.422383], [2.168187, 41.422378], [2.16822, 41.422384], [2.168245, 41.422394], [2.168252, 41.422429], [2.168193, 41.422488], [2.168103, 41.42252], [2.167989, 41.42253], [2.167826, 41.422537], [2.167706, 41.422526], [2.167622, 41.422528], [2.167543, 41.422548], [2.167464, 41.422563], [2.167267, 41.422588], [2.16717, 41.422591], [2.167007, 41.422581], [2.166969, 41.422586], [2.166979, 41.422613], [2.167032, 41.422635], [2.16736, 41.422714], [2.167454, 41.422733], [2.167537, 41.422767], [2.167621, 41.422817], [2.167694, 41.422892], [2.167822, 41.423053], [2.167912, 41.423153], [2.167979, 41.423228], [2.168005, 41.423242], [2.168095, 41.423254], [2.168286, 41.423261], [2.16844, 41.423248], [2.168579, 41.423218], [2.168767, 41.423188], [2.168887, 41.423175], [2.168981, 41.423181], [2.16906, 41.423202], [2.16916, 41.423273], [2.169289, 41.423403], [2.169363, 41.423341], [2.169403, 41.423307], [2.169437, 41.423276], [2.169473, 41.423235], [2.169508, 41.423196], [2.16954, 41.423155], [2.169568, 41.423111], [2.169591, 41.423066], [2.169611, 41.42302], [2.169626, 41.422974], [2.169636, 41.422926], [2.169642, 41.422878], [2.169644, 41.42283], [2.169641, 41.422782], [2.169633, 41.422734], [2.169628, 41.422714], [2.169621, 41.422694], [2.169614, 41.422674], [2.169606, 41.422655], [2.169596, 41.422636], [2.169466, 41.422365], [2.16905, 41.421474], [2.169043, 41.421458], [2.169038, 41.421442], [2.169035, 41.421427], [2.169033, 41.421411], [2.169034, 41.421395], [2.169035, 41.421379], [2.169039, 41.421363], [2.169044, 41.421347], [2.16905, 41.421332], [2.169058, 41.421317], [2.169068, 41.421303], [2.169079, 41.42129], [2.169091, 41.421277], [2.169105, 41.421264], [2.16912, 41.421253], [2.169136, 41.421243], [2.169153, 41.421233], [2.169171, 41.421225], [2.16919, 41.421217], [2.169204, 41.421213], [2.169218, 41.421209], [2.169232, 41.421205], [2.169246, 41.421203], [2.169261, 41.421201], [2.169276, 41.4212], [2.169291, 41.421199], [2.169306, 41.421199], [2.169321, 41.4212], [2.169393, 41.421204], [2.16951, 41.421212], [2.170224, 41.422045], [2.170734, 41.422639], [2.17099, 41.422938], [2.171924, 41.423199], [2.171839, 41.424026], [2.172159, 41.424519], [2.172535, 41.425096], [2.172457, 41.425785], [2.17237, 41.42655], [2.173544, 41.426215], [2.17559, 41.425633], [2.175678, 41.425608], [2.176178, 41.42547], [2.176558, 41.425031], [2.176828, 41.424708], [2.176971, 41.424543], [2.177653, 41.423817], [2.178273, 41.423162], [2.178633, 41.422761], [2.178989, 41.422375], [2.179443, 41.421888], [2.179756, 41.421553], [2.179796, 41.42151]]]]
    },
    "properties": {
      "neighbourhood": "el Guinardó",
      "neighbourhood_group": "Horta-Guinardó"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.165594, 41.436355], [2.165652, 41.436353], [2.165653, 41.436355], [2.165726, 41.436336], [2.165842, 41.436305], [2.165925, 41.436284], [2.16624, 41.436201], [2.166279, 41.436191], [2.166286, 41.436189], [2.166341, 41.436177], [2.167346, 41.435909], [2.167356, 41.435907], [2.167363, 41.435905], [2.16737, 41.435904], [2.167386, 41.435901], [2.167422, 41.435895], [2.167451, 41.435891], [2.167498, 41.435886], [2.167545, 41.435882], [2.167611, 41.435879], [2.167635, 41.435879], [2.167649, 41.435879], [2.167653, 41.435879], [2.167677, 41.43588], [2.167689, 41.435881], [2.167711, 41.435882], [2.167722, 41.435882], [2.167738, 41.435881], [2.167761, 41.435878], [2.167776, 41.435876], [2.167801, 41.43587], [2.167817, 41.435865], [2.16784, 41.435857], [2.167867, 41.435844], [2.167886, 41.435833], [2.167904, 41.435821], [2.167819, 41.435894], [2.167716, 41.435995], [2.167777, 41.436047], [2.167851, 41.435978], [2.167896, 41.435936], [2.167943, 41.435895], [2.167998, 41.435846], [2.168055, 41.435798], [2.168112, 41.435751], [2.168539, 41.435406], [2.168544, 41.435403], [2.168547, 41.4354], [2.168552, 41.435396], [2.168558, 41.435389], [2.168562, 41.435385], [2.168961, 41.435066], [2.169168, 41.43501], [2.169613, 41.434892], [2.169442, 41.43474], [2.169273, 41.434591], [2.169042, 41.4341], [2.169866, 41.433728], [2.169539, 41.43332], [2.169048, 41.433536], [2.16883, 41.433255], [2.168799, 41.433268], [2.168618, 41.433039], [2.168425, 41.433092], [2.168375, 41.433096], [2.168382, 41.433143], [2.168296, 41.433158], [2.168026, 41.433355], [2.167961, 41.433385], [2.167662, 41.433523], [2.166781, 41.433734], [2.166732, 41.433745], [2.166596, 41.433778], [2.166657, 41.433936], [2.166661, 41.433945], [2.166666, 41.433944], [2.166674, 41.433963], [2.166053, 41.434101], [2.165838, 41.434153], [2.165778, 41.43402], [2.16487, 41.434228], [2.164826, 41.434118], [2.164796, 41.434048], [2.164758, 41.433959], [2.16454, 41.434015], [2.164516, 41.434021], [2.164491, 41.433963], [2.164451, 41.433872], [2.164552, 41.433849], [2.164566, 41.433828], [2.164549, 41.433822], [2.164527, 41.433811], [2.164509, 41.433796], [2.164494, 41.433778], [2.164483, 41.433763], [2.164471, 41.433748], [2.164457, 41.433726], [2.164448, 41.43371], [2.164445, 41.433704], [2.16444, 41.433699], [2.164433, 41.433694], [2.164424, 41.433692], [2.164405, 41.433689], [2.164385, 41.433688], [2.164353, 41.433685], [2.164286, 41.433683], [2.16427, 41.433682], [2.164255, 41.433682], [2.164241, 41.43368], [2.164205, 41.433677], [2.164176, 41.433671], [2.164147, 41.433664], [2.164075, 41.433642], [2.164049, 41.433635], [2.164043, 41.433635], [2.163811, 41.433675], [2.163978, 41.434105], [2.163498, 41.434217], [2.163614, 41.434565], [2.163743, 41.434956], [2.164281, 41.43631], [2.163171, 41.436608], [2.163246, 41.436713], [2.16326, 41.436733], [2.163369, 41.436886], [2.163521, 41.436819], [2.164247, 41.43653], [2.164501, 41.436511], [2.164728, 41.436454], [2.16486, 41.436429], [2.165057, 41.436407], [2.165227, 41.43639], [2.165594, 41.436355]]]]
    },
    "properties": {
      "neighbourhood": "Can Peguera",
      "neighbourhood_group": "Nou Barris"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.171839, 41.424026], [2.171924, 41.423199], [2.17099, 41.422938], [2.170734, 41.422639], [2.170224, 41.422045], [2.16951, 41.421212], [2.169393, 41.421204], [2.169321, 41.4212], [2.169306, 41.421199], [2.169291, 41.421199], [2.169276, 41.4212], [2.169261, 41.421201], [2.169246, 41.421203], [2.169232, 41.421205], [2.169218, 41.421209], [2.169204, 41.421213], [2.16919, 41.421217], [2.169171, 41.421225], [2.169153, 41.421233], [2.169136, 41.421243], [2.16912, 41.421253], [2.169105, 41.421264], [2.169091, 41.421277], [2.169079, 41.42129], [2.169068, 41.421303], [2.169058, 41.421317], [2.16905, 41.421332], [2.169044, 41.421347], [2.169039, 41.421363], [2.169035, 41.421379], [2.169034, 41.421395], [2.169033, 41.421411], [2.169035, 41.421427], [2.169038, 41.421442], [2.169043, 41.421458], [2.16905, 41.421474], [2.169466, 41.422365], [2.169596, 41.422636], [2.169606, 41.422655], [2.169614, 41.422674], [2.169621, 41.422694], [2.169628, 41.422714], [2.169633, 41.422734], [2.169641, 41.422782], [2.169644, 41.42283], [2.169642, 41.422878], [2.169636, 41.422926], [2.169626, 41.422974], [2.169611, 41.42302], [2.169591, 41.423066], [2.169568, 41.423111], [2.16954, 41.423155], [2.169508, 41.423196], [2.169473, 41.423235], [2.169437, 41.423276], [2.169403, 41.423307], [2.169363, 41.423341], [2.169289, 41.423403], [2.16916, 41.423273], [2.16906, 41.423202], [2.168981, 41.423181], [2.168887, 41.423175], [2.168767, 41.423188], [2.168579, 41.423218], [2.16844, 41.423248], [2.168286, 41.423261], [2.168095, 41.423254], [2.168005, 41.423242], [2.167979, 41.423228], [2.167912, 41.423153], [2.167822, 41.423053], [2.167694, 41.422892], [2.167621, 41.422817], [2.167537, 41.422767], [2.167454, 41.422733], [2.16736, 41.422714], [2.167032, 41.422635], [2.166979, 41.422613], [2.166969, 41.422586], [2.167007, 41.422581], [2.16717, 41.422591], [2.167267, 41.422588], [2.167464, 41.422563], [2.167543, 41.422548], [2.167622, 41.422528], [2.167706, 41.422526], [2.167826, 41.422537], [2.167989, 41.42253], [2.168103, 41.42252], [2.168193, 41.422488], [2.168252, 41.422429], [2.168245, 41.422394], [2.16822, 41.422384], [2.168187, 41.422378], [2.168082, 41.422383], [2.16794, 41.422361], [2.167816, 41.422324], [2.167462, 41.422256], [2.167361, 41.422238], [2.167323, 41.422218], [2.167293, 41.422193], [2.167265, 41.42217], [2.167191, 41.422148], [2.167136, 41.422063], [2.167088, 41.421886], [2.167073, 41.421834], [2.167046, 41.421768], [2.166993, 41.421695], [2.166956, 41.421649], [2.166911, 41.421593], [2.166843, 41.421508], [2.16676, 41.421414], [2.166721, 41.421372], [2.166676, 41.421329], [2.166618, 41.421295], [2.16655, 41.421276], [2.166464, 41.421282], [2.166372, 41.421323], [2.166184, 41.421421], [2.16607, 41.421474], [2.165978, 41.421511], [2.165844, 41.421547], [2.165736, 41.421578], [2.165589, 41.421608], [2.165537, 41.421589], [2.165477, 41.421543], [2.16542, 41.421463], [2.16531, 41.421411], [2.165217, 41.421366], [2.165157, 41.42132], [2.165125, 41.421278], [2.165087, 41.421168], [2.165035, 41.420978], [2.164992, 41.420851], [2.164955, 41.420764], [2.164889, 41.420703], [2.164829, 41.420676], [2.16482, 41.420704], [2.164818, 41.420707], [2.16484, 41.420879], [2.164422, 41.420936], [2.164265, 41.420951], [2.164189, 41.420962], [2.164067, 41.420982], [2.163998, 41.421007], [2.163947, 41.421031], [2.163903, 41.421058], [2.163875, 41.42104], [2.163816, 41.421093], [2.163789, 41.421112], [2.163743, 41.421131], [2.163709, 41.421145], [2.163681, 41.421153], [2.16365, 41.421159], [2.163619, 41.421161], [2.163588, 41.42116], [2.163553, 41.421158], [2.163522, 41.421152], [2.163492, 41.421142], [2.163465, 41.42113], [2.163439, 41.421117], [2.163416, 41.421103], [2.163393, 41.421089], [2.163319, 41.421038], [2.16308, 41.421616], [2.163025, 41.421679], [2.162973, 41.421714], [2.162897, 41.421735], [2.162817, 41.421729], [2.162726, 41.421705], [2.162642, 41.421688], [2.16241, 41.422242], [2.162311, 41.422479], [2.161372, 41.422306], [2.160792, 41.422199], [2.16034, 41.422116], [2.160042, 41.422061], [2.15964, 41.421986], [2.159133, 41.421361], [2.158901, 41.4215], [2.158712, 41.421615], [2.158501, 41.421621], [2.158181, 41.42305], [2.159042, 41.423255], [2.158776, 41.423857], [2.158633, 41.424199], [2.1586, 41.424435], [2.158591, 41.424505], [2.15859, 41.424566], [2.158584, 41.424615], [2.158564, 41.424764], [2.158515, 41.424984], [2.158354, 41.425623], [2.159226, 41.42611], [2.160069, 41.426404], [2.162065, 41.427249], [2.162961, 41.427608], [2.163736, 41.427964], [2.163754, 41.428052], [2.163957, 41.427985], [2.16444, 41.427909], [2.164838, 41.427852], [2.165011, 41.427826], [2.165395, 41.427768], [2.166026, 41.427713], [2.16676, 41.427655], [2.167151, 41.427608], [2.167302, 41.427592], [2.167433, 41.427577], [2.16841, 41.427439], [2.169983, 41.427203], [2.170039, 41.427194], [2.170169, 41.427188], [2.17025, 41.427164], [2.171066, 41.426925], [2.17237, 41.42655], [2.172457, 41.425785], [2.172535, 41.425096], [2.172159, 41.424519], [2.171839, 41.424026]]]]
    },
    "properties": {
      "neighbourhood": "la Font d'en Fargues",
      "neighbourhood_group": "Horta-Guinardó"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.151862, 41.42606], [2.151778, 41.4253], [2.151847, 41.425296], [2.151913, 41.425288], [2.151975, 41.425278], [2.152027, 41.42527], [2.152073, 41.425261], [2.152124, 41.425253], [2.152175, 41.425245], [2.152264, 41.425235], [2.152351, 41.425229], [2.15244, 41.425223], [2.152499, 41.425071], [2.152248, 41.424976], [2.152003, 41.42484], [2.151858, 41.424743], [2.15179, 41.424687], [2.151786, 41.424683], [2.151726, 41.424634], [2.15167, 41.424585], [2.151617, 41.424535], [2.151565, 41.424484], [2.151506, 41.42442], [2.151451, 41.424355], [2.151399, 41.424288], [2.15135, 41.424219], [2.151265, 41.424087], [2.151245, 41.424053], [2.151207, 41.423987], [2.151185, 41.423948], [2.151153, 41.423886], [2.151124, 41.423824], [2.151097, 41.423761], [2.151085, 41.423728], [2.151075, 41.423695], [2.151068, 41.423661], [2.151062, 41.423627], [2.151059, 41.423593], [2.151043, 41.423243], [2.151035, 41.423074], [2.15103, 41.422871], [2.151027, 41.422801], [2.151013, 41.422703], [2.150991, 41.422589], [2.150965, 41.422502], [2.150932, 41.422409], [2.150894, 41.42233], [2.150831, 41.422208], [2.15074, 41.422076], [2.150714, 41.421998], [2.150657, 41.421909], [2.150605, 41.421828], [2.149798, 41.420983], [2.149538, 41.42071], [2.149543, 41.42077], [2.149523, 41.421461], [2.149497, 41.421564], [2.149404, 41.421635], [2.149326, 41.421659], [2.147919, 41.421634], [2.147825, 41.421616], [2.147772, 41.421605], [2.146952, 41.421279], [2.145696, 41.421018], [2.145161, 41.420924], [2.144837, 41.420821], [2.144701, 41.420725], [2.144546, 41.420561], [2.144199, 41.420321], [2.144059, 41.420198], [2.144055, 41.420198], [2.143892, 41.420178], [2.143786, 41.420247], [2.143265, 41.420664], [2.142135, 41.421529], [2.142014, 41.421569], [2.141866, 41.421589], [2.141727, 41.421567], [2.141137, 41.421375], [2.140916, 41.421324], [2.140576, 41.421174], [2.140473, 41.421129], [2.140681, 41.42157], [2.14083, 41.42188], [2.141077, 41.422396], [2.141273, 41.422803], [2.141467, 41.423209], [2.141667, 41.423628], [2.14183, 41.423926], [2.142054, 41.424311], [2.142271, 41.424678], [2.142346, 41.424815], [2.142363, 41.424813], [2.142569, 41.424755], [2.142783, 41.424641], [2.142851, 41.424619], [2.142918, 41.424596], [2.142983, 41.424572], [2.14304, 41.42455], [2.143098, 41.424529], [2.143157, 41.42451], [2.143219, 41.424491], [2.143278, 41.424476], [2.143338, 41.424462], [2.143399, 41.42445], [2.143461, 41.424439], [2.143521, 41.424431], [2.143618, 41.424415], [2.143722, 41.424407], [2.143827, 41.424403], [2.143932, 41.424404], [2.144038, 41.424409], [2.144142, 41.424417], [2.144182, 41.424422], [2.144222, 41.424427], [2.144262, 41.424432], [2.144338, 41.424443], [2.144414, 41.424452], [2.144491, 41.424459], [2.144568, 41.424464], [2.144617, 41.424465], [2.144725, 41.424467], [2.144834, 41.424465], [2.144944, 41.424459], [2.145052, 41.424449], [2.145159, 41.424436], [2.145322, 41.424408], [2.145926, 41.424267], [2.145982, 41.424258], [2.146039, 41.42425], [2.146094, 41.424243], [2.146169, 41.424234], [2.146246, 41.424229], [2.146324, 41.424227], [2.146401, 41.424228], [2.146479, 41.424232], [2.146556, 41.42424], [2.14663, 41.424251], [2.146701, 41.424262], [2.146772, 41.424275], [2.146842, 41.42429], [2.146911, 41.424307], [2.14698, 41.424326], [2.146993, 41.42433], [2.147276, 41.424414], [2.147733, 41.424548], [2.147839, 41.424598], [2.147943, 41.424649], [2.148045, 41.424702], [2.148155, 41.424764], [2.148263, 41.424828], [2.148368, 41.424894], [2.148459, 41.424955], [2.148548, 41.425018], [2.148634, 41.425082], [2.148662, 41.425104], [2.14869, 41.425125], [2.148718, 41.425148], [2.148788, 41.425203], [2.148861, 41.425256], [2.148935, 41.425308], [2.149012, 41.425358], [2.149088, 41.425405], [2.149165, 41.42545], [2.149244, 41.425494], [2.149325, 41.425535], [2.149437, 41.425588], [2.149552, 41.425638], [2.149669, 41.425685], [2.149787, 41.425727], [2.150015, 41.425806], [2.15004, 41.425805], [2.150071, 41.425805], [2.150103, 41.425807], [2.150134, 41.425811], [2.150138, 41.425811], [2.150165, 41.425816], [2.150195, 41.425824], [2.150224, 41.425833], [2.150255, 41.425844], [2.150284, 41.425859], [2.15031, 41.425874], [2.150334, 41.42589], [2.150356, 41.425908], [2.150377, 41.425927], [2.150395, 41.425947], [2.150412, 41.425968], [2.150426, 41.42599], [2.150438, 41.426013], [2.150448, 41.426036], [2.150455, 41.42606], [2.150461, 41.426084], [2.150462, 41.426098], [2.151862, 41.42606]]]]
    },
    "properties": {
      "neighbourhood": "la Teixonera",
      "neighbourhood_group": "Horta-Guinardó"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.134664, 41.431726], [2.134978, 41.43166], [2.134938, 41.431638], [2.134936, 41.431609], [2.13493, 41.431609], [2.134924, 41.431607], [2.134918, 41.431607], [2.134913, 41.431605], [2.134908, 41.431604], [2.134904, 41.431602], [2.134897, 41.431597], [2.134891, 41.431593], [2.134887, 41.431589], [2.134881, 41.431585], [2.134876, 41.431581], [2.13487, 41.431575], [2.134859, 41.431571], [2.134846, 41.431566], [2.134828, 41.43156], [2.134819, 41.431557], [2.13481, 41.431554], [2.134801, 41.431552], [2.134794, 41.431551], [2.134785, 41.431546], [2.134777, 41.431542], [2.134773, 41.431541], [2.134762, 41.431536], [2.134753, 41.431531], [2.134743, 41.431525], [2.134731, 41.431517], [2.13472, 41.431512], [2.134711, 41.431507], [2.134705, 41.431502], [2.134697, 41.431494], [2.134687, 41.431487], [2.134676, 41.431478], [2.134667, 41.431472], [2.134661, 41.431469], [2.134655, 41.431465], [2.134651, 41.431463], [2.134649, 41.43146], [2.134639, 41.431447], [2.134635, 41.431442], [2.134631, 41.431436], [2.134626, 41.43143], [2.134621, 41.431424], [2.134616, 41.431418], [2.134608, 41.431411], [2.134604, 41.431408], [2.134599, 41.431403], [2.134594, 41.431397], [2.134587, 41.431388], [2.134585, 41.431385], [2.134582, 41.431378], [2.134579, 41.431375], [2.134565, 41.431357], [2.134556, 41.431332], [2.134553, 41.431323], [2.134551, 41.431319], [2.13455, 41.431315], [2.134547, 41.431311], [2.134543, 41.431303], [2.13454, 41.431297], [2.134539, 41.431293], [2.134537, 41.431287], [2.134534, 41.431274], [2.134531, 41.431267], [2.134529, 41.431261], [2.134524, 41.431254], [2.134516, 41.43124], [2.134509, 41.431227], [2.134504, 41.431216], [2.134499, 41.431206], [2.134497, 41.431199], [2.134495, 41.43119], [2.134494, 41.431181], [2.134493, 41.431173], [2.134493, 41.431157], [2.134494, 41.431136], [2.134495, 41.431102], [2.134495, 41.431091], [2.134495, 41.431085], [2.134494, 41.431079], [2.134492, 41.43107], [2.13449, 41.431063], [2.134489, 41.431056], [2.134488, 41.431045], [2.134489, 41.431036], [2.13449, 41.431026], [2.13449, 41.431019], [2.13449, 41.431012], [2.134486, 41.430979], [2.134486, 41.430973], [2.134486, 41.430967], [2.134488, 41.430957], [2.13449, 41.430944], [2.134493, 41.430909], [2.134491, 41.430867], [2.134492, 41.430852], [2.134497, 41.430837], [2.134506, 41.43081], [2.134515, 41.430786], [2.134524, 41.430766], [2.134529, 41.430756], [2.134537, 41.430744], [2.134544, 41.430726], [2.134552, 41.430712], [2.134557, 41.430691], [2.134565, 41.430666], [2.13457, 41.430646], [2.134578, 41.430633], [2.134584, 41.43062], [2.134585, 41.430612], [2.134585, 41.430604], [2.134598, 41.430571], [2.134603, 41.430561], [2.134612, 41.430549], [2.134616, 41.430538], [2.134625, 41.430514], [2.134639, 41.430477], [2.134648, 41.430461], [2.134653, 41.430448], [2.134657, 41.430433], [2.134668, 41.430414], [2.134675, 41.430396], [2.13468, 41.430385], [2.13468, 41.430374], [2.134688, 41.430361], [2.134689, 41.430355], [2.134695, 41.430342], [2.1347, 41.430329], [2.134703, 41.430319], [2.134702, 41.430314], [2.134702, 41.430307], [2.134706, 41.430298], [2.134714, 41.430279], [2.134719, 41.430266], [2.134721, 41.430259], [2.134724, 41.430252], [2.134725, 41.430249], [2.134726, 41.430244], [2.134726, 41.430241], [2.135322, 41.42974], [2.135783, 41.429353], [2.137613, 41.42979], [2.137944, 41.429869], [2.138094, 41.429854], [2.138375, 41.429798], [2.138148, 41.429241], [2.138055, 41.429049], [2.137857, 41.428785], [2.137586, 41.428439], [2.137294, 41.428114], [2.137613, 41.428084], [2.138064, 41.42804], [2.138115, 41.428035], [2.138278, 41.428007], [2.138363, 41.427889], [2.138373, 41.427874], [2.138443, 41.427773], [2.138706, 41.427408], [2.138741, 41.427356], [2.138994, 41.426979], [2.139047, 41.426965], [2.139112, 41.426949], [2.139156, 41.426938], [2.139181, 41.426931], [2.139198, 41.426975], [2.139247, 41.426988], [2.139251, 41.426988], [2.139255, 41.426988], [2.139258, 41.426986], [2.139275, 41.426947], [2.13926, 41.426914], [2.139394, 41.42688], [2.139214, 41.426486], [2.139646, 41.425771], [2.139674, 41.425725], [2.139817, 41.425488], [2.141382, 41.425085], [2.14222, 41.424848], [2.142346, 41.424815], [2.142271, 41.424678], [2.142054, 41.424311], [2.14183, 41.423926], [2.141667, 41.423628], [2.141467, 41.423209], [2.141273, 41.422803], [2.141077, 41.422396], [2.14083, 41.42188], [2.140681, 41.42157], [2.140473, 41.421129], [2.140387, 41.421091], [2.140151, 41.420558], [2.140025, 41.420272], [2.138881, 41.420592], [2.13808, 41.420823], [2.137824, 41.420913], [2.137739, 41.420972], [2.137681, 41.421068], [2.137679, 41.421236], [2.137713, 41.421323], [2.137843, 41.421406], [2.138206, 41.421551], [2.138333, 41.421618], [2.13841, 41.421725], [2.138452, 41.42191], [2.138385, 41.422067], [2.138018, 41.422908], [2.13784, 41.423134], [2.137691, 41.423273], [2.137411, 41.423427], [2.137207, 41.423494], [2.13704, 41.423531], [2.136428, 41.423584], [2.136212, 41.42369], [2.136122, 41.423871], [2.136095, 41.424377], [2.136062, 41.424457], [2.135885, 41.42462], [2.135762, 41.424679], [2.135159, 41.424878], [2.135077, 41.424835], [2.13506, 41.424803], [2.135056, 41.424768], [2.135065, 41.424734], [2.135084, 41.424699], [2.135121, 41.424652], [2.13536, 41.424436], [2.135379, 41.424408], [2.135387, 41.424376], [2.135386, 41.424346], [2.135373, 41.424309], [2.135321, 41.4242], [2.135252, 41.42409], [2.135176, 41.424002], [2.13506, 41.423897], [2.134987, 41.423841], [2.134898, 41.423789], [2.134864, 41.423754], [2.13484, 41.423724], [2.134792, 41.423614], [2.134666, 41.423642], [2.134505, 41.423432], [2.13442, 41.423286], [2.134302, 41.423048], [2.134229, 41.422789], [2.134238, 41.4227], [2.134274, 41.422637], [2.134321, 41.422586], [2.134428, 41.422499], [2.134507, 41.422449], [2.134626, 41.422378], [2.134671, 41.422347], [2.134713, 41.422288], [2.135052, 41.421901], [2.135268, 41.42151], [2.135273, 41.421484], [2.135245, 41.421453], [2.135212, 41.421455], [2.134742, 41.421871], [2.134536, 41.421921], [2.134241, 41.421924], [2.134046, 41.421887], [2.133806, 41.421812], [2.133566, 41.421821], [2.133329, 41.421858], [2.133134, 41.42183], [2.132983, 41.421723], [2.132844, 41.421604], [2.132488, 41.421534], [2.132131, 41.421501], [2.131662, 41.421427], [2.131405, 41.421414], [2.131301, 41.421365], [2.131272, 41.421323], [2.131296, 41.421147], [2.131372, 41.421029], [2.131482, 41.420929], [2.131747, 41.420639], [2.132008, 41.420301], [2.132213, 41.420076], [2.132229, 41.419991], [2.132202, 41.419908], [2.132127, 41.419835], [2.131651, 41.41967], [2.131312, 41.419501], [2.131155, 41.419419], [2.131001, 41.419424], [2.130888, 41.419476], [2.130803, 41.419582], [2.130681, 41.419853], [2.130543, 41.41997], [2.130127, 41.420121], [2.129896, 41.420029], [2.129831, 41.419791], [2.129687, 41.419593], [2.129483, 41.419539], [2.129287, 41.41956], [2.129135, 41.419615], [2.129019, 41.419705], [2.128918, 41.419901], [2.12887, 41.419942], [2.128789, 41.419953], [2.128707, 41.419936], [2.12847, 41.419756], [2.128342, 41.419728], [2.128179, 41.419763], [2.128059, 41.419747], [2.127874, 41.419632], [2.1276, 41.419528], [2.127471, 41.419406], [2.127483, 41.419244], [2.127594, 41.419192], [2.12776, 41.419144], [2.127937, 41.419062], [2.128151, 41.418841], [2.128182, 41.418765], [2.128158, 41.418682], [2.128099, 41.418591], [2.127945, 41.418476], [2.127901, 41.418423], [2.127896, 41.418362], [2.127948, 41.418283], [2.12809, 41.418167], [2.1285, 41.417943], [2.128774, 41.417696], [2.128937, 41.417531], [2.128905, 41.417478], [2.128814, 41.417516], [2.128801, 41.417498], [2.128185, 41.417774], [2.128063, 41.417828], [2.12681, 41.418386], [2.126462, 41.418541], [2.12588, 41.418799], [2.125443, 41.41899], [2.125334, 41.419038], [2.12526, 41.419069], [2.125208, 41.419088], [2.12517, 41.419105], [2.124946, 41.419185], [2.12486, 41.419211], [2.124747, 41.419242], [2.124409, 41.419384], [2.124305, 41.419427], [2.123025, 41.419973], [2.122891, 41.420029], [2.122548, 41.420176], [2.122074, 41.420378], [2.12197, 41.420423], [2.12184, 41.420479], [2.121576, 41.420592], [2.121563, 41.42057], [2.121449, 41.420621], [2.121284, 41.420691], [2.121286, 41.420695], [2.121224, 41.420721], [2.121228, 41.420723], [2.121179, 41.420744], [2.121449, 41.420857], [2.121522, 41.420895], [2.121551, 41.420932], [2.121588, 41.421055], [2.121517, 41.421258], [2.121421, 41.421409], [2.121172, 41.42167], [2.121008, 41.421798], [2.120908, 41.421901], [2.120823, 41.422037], [2.120686, 41.422347], [2.12054, 41.422594], [2.120484, 41.422697], [2.120478, 41.42279], [2.120506, 41.422905], [2.120554, 41.42299], [2.120557, 41.423109], [2.120464, 41.423693], [2.120465, 41.423918], [2.120543, 41.424156], [2.121244, 41.425302], [2.121348, 41.425492], [2.121364, 41.425592], [2.121341, 41.425685], [2.121276, 41.425768], [2.121172, 41.425833], [2.121248, 41.425876], [2.121939, 41.426522], [2.122001, 41.4267], [2.122166, 41.427029], [2.12229, 41.427188], [2.122329, 41.427229], [2.122458, 41.427282], [2.12248, 41.427377], [2.122485, 41.427403], [2.122633, 41.427591], [2.122677, 41.427787], [2.122754, 41.427881], [2.122845, 41.428026], [2.12283, 41.428109], [2.122843, 41.428155], [2.122897, 41.428209], [2.123057, 41.428591], [2.123128, 41.42871], [2.123642, 41.428927], [2.12387, 41.42922], [2.123936, 41.429366], [2.126642, 41.431623], [2.126758, 41.431689], [2.126845, 41.431733], [2.126951, 41.431778], [2.127049, 41.431814], [2.127161, 41.431842], [2.127283, 41.431868], [2.127413, 41.431889], [2.127559, 41.431905], [2.127574, 41.431906], [2.127581, 41.431906], [2.127587, 41.431907], [2.127628, 41.431909], [2.127668, 41.43191], [2.127708, 41.431911], [2.127749, 41.43191], [2.127797, 41.431908], [2.127845, 41.431905], [2.127888, 41.431902], [2.127931, 41.431899], [2.12798, 41.431893], [2.128028, 41.431887], [2.12811, 41.431878], [2.128191, 41.431868], [2.128286, 41.431857], [2.128381, 41.431846], [2.128505, 41.43183], [2.128628, 41.431815], [2.128643, 41.431814], [2.128658, 41.431812], [2.128674, 41.43181], [2.128689, 41.431808], [2.128707, 41.431806], [2.128725, 41.431803], [2.128746, 41.431801], [2.128767, 41.431799], [2.128793, 41.431796], [2.128818, 41.431793], [2.128841, 41.43179], [2.128864, 41.431788], [2.128882, 41.431787], [2.128899, 41.431785], [2.128914, 41.431784], [2.128928, 41.431783], [2.128938, 41.431782], [2.128949, 41.431782], [2.128962, 41.431781], [2.128974, 41.431781], [2.128986, 41.431781], [2.128997, 41.431781], [2.12901, 41.431781], [2.129023, 41.431782], [2.129034, 41.431782], [2.129044, 41.431782], [2.129058, 41.431783], [2.129073, 41.431784], [2.129085, 41.431785], [2.129098, 41.431785], [2.12911, 41.431786], [2.129123, 41.431788], [2.129133, 41.43179], [2.129143, 41.431791], [2.12916, 41.431793], [2.129177, 41.431795], [2.129194, 41.431798], [2.12921, 41.431801], [2.129228, 41.431803], [2.129245, 41.431805], [2.12927, 41.43181], [2.129296, 41.431815], [2.129353, 41.431823], [2.12941, 41.431831], [2.12946, 41.431838], [2.129509, 41.431847], [2.129559, 41.431855], [2.12961, 41.431863], [2.129643, 41.431869], [2.129676, 41.431874], [2.1297, 41.431878], [2.129724, 41.431881], [2.129784, 41.43189], [2.129843, 41.431894], [2.129903, 41.431893], [2.129963, 41.43189], [2.130022, 41.431882], [2.130075, 41.431873], [2.130098, 41.431868], [2.130122, 41.431863], [2.130157, 41.431855], [2.130193, 41.431847], [2.130225, 41.43184], [2.130257, 41.431833], [2.13029, 41.431825], [2.130323, 41.431817], [2.130362, 41.431808], [2.130401, 41.431798], [2.130445, 41.431788], [2.130489, 41.431778], [2.130529, 41.431768], [2.130568, 41.431759], [2.130608, 41.43175], [2.130649, 41.43174], [2.13068, 41.431733], [2.130711, 41.431725], [2.13075, 41.431716], [2.130788, 41.431707], [2.130836, 41.431696], [2.130884, 41.431685], [2.130913, 41.431679], [2.130942, 41.431673], [2.130963, 41.431669], [2.130983, 41.431664], [2.130985, 41.431664], [2.131047, 41.431655], [2.131109, 41.431649], [2.131172, 41.431647], [2.131236, 41.431649], [2.13127, 41.431651], [2.131328, 41.431659], [2.131385, 41.43167], [2.13144, 41.431685], [2.131494, 41.431703], [2.131545, 41.431724], [2.131553, 41.431728], [2.131566, 41.431734], [2.131578, 41.431739], [2.131602, 41.431751], [2.131626, 41.431762], [2.131657, 41.431777], [2.131688, 41.431792], [2.131721, 41.431808], [2.131755, 41.431824], [2.131788, 41.43184], [2.13182, 41.431856], [2.131851, 41.431871], [2.131882, 41.431886], [2.13191, 41.431899], [2.131937, 41.431912], [2.131991, 41.43194], [2.132049, 41.431962], [2.13211, 41.43198], [2.132163, 41.431993], [2.132213, 41.432], [2.132265, 41.432003], [2.132318, 41.432003], [2.13237, 41.431999], [2.132383, 41.431997], [2.132434, 41.431989], [2.132484, 41.431978], [2.132523, 41.431966], [2.132525, 41.431965], [2.132538, 41.431961], [2.13255, 41.431957], [2.132576, 41.431949], [2.132601, 41.431941], [2.132633, 41.43193], [2.132665, 41.431919], [2.132701, 41.431906], [2.132737, 41.431894], [2.132778, 41.43188], [2.13282, 41.431865], [2.132861, 41.431851], [2.132902, 41.431837], [2.132948, 41.431822], [2.132994, 41.431807], [2.133034, 41.431793], [2.133074, 41.43178], [2.133116, 41.431767], [2.133157, 41.431754], [2.133247, 41.431727], [2.13325, 41.431727], [2.13329, 41.431717], [2.133335, 41.431709], [2.133389, 41.431702], [2.133445, 41.431698], [2.133485, 41.431699], [2.133533, 41.431704], [2.133579, 41.431712], [2.133625, 41.431724], [2.133668, 41.431739], [2.133709, 41.431757], [2.133748, 41.431778], [2.133783, 41.431802], [2.133816, 41.431829], [2.133844, 41.431858], [2.133869, 41.431889], [2.133889, 41.431921], [2.133905, 41.431955], [2.133905, 41.431957], [2.133915, 41.431995], [2.133921, 41.432034], [2.133922, 41.432073], [2.133918, 41.432112], [2.133909, 41.43215], [2.133895, 41.432188], [2.133875, 41.432233], [2.133854, 41.432277], [2.133836, 41.432313], [2.133817, 41.432348], [2.133792, 41.432392], [2.133767, 41.432436], [2.133757, 41.432455], [2.133746, 41.432475], [2.133733, 41.432499], [2.13372, 41.432524], [2.133711, 41.432541], [2.133703, 41.432559], [2.133696, 41.432574], [2.13369, 41.432589], [2.133685, 41.4326], [2.133681, 41.43261], [2.133679, 41.432616], [2.133661, 41.432671], [2.133648, 41.432727], [2.13364, 41.432783], [2.133636, 41.43284], [2.133638, 41.432896], [2.133644, 41.432953], [2.133655, 41.433009], [2.13367, 41.433064], [2.133671, 41.433065], [2.133678, 41.433089], [2.133685, 41.433113], [2.133695, 41.433145], [2.133705, 41.433178], [2.133717, 41.433215], [2.133729, 41.433253], [2.133742, 41.433295], [2.133756, 41.433337], [2.133762, 41.433357], [2.133768, 41.433377], [2.133792, 41.433457], [2.133798, 41.433477], [2.133808, 41.433508], [2.133818, 41.433537], [2.133827, 41.433567], [2.133835, 41.43359], [2.133842, 41.433613], [2.13385, 41.433639], [2.133859, 41.433666], [2.133866, 41.433689], [2.133873, 41.433713], [2.13388, 41.433736], [2.133888, 41.43376], [2.133895, 41.433781], [2.133901, 41.433803], [2.133908, 41.433823], [2.133914, 41.433842], [2.13392, 41.433859], [2.133926, 41.433876], [2.133933, 41.433893], [2.133939, 41.43391], [2.133946, 41.433927], [2.133953, 41.433944], [2.13396, 41.43396], [2.133967, 41.433975], [2.133974, 41.433991], [2.133981, 41.434006], [2.133988, 41.434018], [2.133995, 41.43403], [2.134011, 41.434056], [2.134033, 41.434081], [2.134058, 41.434105], [2.134087, 41.434125], [2.134118, 41.434144], [2.134153, 41.434159], [2.13419, 41.434171], [2.134228, 41.434179], [2.134267, 41.434184], [2.134307, 41.434185], [2.134347, 41.434183], [2.13437, 41.43418], [2.134387, 41.434177], [2.134426, 41.434168], [2.134464, 41.434155], [2.134499, 41.434139], [2.134532, 41.43412], [2.134554, 41.434104], [2.13458, 41.434081], [2.134601, 41.434056], [2.134619, 41.43403], [2.134632, 41.434002], [2.134641, 41.433973], [2.134645, 41.433943], [2.134645, 41.433933], [2.134642, 41.433895], [2.134634, 41.433858], [2.134622, 41.433821], [2.134605, 41.433785], [2.134583, 41.433751], [2.134579, 41.433745], [2.134574, 41.433738], [2.13456, 41.433719], [2.134545, 41.4337], [2.134523, 41.433671], [2.134501, 41.433642], [2.134477, 41.43361], [2.134453, 41.433579], [2.13443, 41.433549], [2.134407, 41.433519], [2.134349, 41.433444], [2.13429, 41.433369], [2.13428, 41.433355], [2.134269, 41.433341], [2.134247, 41.433313], [2.134225, 41.433284], [2.134203, 41.433256], [2.134182, 41.433228], [2.134167, 41.433208], [2.134152, 41.433188], [2.134126, 41.433149], [2.134102, 41.433105], [2.134081, 41.43306], [2.134066, 41.433014], [2.134055, 41.432967], [2.134049, 41.432919], [2.134047, 41.432872], [2.13405, 41.432824], [2.134059, 41.432777], [2.134071, 41.43273], [2.134089, 41.432684], [2.134111, 41.432639], [2.134405, 41.432174], [2.134426, 41.432131], [2.134442, 41.432087], [2.134454, 41.432042], [2.134461, 41.431996], [2.134463, 41.43195], [2.13446, 41.431904], [2.134452, 41.431859], [2.13444, 41.431814], [2.134423, 41.43177], [2.134417, 41.431757], [2.134664, 41.431726]]]]
    },
    "properties": {
      "neighbourhood": "Sant Genís dels Agudells",
      "neighbourhood_group": "Horta-Guinardó"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.136292, 41.44277], [2.136314, 41.44276], [2.136323, 41.442763], [2.136405, 41.442639], [2.136499, 41.442513], [2.136553, 41.442394], [2.136604, 41.4423], [2.136693, 41.442256], [2.136763, 41.442164], [2.136838, 41.442072], [2.136914, 41.442005], [2.137003, 41.441918], [2.137065, 41.441845], [2.137086, 41.44176], [2.137075, 41.441718], [2.137057, 41.441646], [2.137029, 41.441552], [2.137012, 41.44142], [2.137005, 41.441309], [2.136987, 41.441179], [2.13697, 41.441079], [2.13696, 41.440988], [2.137009, 41.440908], [2.13709, 41.440801], [2.137152, 41.440738], [2.137217, 41.44069], [2.137318, 41.440617], [2.137406, 41.440573], [2.13752, 41.440528], [2.137613, 41.4405], [2.137642, 41.440492], [2.137745, 41.440467], [2.137759, 41.440456], [2.137816, 41.44044], [2.137841, 41.440405], [2.137853, 41.44035], [2.138446, 41.44082], [2.138994, 41.440591], [2.139211, 41.440522], [2.139408, 41.440447], [2.13976, 41.440289], [2.140368, 41.440042], [2.14116, 41.439695], [2.14178, 41.439938], [2.142732, 41.44031], [2.142844, 41.440265], [2.142959, 41.440488], [2.143782, 41.440168], [2.144382, 41.439782], [2.145373, 41.439428], [2.145645, 41.439262], [2.145733, 41.439094], [2.145947, 41.438877], [2.145977, 41.438846], [2.145986, 41.43885], [2.145998, 41.438851], [2.146018, 41.43885], [2.146047, 41.438849], [2.146076, 41.438845], [2.146107, 41.438831], [2.146129, 41.438809], [2.146143, 41.438787], [2.14615, 41.438759], [2.146145, 41.438731], [2.146337, 41.438624], [2.147223, 41.438131], [2.147229, 41.438128], [2.147363, 41.437989], [2.147511, 41.438057], [2.14761, 41.437984], [2.14766, 41.437948], [2.147727, 41.437893], [2.147801, 41.43783], [2.147864, 41.437777], [2.147923, 41.437727], [2.147971, 41.437688], [2.148015, 41.437645], [2.148048, 41.437606], [2.148073, 41.437568], [2.148107, 41.437504], [2.14816, 41.437239], [2.148275, 41.436669], [2.148309, 41.43658], [2.148589, 41.436153], [2.148584, 41.43615], [2.148462, 41.436056], [2.148352, 41.435969], [2.148246, 41.435881], [2.148142, 41.43579], [2.148046, 41.435707], [2.147952, 41.435622], [2.147862, 41.435535], [2.147766, 41.435441], [2.147672, 41.435345], [2.147581, 41.435248], [2.147492, 41.435148], [2.147403, 41.435046], [2.147316, 41.434944], [2.147311, 41.434939], [2.147307, 41.434933], [2.147302, 41.434927], [2.147224, 41.434832], [2.147148, 41.434735], [2.147076, 41.434637], [2.147067, 41.434623], [2.147057, 41.43461], [2.147048, 41.434597], [2.146982, 41.434505], [2.146919, 41.434412], [2.146857, 41.434318], [2.146798, 41.434226], [2.146741, 41.434134], [2.146685, 41.434041], [2.146668, 41.434013], [2.146652, 41.433985], [2.146636, 41.433957], [2.146591, 41.433879], [2.146529, 41.433767], [2.146471, 41.433659], [2.146414, 41.433551], [2.146385, 41.433495], [2.146357, 41.433439], [2.146329, 41.433384], [2.146295, 41.433317], [2.146262, 41.43325], [2.146229, 41.433183], [2.146117, 41.432949], [2.146062, 41.432831], [2.146008, 41.432714], [2.145953, 41.432597], [2.145952, 41.432595], [2.145642, 41.431916], [2.144587, 41.429606], [2.143999, 41.428335], [2.142402, 41.424917], [2.142346, 41.424815], [2.14222, 41.424848], [2.141382, 41.425085], [2.139817, 41.425488], [2.139674, 41.425725], [2.139646, 41.425771], [2.139214, 41.426486], [2.139394, 41.42688], [2.13926, 41.426914], [2.139275, 41.426947], [2.139258, 41.426986], [2.139255, 41.426988], [2.139251, 41.426988], [2.139247, 41.426988], [2.139198, 41.426975], [2.139181, 41.426931], [2.139156, 41.426938], [2.139112, 41.426949], [2.139047, 41.426965], [2.138994, 41.426979], [2.138741, 41.427356], [2.138706, 41.427408], [2.138443, 41.427773], [2.138373, 41.427874], [2.138363, 41.427889], [2.138278, 41.428007], [2.138115, 41.428035], [2.138064, 41.42804], [2.137613, 41.428084], [2.137294, 41.428114], [2.137586, 41.428439], [2.137857, 41.428785], [2.138055, 41.429049], [2.138148, 41.429241], [2.138375, 41.429798], [2.138094, 41.429854], [2.137944, 41.429869], [2.137613, 41.42979], [2.135783, 41.429353], [2.135322, 41.42974], [2.134726, 41.430241], [2.134726, 41.430244], [2.134725, 41.430249], [2.134724, 41.430252], [2.134721, 41.430259], [2.134719, 41.430266], [2.134714, 41.430279], [2.134706, 41.430298], [2.134702, 41.430307], [2.134702, 41.430314], [2.134703, 41.430319], [2.1347, 41.430329], [2.134695, 41.430342], [2.134689, 41.430355], [2.134688, 41.430361], [2.13468, 41.430374], [2.13468, 41.430385], [2.134675, 41.430396], [2.134668, 41.430414], [2.134657, 41.430433], [2.134653, 41.430448], [2.134648, 41.430461], [2.134639, 41.430477], [2.134625, 41.430514], [2.134616, 41.430538], [2.134612, 41.430549], [2.134603, 41.430561], [2.134598, 41.430571], [2.134585, 41.430604], [2.134585, 41.430612], [2.134584, 41.43062], [2.134578, 41.430633], [2.13457, 41.430646], [2.134565, 41.430666], [2.134557, 41.430691], [2.134552, 41.430712], [2.134544, 41.430726], [2.134537, 41.430744], [2.134529, 41.430756], [2.134524, 41.430766], [2.134515, 41.430786], [2.134506, 41.43081], [2.134497, 41.430837], [2.134492, 41.430852], [2.134491, 41.430867], [2.134493, 41.430909], [2.13449, 41.430944], [2.134488, 41.430957], [2.134486, 41.430967], [2.134486, 41.430973], [2.134486, 41.430979], [2.13449, 41.431012], [2.13449, 41.431019], [2.13449, 41.431026], [2.134489, 41.431036], [2.134488, 41.431045], [2.134489, 41.431056], [2.13449, 41.431063], [2.134492, 41.43107], [2.134494, 41.431079], [2.134495, 41.431085], [2.134495, 41.431091], [2.134495, 41.431102], [2.134494, 41.431136], [2.134493, 41.431157], [2.134493, 41.431173], [2.134494, 41.431181], [2.134495, 41.43119], [2.134497, 41.431199], [2.134499, 41.431206], [2.134504, 41.431216], [2.134509, 41.431227], [2.134516, 41.43124], [2.134524, 41.431254], [2.134529, 41.431261], [2.134531, 41.431267], [2.134534, 41.431274], [2.134537, 41.431287], [2.134539, 41.431293], [2.13454, 41.431297], [2.134543, 41.431303], [2.134547, 41.431311], [2.13455, 41.431315], [2.134551, 41.431319], [2.134553, 41.431323], [2.134556, 41.431332], [2.134565, 41.431357], [2.134579, 41.431375], [2.134582, 41.431378], [2.134585, 41.431385], [2.134587, 41.431388], [2.134594, 41.431397], [2.134599, 41.431403], [2.134604, 41.431408], [2.134608, 41.431411], [2.134616, 41.431418], [2.134621, 41.431424], [2.134626, 41.43143], [2.134631, 41.431436], [2.134635, 41.431442], [2.134639, 41.431447], [2.134649, 41.43146], [2.134651, 41.431463], [2.134655, 41.431465], [2.134661, 41.431469], [2.134667, 41.431472], [2.134676, 41.431478], [2.134687, 41.431487], [2.134697, 41.431494], [2.134705, 41.431502], [2.134711, 41.431507], [2.13472, 41.431512], [2.134731, 41.431517], [2.134743, 41.431525], [2.134753, 41.431531], [2.134762, 41.431536], [2.134773, 41.431541], [2.134777, 41.431542], [2.134785, 41.431546], [2.134794, 41.431551], [2.134801, 41.431552], [2.13481, 41.431554], [2.134819, 41.431557], [2.134828, 41.43156], [2.134846, 41.431566], [2.134859, 41.431571], [2.13487, 41.431575], [2.134876, 41.431581], [2.134881, 41.431585], [2.134887, 41.431589], [2.134891, 41.431593], [2.134897, 41.431597], [2.134904, 41.431602], [2.134908, 41.431604], [2.134913, 41.431605], [2.134918, 41.431607], [2.134924, 41.431607], [2.13493, 41.431609], [2.134936, 41.431609], [2.134938, 41.431638], [2.134978, 41.43166], [2.134664, 41.431726], [2.134417, 41.431757], [2.134423, 41.43177], [2.13444, 41.431814], [2.134452, 41.431859], [2.13446, 41.431904], [2.134463, 41.43195], [2.134461, 41.431996], [2.134454, 41.432042], [2.134442, 41.432087], [2.134426, 41.432131], [2.134405, 41.432174], [2.134111, 41.432639], [2.134089, 41.432684], [2.134071, 41.43273], [2.134059, 41.432777], [2.13405, 41.432824], [2.134047, 41.432872], [2.134049, 41.432919], [2.134055, 41.432967], [2.134066, 41.433014], [2.134081, 41.43306], [2.134102, 41.433105], [2.134126, 41.433149], [2.134152, 41.433188], [2.134167, 41.433208], [2.134182, 41.433228], [2.134203, 41.433256], [2.134225, 41.433284], [2.134247, 41.433313], [2.134269, 41.433341], [2.13428, 41.433355], [2.13429, 41.433369], [2.134349, 41.433444], [2.134407, 41.433519], [2.13443, 41.433549], [2.134453, 41.433579], [2.134477, 41.43361], [2.134501, 41.433642], [2.134523, 41.433671], [2.134545, 41.4337], [2.13456, 41.433719], [2.134574, 41.433738], [2.134579, 41.433745], [2.134583, 41.433751], [2.134605, 41.433785], [2.134622, 41.433821], [2.134634, 41.433858], [2.134642, 41.433895], [2.134645, 41.433933], [2.134645, 41.433943], [2.134641, 41.433973], [2.134632, 41.434002], [2.134619, 41.43403], [2.134601, 41.434056], [2.13458, 41.434081], [2.134554, 41.434104], [2.134532, 41.43412], [2.134499, 41.434139], [2.134464, 41.434155], [2.134426, 41.434168], [2.134387, 41.434177], [2.13437, 41.43418], [2.134347, 41.434183], [2.134307, 41.434185], [2.134267, 41.434184], [2.134228, 41.434179], [2.13419, 41.434171], [2.134153, 41.434159], [2.134118, 41.434144], [2.134087, 41.434125], [2.134058, 41.434105], [2.134033, 41.434081], [2.134011, 41.434056], [2.133995, 41.43403], [2.133988, 41.434018], [2.133981, 41.434006], [2.133974, 41.433991], [2.133967, 41.433975], [2.13396, 41.43396], [2.133953, 41.433944], [2.133946, 41.433927], [2.133939, 41.43391], [2.133933, 41.433893], [2.133926, 41.433876], [2.13392, 41.433859], [2.133914, 41.433842], [2.133908, 41.433823], [2.133901, 41.433803], [2.133895, 41.433781], [2.133888, 41.43376], [2.13388, 41.433736], [2.133873, 41.433713], [2.133866, 41.433689], [2.133859, 41.433666], [2.13385, 41.433639], [2.133842, 41.433613], [2.133835, 41.43359], [2.133827, 41.433567], [2.133818, 41.433537], [2.133808, 41.433508], [2.133798, 41.433477], [2.133792, 41.433457], [2.133768, 41.433377], [2.133762, 41.433357], [2.133756, 41.433337], [2.133742, 41.433295], [2.133729, 41.433253], [2.133717, 41.433215], [2.133705, 41.433178], [2.133695, 41.433145], [2.133685, 41.433113], [2.133678, 41.433089], [2.133671, 41.433065], [2.13367, 41.433064], [2.133655, 41.433009], [2.133644, 41.432953], [2.133638, 41.432896], [2.133636, 41.43284], [2.13364, 41.432783], [2.133648, 41.432727], [2.133661, 41.432671], [2.133679, 41.432616], [2.133681, 41.43261], [2.133685, 41.4326], [2.13369, 41.432589], [2.133696, 41.432574], [2.133703, 41.432559], [2.133711, 41.432541], [2.13372, 41.432524], [2.133733, 41.432499], [2.133746, 41.432475], [2.133757, 41.432455], [2.133767, 41.432436], [2.133792, 41.432392], [2.133817, 41.432348], [2.133836, 41.432313], [2.133854, 41.432277], [2.133875, 41.432233], [2.133895, 41.432188], [2.133909, 41.43215], [2.133918, 41.432112], [2.133922, 41.432073], [2.133921, 41.432034], [2.133915, 41.431995], [2.133905, 41.431957], [2.133905, 41.431955], [2.133889, 41.431921], [2.133869, 41.431889], [2.133844, 41.431858], [2.133816, 41.431829], [2.133783, 41.431802], [2.133748, 41.431778], [2.133709, 41.431757], [2.133668, 41.431739], [2.133625, 41.431724], [2.133579, 41.431712], [2.133533, 41.431704], [2.133485, 41.431699], [2.133445, 41.431698], [2.133389, 41.431702], [2.133335, 41.431709], [2.13329, 41.431717], [2.13325, 41.431727], [2.133247, 41.431727], [2.133157, 41.431754], [2.133116, 41.431767], [2.133074, 41.43178], [2.133034, 41.431793], [2.132994, 41.431807], [2.132948, 41.431822], [2.132902, 41.431837], [2.132861, 41.431851], [2.13282, 41.431865], [2.132778, 41.43188], [2.132737, 41.431894], [2.132701, 41.431906], [2.132665, 41.431919], [2.132633, 41.43193], [2.132601, 41.431941], [2.132576, 41.431949], [2.13255, 41.431957], [2.132538, 41.431961], [2.132525, 41.431965], [2.132523, 41.431966], [2.132484, 41.431978], [2.132434, 41.431989], [2.132383, 41.431997], [2.13237, 41.431999], [2.132318, 41.432003], [2.132265, 41.432003], [2.132213, 41.432], [2.132163, 41.431993], [2.13211, 41.43198], [2.132049, 41.431962], [2.131991, 41.43194], [2.131937, 41.431912], [2.13191, 41.431899], [2.131882, 41.431886], [2.131851, 41.431871], [2.13182, 41.431856], [2.131788, 41.43184], [2.131755, 41.431824], [2.131721, 41.431808], [2.131688, 41.431792], [2.131657, 41.431777], [2.131626, 41.431762], [2.131602, 41.431751], [2.131578, 41.431739], [2.131566, 41.431734], [2.131553, 41.431728], [2.131545, 41.431724], [2.131494, 41.431703], [2.13144, 41.431685], [2.131385, 41.43167], [2.131328, 41.431659], [2.13127, 41.431651], [2.131236, 41.431649], [2.131172, 41.431647], [2.131109, 41.431649], [2.131047, 41.431655], [2.130985, 41.431664], [2.130983, 41.431664], [2.130963, 41.431669], [2.130942, 41.431673], [2.130913, 41.431679], [2.130884, 41.431685], [2.130836, 41.431696], [2.130788, 41.431707], [2.13075, 41.431716], [2.130711, 41.431725], [2.13068, 41.431733], [2.130649, 41.43174], [2.130608, 41.43175], [2.130568, 41.431759], [2.130529, 41.431768], [2.130489, 41.431778], [2.130445, 41.431788], [2.130401, 41.431798], [2.130362, 41.431808], [2.130323, 41.431817], [2.13029, 41.431825], [2.130257, 41.431833], [2.130225, 41.43184], [2.130193, 41.431847], [2.130157, 41.431855], [2.130122, 41.431863], [2.130098, 41.431868], [2.130075, 41.431873], [2.130022, 41.431882], [2.129963, 41.43189], [2.129903, 41.431893], [2.129843, 41.431894], [2.129784, 41.43189], [2.129724, 41.431881], [2.1297, 41.431878], [2.129676, 41.431874], [2.129643, 41.431869], [2.12961, 41.431863], [2.129559, 41.431855], [2.129509, 41.431847], [2.12946, 41.431838], [2.12941, 41.431831], [2.129353, 41.431823], [2.129296, 41.431815], [2.12927, 41.43181], [2.129245, 41.431805], [2.129228, 41.431803], [2.12921, 41.431801], [2.129194, 41.431798], [2.129177, 41.431795], [2.12916, 41.431793], [2.129143, 41.431791], [2.129133, 41.43179], [2.129123, 41.431788], [2.12911, 41.431786], [2.129098, 41.431785], [2.129085, 41.431785], [2.129073, 41.431784], [2.129058, 41.431783], [2.129044, 41.431782], [2.129034, 41.431782], [2.129023, 41.431782], [2.12901, 41.431781], [2.128997, 41.431781], [2.128986, 41.431781], [2.128974, 41.431781], [2.128962, 41.431781], [2.128949, 41.431782], [2.128938, 41.431782], [2.128928, 41.431783], [2.128914, 41.431784], [2.128899, 41.431785], [2.128882, 41.431787], [2.128864, 41.431788], [2.128841, 41.43179], [2.128818, 41.431793], [2.128793, 41.431796], [2.128767, 41.431799], [2.128746, 41.431801], [2.128725, 41.431803], [2.128707, 41.431806], [2.128689, 41.431808], [2.128674, 41.43181], [2.128658, 41.431812], [2.128643, 41.431814], [2.128628, 41.431815], [2.128505, 41.43183], [2.128381, 41.431846], [2.128286, 41.431857], [2.128191, 41.431868], [2.12811, 41.431878], [2.128028, 41.431887], [2.12798, 41.431893], [2.127931, 41.431899], [2.127888, 41.431902], [2.127845, 41.431905], [2.127797, 41.431908], [2.127749, 41.43191], [2.127708, 41.431911], [2.127668, 41.43191], [2.127628, 41.431909], [2.127587, 41.431907], [2.127581, 41.431906], [2.127574, 41.431906], [2.127559, 41.431905], [2.127413, 41.431889], [2.127283, 41.431868], [2.127161, 41.431842], [2.127049, 41.431814], [2.126951, 41.431778], [2.126845, 41.431733], [2.126758, 41.431689], [2.126642, 41.431623], [2.12646, 41.43174], [2.126545, 41.431881], [2.126698, 41.432059], [2.127112, 41.432483], [2.127438, 41.432857], [2.128298, 41.433583], [2.128334, 41.433736], [2.128307, 41.433931], [2.128367, 41.434192], [2.128542, 41.434521], [2.128807, 41.435002], [2.128846, 41.435197], [2.128884, 41.435276], [2.129033, 41.435434], [2.129082, 41.435563], [2.129217, 41.435764], [2.129296, 41.435827], [2.129107, 41.436055], [2.12902, 41.436237], [2.128877, 41.436598], [2.128857, 41.436676], [2.12885, 41.436776], [2.128864, 41.436865], [2.129056, 41.437175], [2.129228, 41.437593], [2.129445, 41.438244], [2.129516, 41.438641], [2.1295, 41.439023], [2.129382, 41.439439], [2.129342, 41.439727], [2.129431, 41.440262], [2.129679, 41.440473], [2.129836, 41.440671], [2.129925, 41.440903], [2.129907, 41.441102], [2.129818, 41.4413], [2.12966, 41.441475], [2.129578, 41.441626], [2.129559, 41.441757], [2.1297, 41.442173], [2.129808, 41.442283], [2.12997, 41.442505], [2.129962, 41.442884], [2.130274, 41.443181], [2.130483, 41.443448], [2.130598, 41.443694], [2.13066, 41.443772], [2.130671, 41.44382], [2.130752, 41.443841], [2.130826, 41.443856], [2.131124, 41.443878], [2.131344, 41.443951], [2.131759, 41.44407], [2.132024, 41.444103], [2.132272, 41.444199], [2.132366, 41.444278], [2.132864, 41.444751], [2.132869, 41.444748], [2.132942, 41.444692], [2.133082, 41.444632], [2.133207, 41.444592], [2.133362, 41.444573], [2.133446, 41.44453], [2.133454, 41.444527], [2.133572, 41.444526], [2.133638, 41.444466], [2.133688, 41.444422], [2.133757, 41.444258], [2.133852, 41.444152], [2.134003, 41.444067], [2.134109, 41.443985], [2.13431, 41.443919], [2.134481, 41.443857], [2.134662, 41.443785], [2.134801, 41.443733], [2.134919, 41.443711], [2.135014, 41.443667], [2.13507, 41.443602], [2.135167, 41.44354], [2.135291, 41.443448], [2.135431, 41.443309], [2.135639, 41.443174], [2.135772, 41.443054], [2.135849, 41.44302], [2.135903, 41.442972], [2.135946, 41.442955], [2.135995, 41.442924], [2.136034, 41.442899], [2.136115, 41.442868], [2.136217, 41.442822], [2.136292, 41.44277]]]]
    },
    "properties": {
      "neighbourhood": "Montbau",
      "neighbourhood_group": "Horta-Guinardó"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.197061, 41.442626], [2.195614, 41.442521], [2.195939, 41.443545], [2.196157, 41.444208], [2.196343, 41.444817], [2.196634, 41.445719], [2.19722, 41.447643], [2.198183, 41.447947], [2.201336, 41.449037], [2.202001, 41.448389], [2.20217, 41.448225], [2.202831, 41.447555], [2.203333, 41.447028], [2.202033, 41.446368], [2.201842, 41.446334], [2.199316, 41.445065], [2.19973, 41.442839], [2.19922, 41.442787], [2.198127, 41.442706], [2.197061, 41.442626]]]]
    },
    "properties": {
      "neighbourhood": "Baró de Viver",
      "neighbourhood_group": "Sant Andreu"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.158158, 41.426467], [2.158332, 41.425707], [2.158354, 41.425623], [2.158515, 41.424984], [2.158564, 41.424764], [2.158584, 41.424615], [2.15859, 41.424566], [2.158591, 41.424505], [2.1586, 41.424435], [2.158633, 41.424199], [2.158776, 41.423857], [2.159042, 41.423255], [2.158181, 41.42305], [2.158501, 41.421621], [2.158712, 41.421615], [2.158901, 41.4215], [2.159133, 41.421361], [2.15964, 41.421986], [2.160042, 41.422061], [2.16034, 41.422116], [2.160792, 41.422199], [2.161372, 41.422306], [2.162311, 41.422479], [2.16241, 41.422242], [2.162642, 41.421688], [2.162726, 41.421705], [2.162817, 41.421729], [2.162897, 41.421735], [2.162973, 41.421714], [2.163025, 41.421679], [2.16308, 41.421616], [2.163319, 41.421038], [2.163393, 41.421089], [2.163416, 41.421103], [2.163439, 41.421117], [2.163465, 41.42113], [2.163492, 41.421142], [2.163522, 41.421152], [2.163553, 41.421158], [2.163588, 41.42116], [2.163619, 41.421161], [2.16365, 41.421159], [2.163681, 41.421153], [2.163709, 41.421145], [2.163743, 41.421131], [2.163789, 41.421112], [2.163816, 41.421093], [2.163875, 41.42104], [2.163903, 41.421058], [2.163947, 41.421031], [2.163998, 41.421007], [2.164067, 41.420982], [2.164189, 41.420962], [2.164265, 41.420951], [2.164422, 41.420936], [2.16484, 41.420879], [2.164818, 41.420707], [2.16482, 41.420704], [2.164829, 41.420676], [2.164723, 41.420114], [2.164747, 41.42011], [2.164798, 41.420109], [2.164869, 41.420107], [2.164935, 41.420107], [2.165399, 41.420144], [2.165168, 41.420062], [2.165114, 41.42005], [2.165053, 41.420041], [2.164993, 41.420036], [2.164902, 41.420028], [2.164828, 41.420023], [2.164669, 41.420021], [2.164511, 41.420025], [2.164361, 41.420028], [2.164187, 41.420019], [2.163984, 41.420005], [2.163818, 41.419999], [2.163742, 41.419994], [2.163686, 41.41999], [2.163618, 41.419983], [2.163525, 41.419969], [2.163447, 41.419959], [2.163397, 41.419953], [2.163355, 41.419947], [2.163303, 41.419939], [2.163243, 41.419939], [2.163189, 41.419938], [2.163144, 41.419938], [2.163097, 41.419941], [2.163066, 41.419947], [2.16298, 41.419964], [2.162917, 41.419981], [2.162856, 41.42], [2.162792, 41.420023], [2.162773, 41.419994], [2.162701, 41.420021], [2.162641, 41.420041], [2.162614, 41.420048], [2.162588, 41.420055], [2.162518, 41.420073], [2.162466, 41.420085], [2.162389, 41.420097], [2.162289, 41.420107], [2.16222, 41.42011], [2.162153, 41.420106], [2.162095, 41.420095], [2.16203, 41.42008], [2.161964, 41.42006], [2.161845, 41.420016], [2.161752, 41.419985], [2.161701, 41.419969], [2.16188, 41.419993], [2.161884, 41.420001], [2.161901, 41.420008], [2.16191, 41.420008], [2.161966, 41.420024], [2.162045, 41.420035], [2.162041, 41.420032], [2.162134, 41.420017], [2.162229, 41.420002], [2.162304, 41.419987], [2.162336, 41.419978], [2.162414, 41.419953], [2.1625, 41.419922], [2.162567, 41.419898], [2.162614, 41.419879], [2.162626, 41.419874], [2.162662, 41.419855], [2.162683, 41.419839], [2.162627, 41.419774], [2.162614, 41.41976], [2.162495, 41.419623], [2.162381, 41.419512], [2.162362, 41.41951], [2.162283, 41.419485], [2.16228, 41.419491], [2.162263, 41.419505], [2.161727, 41.419267], [2.161684, 41.419251], [2.161636, 41.41924], [2.161577, 41.419234], [2.161534, 41.419236], [2.161507, 41.419232], [2.161468, 41.419232], [2.161423, 41.419239], [2.161392, 41.41924], [2.161359, 41.419226], [2.161341, 41.419203], [2.16134, 41.419182], [2.161357, 41.419159], [2.161379, 41.419149], [2.161403, 41.419148], [2.161419, 41.419066], [2.161366, 41.419045], [2.161292, 41.419036], [2.161318, 41.418948], [2.161518, 41.418979], [2.161587, 41.418958], [2.16165, 41.418964], [2.161666, 41.418943], [2.161652, 41.418927], [2.161542, 41.418828], [2.161435, 41.418737], [2.161431, 41.418734], [2.161367, 41.418655], [2.161317, 41.418566], [2.161277, 41.418465], [2.161255, 41.41842], [2.161258, 41.418419], [2.161187, 41.418214], [2.161137, 41.418207], [2.161077, 41.418202], [2.160995, 41.418201], [2.160921, 41.418203], [2.160891, 41.418167], [2.160836, 41.4181], [2.160831, 41.418093], [2.160788, 41.418041], [2.160793, 41.418039], [2.160767, 41.418011], [2.160702, 41.41793], [2.160762, 41.417905], [2.16084, 41.417873], [2.160902, 41.417847], [2.160942, 41.41783], [2.160961, 41.417782], [2.160993, 41.417723], [2.160893, 41.417493], [2.16078, 41.417542], [2.160669, 41.417596], [2.160464, 41.417694], [2.160306, 41.417772], [2.160297, 41.417776], [2.160292, 41.417779], [2.160248, 41.417796], [2.160242, 41.417798], [2.160209, 41.417809], [2.160175, 41.417819], [2.16014, 41.417827], [2.160104, 41.417833], [2.160069, 41.417838], [2.160033, 41.417841], [2.159975, 41.417844], [2.159974, 41.417844], [2.159962, 41.417844], [2.159935, 41.417843], [2.159907, 41.417842], [2.15988, 41.417839], [2.159853, 41.417834], [2.159827, 41.417829], [2.159809, 41.417824], [2.159775, 41.417815], [2.159707, 41.417791], [2.15969, 41.417784], [2.159673, 41.417776], [2.159656, 41.417769], [2.159624, 41.417751], [2.159593, 41.417733], [2.159564, 41.417713], [2.159536, 41.417692], [2.159509, 41.417669], [2.159484, 41.417645], [2.159361, 41.417527], [2.159165, 41.417338], [2.158765, 41.416958], [2.158911, 41.416896], [2.158968, 41.416875], [2.158995, 41.416864], [2.159023, 41.416853], [2.15905, 41.41684], [2.159077, 41.416826], [2.159102, 41.416813], [2.159113, 41.416806], [2.159125, 41.416798], [2.159136, 41.416789], [2.159146, 41.41678], [2.159155, 41.41677], [2.159164, 41.416759], [2.15917, 41.416748], [2.159176, 41.416737], [2.159179, 41.41673], [2.159185, 41.416714], [2.159186, 41.416702], [2.159187, 41.41669], [2.159186, 41.416677], [2.159184, 41.416665], [2.159181, 41.416654], [2.159177, 41.416642], [2.159172, 41.41663], [2.159165, 41.416619], [2.159157, 41.416609], [2.159148, 41.416599], [2.159138, 41.416589], [2.159127, 41.41658], [2.159116, 41.416573], [2.159104, 41.416565], [2.159091, 41.416559], [2.159078, 41.416553], [2.159064, 41.416548], [2.15905, 41.416543], [2.159035, 41.41654], [2.15902, 41.416537], [2.159004, 41.416535], [2.158989, 41.416534], [2.158973, 41.416534], [2.158958, 41.416535], [2.158942, 41.416536], [2.158927, 41.416539], [2.158912, 41.416542], [2.158898, 41.416546], [2.158884, 41.416551], [2.15887, 41.416557], [2.158857, 41.416563], [2.158845, 41.416571], [2.158833, 41.416578], [2.158821, 41.416589], [2.158797, 41.416616], [2.158777, 41.416641], [2.158758, 41.416667], [2.158741, 41.416693], [2.158729, 41.416726], [2.158728, 41.416728], [2.158727, 41.41673], [2.158726, 41.416734], [2.158712, 41.416766], [2.158696, 41.416796], [2.158678, 41.416826], [2.158657, 41.416854], [2.158634, 41.416882], [2.158608, 41.416908], [2.158581, 41.416933], [2.158552, 41.416957], [2.158478, 41.417011], [2.158429, 41.417039], [2.158428, 41.41704], [2.158403, 41.41706], [2.158381, 41.417079], [2.158354, 41.417099], [2.158335, 41.417111], [2.158312, 41.417124], [2.1583, 41.417131], [2.15829, 41.417139], [2.158275, 41.417151], [2.158256, 41.417164], [2.15824, 41.417174], [2.158223, 41.417186], [2.158202, 41.4172], [2.158201, 41.4172], [2.158201, 41.4172], [2.158182, 41.417213], [2.158161, 41.417228], [2.158142, 41.417242], [2.15812, 41.417258], [2.158096, 41.417278], [2.158073, 41.417295], [2.158054, 41.417309], [2.158032, 41.417327], [2.158007, 41.417344], [2.157976, 41.417365], [2.157948, 41.417384], [2.157925, 41.4174], [2.157892, 41.417424], [2.157867, 41.417444], [2.157837, 41.417467], [2.157807, 41.417491], [2.157778, 41.417513], [2.157743, 41.417538], [2.15771, 41.417562], [2.157683, 41.417581], [2.157661, 41.417598], [2.157654, 41.417603], [2.157637, 41.417618], [2.157602, 41.417642], [2.157581, 41.417654], [2.157555, 41.417671], [2.157535, 41.417684], [2.157509, 41.417702], [2.157482, 41.417722], [2.157456, 41.41774], [2.157424, 41.417762], [2.157404, 41.417775], [2.157379, 41.417792], [2.157358, 41.417804], [2.157333, 41.417817], [2.157311, 41.417824], [2.157286, 41.417832], [2.157255, 41.417836], [2.157229, 41.41784], [2.157199, 41.417843], [2.157172, 41.417842], [2.157158, 41.41784], [2.157142, 41.417839], [2.157118, 41.417839], [2.157085, 41.417832], [2.157051, 41.417821], [2.157017, 41.417807], [2.156995, 41.417798], [2.156971, 41.417791], [2.15694, 41.417778], [2.156921, 41.41777], [2.156905, 41.417764], [2.15688, 41.417756], [2.156857, 41.417747], [2.15684, 41.417738], [2.156836, 41.417736], [2.156803, 41.417721], [2.156771, 41.417707], [2.156736, 41.417691], [2.156703, 41.417677], [2.156671, 41.417663], [2.156643, 41.417651], [2.156617, 41.417641], [2.156593, 41.417627], [2.156573, 41.417616], [2.15656, 41.41761], [2.156533, 41.417594], [2.156514, 41.417579], [2.156496, 41.417564], [2.156484, 41.41755], [2.156469, 41.417531], [2.156457, 41.417509], [2.15645, 41.417488], [2.156444, 41.417467], [2.156442, 41.417441], [2.156444, 41.417419], [2.156448, 41.417399], [2.156454, 41.41738], [2.156462, 41.417359], [2.156477, 41.41733], [2.156495, 41.417303], [2.156509, 41.417279], [2.15652, 41.417259], [2.156531, 41.41724], [2.156542, 41.417222], [2.156554, 41.417199], [2.156571, 41.41717], [2.156582, 41.41715], [2.156594, 41.417127], [2.156607, 41.417106], [2.156613, 41.417092], [2.156619, 41.417076], [2.156624, 41.417055], [2.156627, 41.417047], [2.156648, 41.416902], [2.156531, 41.416697], [2.156368, 41.416409], [2.15624, 41.416197], [2.156225, 41.416174], [2.156208, 41.416152], [2.156191, 41.41613], [2.156171, 41.41611], [2.15615, 41.41609], [2.156128, 41.416071], [2.156098, 41.416047], [2.156067, 41.416026], [2.156034, 41.416005], [2.156, 41.415986], [2.155964, 41.415969], [2.155928, 41.415953], [2.155889, 41.415938], [2.155716, 41.415858], [2.1554, 41.415765], [2.155377, 41.415756], [2.155354, 41.415746], [2.155333, 41.415734], [2.155312, 41.415721], [2.155292, 41.415708], [2.155274, 41.415694], [2.155257, 41.415678], [2.155241, 41.415662], [2.155227, 41.415645], [2.155214, 41.415627], [2.155202, 41.415608], [2.155192, 41.415589], [2.155184, 41.415569], [2.155178, 41.415549], [2.155173, 41.415529], [2.15517, 41.415508], [2.155169, 41.415488], [2.15517, 41.415467], [2.155172, 41.415447], [2.155176, 41.415426], [2.155182, 41.415405], [2.155189, 41.415384], [2.155198, 41.415363], [2.155208, 41.415343], [2.15522, 41.415324], [2.15523, 41.415311], [2.155234, 41.415305], [2.155249, 41.415286], [2.155266, 41.415269], [2.15528, 41.415253], [2.155283, 41.41525], [2.155304, 41.415233], [2.155326, 41.415217], [2.15535, 41.415202], [2.155374, 41.415189], [2.1554, 41.415176], [2.155428, 41.415165], [2.155456, 41.415156], [2.155484, 41.415148], [2.155514, 41.415141], [2.155542, 41.415136], [2.155597, 41.415127], [2.155468, 41.41504], [2.15545, 41.415032], [2.155352, 41.414981], [2.155241, 41.414955], [2.155124, 41.414975], [2.155046, 41.415012], [2.154771, 41.415228], [2.154674, 41.415255], [2.154535, 41.415381], [2.154179, 41.415635], [2.153675, 41.416066], [2.153163, 41.416526], [2.152956, 41.416654], [2.152947, 41.416659], [2.152708, 41.416847], [2.151942, 41.416936], [2.151913, 41.417048], [2.151761, 41.417191], [2.151249, 41.417535], [2.150981, 41.417814], [2.150942, 41.41792], [2.150951, 41.418035], [2.151129, 41.418435], [2.151427, 41.418828], [2.151622, 41.419189], [2.151689, 41.41951], [2.151728, 41.419848], [2.15176, 41.420174], [2.151615, 41.420209], [2.1513, 41.420197], [2.150986, 41.420235], [2.150236, 41.420318], [2.15013, 41.420333], [2.149407, 41.42039], [2.14937, 41.420419], [2.149369, 41.420476], [2.149533, 41.420645], [2.149538, 41.42071], [2.149798, 41.420983], [2.150605, 41.421828], [2.150657, 41.421909], [2.150714, 41.421998], [2.15074, 41.422076], [2.150831, 41.422208], [2.150894, 41.42233], [2.150932, 41.422409], [2.150965, 41.422502], [2.150991, 41.422589], [2.151013, 41.422703], [2.151027, 41.422801], [2.15103, 41.422871], [2.151035, 41.423074], [2.151043, 41.423243], [2.151059, 41.423593], [2.151062, 41.423627], [2.151068, 41.423661], [2.151075, 41.423695], [2.151085, 41.423728], [2.151097, 41.423761], [2.151124, 41.423824], [2.151153, 41.423886], [2.151185, 41.423948], [2.151207, 41.423987], [2.151245, 41.424053], [2.151265, 41.424087], [2.15135, 41.424219], [2.151399, 41.424288], [2.151451, 41.424355], [2.151506, 41.42442], [2.151565, 41.424484], [2.151617, 41.424535], [2.15167, 41.424585], [2.151726, 41.424634], [2.151786, 41.424683], [2.15179, 41.424687], [2.151858, 41.424743], [2.152003, 41.42484], [2.152248, 41.424976], [2.152499, 41.425071], [2.15244, 41.425223], [2.152351, 41.425229], [2.152264, 41.425235], [2.152175, 41.425245], [2.152124, 41.425253], [2.152073, 41.425261], [2.152027, 41.42527], [2.151975, 41.425278], [2.151913, 41.425288], [2.151847, 41.425296], [2.151778, 41.4253], [2.151862, 41.42606], [2.150462, 41.426098], [2.150463, 41.426109], [2.150464, 41.426133], [2.150456, 41.426213], [2.150687, 41.42622], [2.150715, 41.426219], [2.150834, 41.42623], [2.150949, 41.426244], [2.151063, 41.426262], [2.151176, 41.426283], [2.151287, 41.426308], [2.151288, 41.426308], [2.151468, 41.426358], [2.151538, 41.426378], [2.151609, 41.426401], [2.151678, 41.426428], [2.151744, 41.426457], [2.151808, 41.42649], [2.151869, 41.426526], [2.151927, 41.426564], [2.151982, 41.426605], [2.152034, 41.426649], [2.152048, 41.426664], [2.152062, 41.426677], [2.152075, 41.42669], [2.152229, 41.426805], [2.152274, 41.426836], [2.152319, 41.426864], [2.152366, 41.426891], [2.152414, 41.426916], [2.152464, 41.42694], [2.152597, 41.426999], [2.152732, 41.427056], [2.152868, 41.427111], [2.153007, 41.427163], [2.153145, 41.427214], [2.153196, 41.427234], [2.153341, 41.427288], [2.153483, 41.427347], [2.153622, 41.427411], [2.153757, 41.427478], [2.153842, 41.427524], [2.153926, 41.42757], [2.154007, 41.427618], [2.154054, 41.427648], [2.154147, 41.427707], [2.154239, 41.427768], [2.15433, 41.427831], [2.154332, 41.427832], [2.154401, 41.427883], [2.154472, 41.427936], [2.15454, 41.427989], [2.154644, 41.428067], [2.154752, 41.428141], [2.154865, 41.428211], [2.154983, 41.428279], [2.155027, 41.428301], [2.155066, 41.428321], [2.155126, 41.428351], [2.155228, 41.428398], [2.155331, 41.428443], [2.155437, 41.428484], [2.155545, 41.428523], [2.155934, 41.428658], [2.156403, 41.42882], [2.156996, 41.429026], [2.157961, 41.429361], [2.157953, 41.42907], [2.15795, 41.428978], [2.157946, 41.428868], [2.157945, 41.428834], [2.157943, 41.428778], [2.157934, 41.428532], [2.157767, 41.428503], [2.157971, 41.427683], [2.158067, 41.427299], [2.158189, 41.426597], [2.158158, 41.426467]]]]
    },
    "properties": {
      "neighbourhood": "el Carmel",
      "neighbourhood_group": "Horta-Guinardó"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.152145, 41.430925], [2.151931, 41.43068], [2.151823, 41.430733], [2.15169, 41.430695], [2.15165, 41.430681], [2.151602, 41.430659], [2.15157, 41.430642], [2.151543, 41.430625], [2.151498, 41.430592], [2.151477, 41.430575], [2.151455, 41.430554], [2.151434, 41.430531], [2.151415, 41.430503], [2.151396, 41.430471], [2.151375, 41.430426], [2.151367, 41.430403], [2.151355, 41.43037], [2.151347, 41.430322], [2.151346, 41.43027], [2.151355, 41.430211], [2.151365, 41.43017], [2.151384, 41.430121], [2.151408, 41.430076], [2.151439, 41.430026], [2.151448, 41.430015], [2.151385, 41.430002], [2.151379, 41.429954], [2.151294, 41.429944], [2.151234, 41.429909], [2.151163, 41.429841], [2.151155, 41.429827], [2.151141, 41.429798], [2.151128, 41.42977], [2.151114, 41.429737], [2.151103, 41.429704], [2.151093, 41.42967], [2.151085, 41.429636], [2.151079, 41.429602], [2.151074, 41.429565], [2.151072, 41.429528], [2.151072, 41.429491], [2.151074, 41.429454], [2.151077, 41.429418], [2.151091, 41.429221], [2.151093, 41.429188], [2.151095, 41.429154], [2.151096, 41.42912], [2.151098, 41.429003], [2.151097, 41.428886], [2.151092, 41.428768], [2.151085, 41.428706], [2.151077, 41.428644], [2.151067, 41.428583], [2.151054, 41.428522], [2.151036, 41.428448], [2.151015, 41.428374], [2.150991, 41.428301], [2.150964, 41.42823], [2.150931, 41.428161], [2.150891, 41.428077], [2.150847, 41.427993], [2.150798, 41.427911], [2.150746, 41.427831], [2.15071, 41.427776], [2.15067, 41.427722], [2.150628, 41.427668], [2.150585, 41.427617], [2.15036, 41.427364], [2.150346, 41.427349], [2.150302, 41.427297], [2.15026, 41.427242], [2.150223, 41.427188], [2.150167, 41.427088], [2.150131, 41.427011], [2.150114, 41.426951], [2.150097, 41.426891], [2.150084, 41.42683], [2.150076, 41.426769], [2.150074, 41.426738], [2.150069, 41.426699], [2.15006, 41.426659], [2.150046, 41.42662], [2.150028, 41.426582], [2.149998, 41.426542], [2.149954, 41.426503], [2.149865, 41.426442], [2.149806, 41.426404], [2.149729, 41.426346], [2.149711, 41.426331], [2.149693, 41.426313], [2.149676, 41.426295], [2.149662, 41.426276], [2.149649, 41.426256], [2.149639, 41.426236], [2.14963, 41.426215], [2.149623, 41.426193], [2.149618, 41.426172], [2.149615, 41.42615], [2.149614, 41.426128], [2.149615, 41.426106], [2.149618, 41.426084], [2.149624, 41.426062], [2.149631, 41.426042], [2.14964, 41.426022], [2.14965, 41.426003], [2.149662, 41.425984], [2.149676, 41.425966], [2.149691, 41.425949], [2.149708, 41.425933], [2.149725, 41.425917], [2.149752, 41.425897], [2.149804, 41.425866], [2.14983, 41.425853], [2.149857, 41.425841], [2.149886, 41.42583], [2.149916, 41.425822], [2.149946, 41.425815], [2.149977, 41.42581], [2.150008, 41.425806], [2.150015, 41.425806], [2.149787, 41.425727], [2.149669, 41.425685], [2.149552, 41.425638], [2.149437, 41.425588], [2.149325, 41.425535], [2.149244, 41.425494], [2.149165, 41.42545], [2.149088, 41.425405], [2.149012, 41.425358], [2.148935, 41.425308], [2.148861, 41.425256], [2.148788, 41.425203], [2.148718, 41.425148], [2.14869, 41.425125], [2.148662, 41.425104], [2.148634, 41.425082], [2.148548, 41.425018], [2.148459, 41.424955], [2.148368, 41.424894], [2.148263, 41.424828], [2.148155, 41.424764], [2.148045, 41.424702], [2.147943, 41.424649], [2.147839, 41.424598], [2.147733, 41.424548], [2.147276, 41.424414], [2.146993, 41.42433], [2.14698, 41.424326], [2.146911, 41.424307], [2.146842, 41.42429], [2.146772, 41.424275], [2.146701, 41.424262], [2.14663, 41.424251], [2.146556, 41.42424], [2.146479, 41.424232], [2.146401, 41.424228], [2.146324, 41.424227], [2.146246, 41.424229], [2.146169, 41.424234], [2.146094, 41.424243], [2.146039, 41.42425], [2.145982, 41.424258], [2.145926, 41.424267], [2.145322, 41.424408], [2.145159, 41.424436], [2.145052, 41.424449], [2.144944, 41.424459], [2.144834, 41.424465], [2.144725, 41.424467], [2.144617, 41.424465], [2.144568, 41.424464], [2.144491, 41.424459], [2.144414, 41.424452], [2.144338, 41.424443], [2.144262, 41.424432], [2.144222, 41.424427], [2.144182, 41.424422], [2.144142, 41.424417], [2.144038, 41.424409], [2.143932, 41.424404], [2.143827, 41.424403], [2.143722, 41.424407], [2.143618, 41.424415], [2.143521, 41.424431], [2.143461, 41.424439], [2.143399, 41.42445], [2.143338, 41.424462], [2.143278, 41.424476], [2.143219, 41.424491], [2.143157, 41.42451], [2.143098, 41.424529], [2.14304, 41.42455], [2.142983, 41.424572], [2.142918, 41.424596], [2.142851, 41.424619], [2.142783, 41.424641], [2.142569, 41.424755], [2.142363, 41.424813], [2.142346, 41.424815], [2.142402, 41.424917], [2.143999, 41.428335], [2.144587, 41.429606], [2.145642, 41.431916], [2.145952, 41.432595], [2.145953, 41.432597], [2.146008, 41.432714], [2.146062, 41.432831], [2.146117, 41.432949], [2.146229, 41.433183], [2.146262, 41.43325], [2.146295, 41.433317], [2.146329, 41.433384], [2.146357, 41.433439], [2.146385, 41.433495], [2.146414, 41.433551], [2.146471, 41.433659], [2.146529, 41.433767], [2.146591, 41.433879], [2.146636, 41.433957], [2.146652, 41.433985], [2.146668, 41.434013], [2.146685, 41.434041], [2.146741, 41.434134], [2.146798, 41.434226], [2.146857, 41.434318], [2.146919, 41.434412], [2.146982, 41.434505], [2.147048, 41.434597], [2.147057, 41.43461], [2.147067, 41.434623], [2.147076, 41.434637], [2.147148, 41.434735], [2.147224, 41.434832], [2.147302, 41.434927], [2.147307, 41.434933], [2.147311, 41.434939], [2.147316, 41.434944], [2.147403, 41.435046], [2.147492, 41.435148], [2.147581, 41.435248], [2.147672, 41.435345], [2.147766, 41.435441], [2.147862, 41.435535], [2.147952, 41.435622], [2.148046, 41.435707], [2.148142, 41.43579], [2.148246, 41.435881], [2.148352, 41.435969], [2.148462, 41.436056], [2.148584, 41.43615], [2.148589, 41.436153], [2.148709, 41.436243], [2.148836, 41.436333], [2.148898, 41.436375], [2.14896, 41.436418], [2.149022, 41.43646], [2.149283, 41.436624], [2.149552, 41.436783], [2.149676, 41.436851], [2.150017, 41.436997], [2.150445, 41.437143], [2.150885, 41.437245], [2.151252, 41.437309], [2.151452, 41.437343], [2.15165, 41.437359], [2.151715, 41.43736], [2.151769, 41.437358], [2.151821, 41.437354], [2.151873, 41.437347], [2.151924, 41.437339], [2.151945, 41.437335], [2.151975, 41.437329], [2.151986, 41.437326], [2.152025, 41.437316], [2.152033, 41.437314], [2.152073, 41.437302], [2.152119, 41.437287], [2.152163, 41.43727], [2.152206, 41.437251], [2.152248, 41.437231], [2.152288, 41.437209], [2.152327, 41.437186], [2.152363, 41.437162], [2.152398, 41.437136], [2.152431, 41.437109], [2.152462, 41.437081], [2.152491, 41.437052], [2.1525, 41.437043], [2.152779, 41.43678], [2.152457, 41.436502], [2.152285, 41.436353], [2.151993, 41.436275], [2.152327, 41.435752], [2.152517, 41.435694], [2.152676, 41.435646], [2.152637, 41.435563], [2.152601, 41.435502], [2.152553, 41.435431], [2.152492, 41.435365], [2.15243, 41.435303], [2.152373, 41.435253], [2.15225, 41.435149], [2.153097, 41.434981], [2.153058, 41.434917], [2.15301, 41.434837], [2.152973, 41.434781], [2.152914, 41.434683], [2.152859, 41.434584], [2.152808, 41.434483], [2.152762, 41.434381], [2.152721, 41.434278], [2.152667, 41.434099], [2.152657, 41.434065], [2.152653, 41.434053], [2.152649, 41.434042], [2.152643, 41.434031], [2.152634, 41.434014], [2.152623, 41.433997], [2.15261, 41.43398], [2.152596, 41.433965], [2.15258, 41.43395], [2.152563, 41.433936], [2.152545, 41.433923], [2.152525, 41.43391], [2.15252, 41.433907], [2.1524, 41.433842], [2.152371, 41.433828], [2.152344, 41.433812], [2.152319, 41.433795], [2.152296, 41.433776], [2.152275, 41.433755], [2.152257, 41.433734], [2.152241, 41.433711], [2.152227, 41.433688], [2.152216, 41.433663], [2.152208, 41.433638], [2.152202, 41.433613], [2.1522, 41.433587], [2.1522, 41.433561], [2.152203, 41.433536], [2.152209, 41.43351], [2.152217, 41.433485], [2.152228, 41.433461], [2.152242, 41.433438], [2.152252, 41.433424], [2.152335, 41.433312], [2.152442, 41.433176], [2.152822, 41.432928], [2.152893, 41.432879], [2.152923, 41.432861], [2.15301, 41.432799], [2.153095, 41.432735], [2.153163, 41.432678], [2.153227, 41.43262], [2.153287, 41.432559], [2.153344, 41.432496], [2.153393, 41.432439], [2.153438, 41.43238], [2.153481, 41.43232], [2.153517, 41.432263], [2.153554, 41.4322], [2.153587, 41.432137], [2.153618, 41.432073], [2.153646, 41.432008], [2.153682, 41.431918], [2.153723, 41.431831], [2.15377, 41.431745], [2.153803, 41.431693], [2.153383, 41.431402], [2.15304, 41.431121], [2.152788, 41.43096], [2.152145, 41.430925]]]]
    },
    "properties": {
      "neighbourhood": "la Vall d'Hebron",
      "neighbourhood_group": "Horta-Guinardó"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.165666, 41.430477], [2.165833, 41.430433], [2.166001, 41.430437], [2.166287, 41.430499], [2.166872, 41.430491], [2.167309, 41.430484], [2.168496, 41.430466], [2.169011, 41.430449], [2.169306, 41.43044], [2.171003, 41.430385], [2.171942, 41.43037], [2.172543, 41.430361], [2.172916, 41.430357], [2.174009, 41.430346], [2.174394, 41.430342], [2.1747, 41.430339], [2.175188, 41.430333], [2.177211, 41.430305], [2.177354, 41.430303], [2.179017, 41.430283], [2.179903, 41.430269], [2.180832, 41.430255], [2.182602, 41.430227], [2.18303, 41.430222], [2.18304, 41.430207], [2.183134, 41.430016], [2.184113, 41.428685], [2.184119, 41.428677], [2.184705, 41.427862], [2.184361, 41.427657], [2.184312, 41.427658], [2.18255, 41.427726], [2.179829, 41.427834], [2.179339, 41.427878], [2.179197, 41.427902], [2.178949, 41.427944], [2.177338, 41.42819], [2.177259, 41.427807], [2.17725, 41.427762], [2.177251, 41.427144], [2.177244, 41.427082], [2.177246, 41.426913], [2.17732, 41.426832], [2.177381, 41.425516], [2.176178, 41.42547], [2.175678, 41.425608], [2.17559, 41.425633], [2.173544, 41.426215], [2.17237, 41.42655], [2.171066, 41.426925], [2.17025, 41.427164], [2.170169, 41.427188], [2.170039, 41.427194], [2.169983, 41.427203], [2.16841, 41.427439], [2.167433, 41.427577], [2.167302, 41.427592], [2.167151, 41.427608], [2.16676, 41.427655], [2.166026, 41.427713], [2.165395, 41.427768], [2.165011, 41.427826], [2.164838, 41.427852], [2.16444, 41.427909], [2.163957, 41.427985], [2.163754, 41.428052], [2.163713, 41.428066], [2.163658, 41.428143], [2.164688, 41.428806], [2.16482, 41.428888], [2.16519, 41.429104], [2.165333, 41.429115], [2.165462, 41.429162], [2.165487, 41.429174], [2.16551, 41.429184], [2.16555, 41.429218], [2.165575, 41.429236], [2.165588, 41.429289], [2.165696, 41.429365], [2.1657, 41.42943], [2.165918, 41.429488], [2.166191, 41.42963], [2.165304, 41.430147], [2.164649, 41.43053], [2.164353, 41.430684], [2.163965, 41.430875], [2.163847, 41.431101], [2.163842, 41.431109], [2.164383, 41.430897], [2.164567, 41.430824], [2.164736, 41.430755], [2.164999, 41.430655], [2.165255, 41.430575], [2.165666, 41.430477]]]]
    },
    "properties": {
      "neighbourhood": "Vilapicina i la Torre Llobeta",
      "neighbourhood_group": "Nou Barris"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.185041, 41.438491], [2.18479, 41.43764], [2.184594, 41.436993], [2.184486, 41.436632], [2.184317, 41.436058], [2.184231, 41.435779], [2.1842, 41.435678], [2.183968, 41.434917], [2.183938, 41.43482], [2.183759, 41.434402], [2.183683, 41.434171], [2.183319, 41.43307], [2.18313, 41.432499], [2.182898, 41.432247], [2.182723, 41.431828], [2.182657, 41.431546], [2.182608, 41.431045], [2.182738, 41.430639], [2.182964, 41.430317], [2.18303, 41.430222], [2.182602, 41.430227], [2.180832, 41.430255], [2.179903, 41.430269], [2.179017, 41.430283], [2.177354, 41.430303], [2.177211, 41.430305], [2.175188, 41.430333], [2.1747, 41.430339], [2.174695, 41.43065], [2.174402, 41.431188], [2.174235, 41.431495], [2.174113, 41.431717], [2.173864, 41.432167], [2.17382, 41.432246], [2.172939, 41.433821], [2.172876, 41.433933], [2.172447, 41.434704], [2.172381, 41.434824], [2.172066, 41.435392], [2.172095, 41.435417], [2.172174, 41.435511], [2.172385, 41.435793], [2.172492, 41.435935], [2.172693, 41.436203], [2.172763, 41.436298], [2.172851, 41.436412], [2.172923, 41.436498], [2.173, 41.436581], [2.173073, 41.436656], [2.173517, 41.437084], [2.173561, 41.437127], [2.173776, 41.437336], [2.173861, 41.437419], [2.173933, 41.437496], [2.174002, 41.437574], [2.174006, 41.43758], [2.174091, 41.437691], [2.174142, 41.43776], [2.174188, 41.437823], [2.174231, 41.437886], [2.174457, 41.438216], [2.174583, 41.438196], [2.174602, 41.438194], [2.174621, 41.438192], [2.174641, 41.438192], [2.17466, 41.438193], [2.17468, 41.438194], [2.174699, 41.438197], [2.174718, 41.438201], [2.174736, 41.438206], [2.174754, 41.438212], [2.174771, 41.438219], [2.174788, 41.438227], [2.174804, 41.438235], [2.174821, 41.438247], [2.174833, 41.438256], [2.174844, 41.438266], [2.174855, 41.438276], [2.174865, 41.438287], [2.174874, 41.438298], [2.174881, 41.43831], [2.174888, 41.438322], [2.174894, 41.438335], [2.174899, 41.438347], [2.174905, 41.43837], [2.174905, 41.438388], [2.174903, 41.438408], [2.174898, 41.438428], [2.17633, 41.438614], [2.17657, 41.438645], [2.17841, 41.438886], [2.1788, 41.438936], [2.179278, 41.438999], [2.180124, 41.439107], [2.180262, 41.439124], [2.181512, 41.439277], [2.181705, 41.439287], [2.183496, 41.439502], [2.185458, 41.439736], [2.185116, 41.438747], [2.185041, 41.438491]]]]
    },
    "properties": {
      "neighbourhood": "Porta",
      "neighbourhood_group": "Nou Barris"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.156996, 41.429026], [2.156403, 41.42882], [2.155934, 41.428658], [2.155545, 41.428523], [2.155437, 41.428484], [2.155331, 41.428443], [2.155228, 41.428398], [2.155126, 41.428351], [2.155066, 41.428321], [2.155027, 41.428301], [2.154983, 41.428279], [2.154865, 41.428211], [2.154752, 41.428141], [2.154644, 41.428067], [2.15454, 41.427989], [2.154472, 41.427936], [2.154401, 41.427883], [2.154332, 41.427832], [2.15433, 41.427831], [2.154239, 41.427768], [2.154147, 41.427707], [2.154054, 41.427648], [2.154007, 41.427618], [2.153926, 41.42757], [2.153842, 41.427524], [2.153757, 41.427478], [2.153622, 41.427411], [2.153483, 41.427347], [2.153341, 41.427288], [2.153196, 41.427234], [2.153145, 41.427214], [2.153007, 41.427163], [2.152868, 41.427111], [2.152732, 41.427056], [2.152597, 41.426999], [2.152464, 41.42694], [2.152414, 41.426916], [2.152366, 41.426891], [2.152319, 41.426864], [2.152274, 41.426836], [2.152229, 41.426805], [2.152075, 41.42669], [2.152062, 41.426677], [2.152048, 41.426664], [2.152034, 41.426649], [2.151982, 41.426605], [2.151927, 41.426564], [2.151869, 41.426526], [2.151808, 41.42649], [2.151744, 41.426457], [2.151678, 41.426428], [2.151609, 41.426401], [2.151538, 41.426378], [2.151468, 41.426358], [2.151288, 41.426308], [2.151287, 41.426308], [2.151176, 41.426283], [2.151063, 41.426262], [2.150949, 41.426244], [2.150834, 41.42623], [2.150715, 41.426219], [2.150687, 41.42622], [2.150456, 41.426213], [2.150464, 41.426133], [2.150463, 41.426109], [2.150462, 41.426098], [2.150461, 41.426084], [2.150455, 41.42606], [2.150448, 41.426036], [2.150438, 41.426013], [2.150426, 41.42599], [2.150412, 41.425968], [2.150395, 41.425947], [2.150377, 41.425927], [2.150356, 41.425908], [2.150334, 41.42589], [2.15031, 41.425874], [2.150284, 41.425859], [2.150255, 41.425844], [2.150224, 41.425833], [2.150195, 41.425824], [2.150165, 41.425816], [2.150138, 41.425811], [2.150134, 41.425811], [2.150103, 41.425807], [2.150071, 41.425805], [2.15004, 41.425805], [2.150015, 41.425806], [2.150008, 41.425806], [2.149977, 41.42581], [2.149946, 41.425815], [2.149916, 41.425822], [2.149886, 41.42583], [2.149857, 41.425841], [2.14983, 41.425853], [2.149804, 41.425866], [2.149752, 41.425897], [2.149725, 41.425917], [2.149708, 41.425933], [2.149691, 41.425949], [2.149676, 41.425966], [2.149662, 41.425984], [2.14965, 41.426003], [2.14964, 41.426022], [2.149631, 41.426042], [2.149624, 41.426062], [2.149618, 41.426084], [2.149615, 41.426106], [2.149614, 41.426128], [2.149615, 41.42615], [2.149618, 41.426172], [2.149623, 41.426193], [2.14963, 41.426215], [2.149639, 41.426236], [2.149649, 41.426256], [2.149662, 41.426276], [2.149676, 41.426295], [2.149693, 41.426313], [2.149711, 41.426331], [2.149729, 41.426346], [2.149806, 41.426404], [2.149865, 41.426442], [2.149954, 41.426503], [2.149998, 41.426542], [2.150028, 41.426582], [2.150046, 41.42662], [2.15006, 41.426659], [2.150069, 41.426699], [2.150074, 41.426738], [2.150076, 41.426769], [2.150084, 41.42683], [2.150097, 41.426891], [2.150114, 41.426951], [2.150131, 41.427011], [2.150167, 41.427088], [2.150223, 41.427188], [2.15026, 41.427242], [2.150302, 41.427297], [2.150346, 41.427349], [2.15036, 41.427364], [2.150585, 41.427617], [2.150628, 41.427668], [2.15067, 41.427722], [2.15071, 41.427776], [2.150746, 41.427831], [2.150798, 41.427911], [2.150847, 41.427993], [2.150891, 41.428077], [2.150931, 41.428161], [2.150964, 41.42823], [2.150991, 41.428301], [2.151015, 41.428374], [2.151036, 41.428448], [2.151054, 41.428522], [2.151067, 41.428583], [2.151077, 41.428644], [2.151085, 41.428706], [2.151092, 41.428768], [2.151097, 41.428886], [2.151098, 41.429003], [2.151096, 41.42912], [2.151095, 41.429154], [2.151093, 41.429188], [2.151091, 41.429221], [2.151077, 41.429418], [2.151074, 41.429454], [2.151072, 41.429491], [2.151072, 41.429528], [2.151074, 41.429565], [2.151079, 41.429602], [2.151085, 41.429636], [2.151093, 41.42967], [2.151103, 41.429704], [2.151114, 41.429737], [2.151128, 41.42977], [2.151141, 41.429798], [2.151155, 41.429827], [2.151163, 41.429841], [2.151234, 41.429909], [2.151294, 41.429944], [2.151379, 41.429954], [2.151385, 41.430002], [2.151448, 41.430015], [2.151439, 41.430026], [2.151408, 41.430076], [2.151384, 41.430121], [2.151365, 41.43017], [2.151355, 41.430211], [2.151346, 41.43027], [2.151347, 41.430322], [2.151355, 41.43037], [2.151367, 41.430403], [2.151375, 41.430426], [2.151396, 41.430471], [2.151415, 41.430503], [2.151434, 41.430531], [2.151455, 41.430554], [2.151477, 41.430575], [2.151498, 41.430592], [2.151543, 41.430625], [2.15157, 41.430642], [2.151602, 41.430659], [2.15165, 41.430681], [2.15169, 41.430695], [2.151823, 41.430733], [2.151931, 41.43068], [2.152145, 41.430925], [2.152788, 41.43096], [2.15304, 41.431121], [2.153383, 41.431402], [2.153803, 41.431693], [2.153823, 41.431662], [2.153881, 41.43158], [2.153945, 41.4315], [2.154015, 41.431423], [2.15409, 41.431349], [2.154171, 41.431277], [2.154257, 41.43121], [2.154304, 41.431176], [2.154347, 41.431145], [2.154442, 41.431084], [2.155175, 41.430637], [2.1554, 41.430491], [2.155431, 41.43047], [2.155453, 41.430454], [2.155473, 41.430437], [2.155498, 41.430413], [2.155511, 41.430399], [2.155527, 41.430379], [2.155542, 41.430359], [2.155556, 41.430338], [2.155558, 41.430334], [2.155701, 41.430133], [2.155721, 41.430106], [2.155745, 41.430076], [2.155772, 41.430047], [2.155801, 41.430019], [2.155832, 41.429993], [2.155864, 41.429969], [2.155892, 41.429948], [2.155923, 41.429927], [2.155955, 41.429908], [2.155988, 41.42989], [2.156007, 41.429881], [2.156242, 41.429761], [2.156323, 41.429719], [2.156347, 41.429707], [2.156389, 41.429682], [2.156428, 41.429657], [2.156467, 41.42963], [2.156504, 41.429601], [2.156542, 41.42957], [2.156577, 41.429538], [2.156614, 41.429502], [2.156637, 41.429475], [2.156671, 41.429433], [2.156788, 41.429294], [2.156996, 41.429026]]]]
    },
    "properties": {
      "neighbourhood": "la Clota",
      "neighbourhood_group": "Horta-Guinardó"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.172066, 41.435392], [2.172381, 41.434824], [2.172447, 41.434704], [2.172876, 41.433933], [2.172939, 41.433821], [2.17382, 41.432246], [2.173864, 41.432167], [2.174113, 41.431717], [2.174235, 41.431495], [2.174402, 41.431188], [2.174695, 41.43065], [2.1747, 41.430339], [2.174394, 41.430342], [2.174009, 41.430346], [2.172916, 41.430357], [2.172543, 41.430361], [2.171942, 41.43037], [2.171003, 41.430385], [2.169306, 41.43044], [2.169011, 41.430449], [2.168496, 41.430466], [2.167309, 41.430484], [2.166872, 41.430491], [2.166287, 41.430499], [2.166001, 41.430437], [2.165833, 41.430433], [2.165666, 41.430477], [2.165255, 41.430575], [2.164999, 41.430655], [2.164736, 41.430755], [2.164567, 41.430824], [2.164383, 41.430897], [2.163842, 41.431109], [2.163326, 41.431913], [2.163215, 41.43211], [2.163173, 41.432183], [2.163153, 41.432292], [2.163119, 41.432471], [2.163099, 41.432744], [2.163147, 41.433016], [2.163163, 41.433109], [2.163376, 41.433821], [2.163477, 41.434154], [2.163496, 41.434211], [2.163498, 41.434217], [2.163978, 41.434105], [2.163811, 41.433675], [2.164043, 41.433635], [2.164049, 41.433635], [2.164075, 41.433642], [2.164147, 41.433664], [2.164176, 41.433671], [2.164205, 41.433677], [2.164241, 41.43368], [2.164255, 41.433682], [2.16427, 41.433682], [2.164286, 41.433683], [2.164353, 41.433685], [2.164385, 41.433688], [2.164405, 41.433689], [2.164424, 41.433692], [2.164433, 41.433694], [2.16444, 41.433699], [2.164445, 41.433704], [2.164448, 41.43371], [2.164457, 41.433726], [2.164471, 41.433748], [2.164483, 41.433763], [2.164494, 41.433778], [2.164509, 41.433796], [2.164527, 41.433811], [2.164549, 41.433822], [2.164566, 41.433828], [2.164552, 41.433849], [2.164451, 41.433872], [2.164491, 41.433963], [2.164516, 41.434021], [2.16454, 41.434015], [2.164758, 41.433959], [2.164796, 41.434048], [2.164826, 41.434118], [2.16487, 41.434228], [2.165778, 41.43402], [2.165838, 41.434153], [2.166053, 41.434101], [2.166674, 41.433963], [2.166666, 41.433944], [2.166661, 41.433945], [2.166657, 41.433936], [2.166596, 41.433778], [2.166732, 41.433745], [2.166781, 41.433734], [2.167662, 41.433523], [2.167961, 41.433385], [2.168026, 41.433355], [2.168296, 41.433158], [2.168382, 41.433143], [2.168375, 41.433096], [2.168425, 41.433092], [2.168618, 41.433039], [2.168799, 41.433268], [2.16883, 41.433255], [2.169048, 41.433536], [2.169539, 41.43332], [2.169866, 41.433728], [2.169042, 41.4341], [2.169273, 41.434591], [2.169442, 41.43474], [2.169613, 41.434892], [2.169674, 41.434883], [2.169732, 41.434873], [2.169789, 41.434863], [2.169847, 41.434853], [2.169904, 41.434845], [2.169968, 41.434837], [2.170031, 41.43483], [2.170096, 41.434824], [2.170159, 41.434819], [2.170239, 41.434815], [2.170318, 41.434813], [2.170397, 41.434812], [2.170468, 41.434813], [2.170586, 41.434817], [2.170704, 41.434825], [2.170821, 41.434836], [2.170938, 41.434851], [2.171039, 41.434868], [2.171116, 41.434885], [2.171193, 41.434904], [2.171269, 41.434926], [2.171343, 41.43495], [2.171415, 41.434977], [2.171492, 41.435008], [2.171566, 41.435042], [2.171639, 41.435078], [2.171709, 41.435118], [2.171776, 41.435159], [2.171838, 41.435202], [2.171863, 41.435217], [2.171894, 41.435241], [2.171923, 41.435264], [2.171952, 41.435288], [2.171981, 41.435315], [2.172066, 41.435392]]]]
    },
    "properties": {
      "neighbourhood": "el Turó de la Peira",
      "neighbourhood_group": "Nou Barris"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.206867, 41.400439], [2.209496, 41.398545], [2.209573, 41.398604], [2.210967, 41.397591], [2.210339, 41.396922], [2.210135, 41.397002], [2.209971, 41.397001], [2.209795, 41.396929], [2.209258, 41.396527], [2.209983, 41.395972], [2.210329, 41.395741], [2.210533, 41.395592], [2.210729, 41.395438], [2.210918, 41.395278], [2.211466, 41.394864], [2.211486, 41.394849], [2.211287, 41.394705], [2.209737, 41.395918], [2.20682, 41.393805], [2.205316, 41.391663], [2.205775, 41.391253], [2.206364, 41.390806], [2.206322, 41.390774], [2.20628, 41.390806], [2.205733, 41.391221], [2.20562, 41.391333], [2.205502, 41.391442], [2.205379, 41.391547], [2.205261, 41.391642], [2.205251, 41.39165], [2.20516, 41.391718], [2.205004, 41.391834], [2.204675, 41.392085], [2.204605, 41.392021], [2.20442, 41.39188], [2.204366, 41.39184], [2.204351, 41.39183], [2.200862, 41.394547], [2.199825, 41.393652], [2.196051, 41.396493], [2.193892, 41.398135], [2.195628, 41.400254], [2.197345, 41.402351], [2.196091, 41.403303], [2.193798, 41.405043], [2.195699, 41.405522], [2.196602, 41.40575], [2.198883, 41.406322], [2.203967, 41.407597], [2.20512, 41.406721], [2.206722, 41.405503], [2.207388, 41.404997], [2.20851, 41.404144], [2.209994, 41.403016], [2.207859, 41.401256], [2.206867, 41.400439]]]]
    },
    "properties": {
      "neighbourhood": "el Poblenou",
      "neighbourhood_group": "Sant Martí"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.159451, 41.449661], [2.159436, 41.449628], [2.159443, 41.449532], [2.15944, 41.449468], [2.159366, 41.449424], [2.159025, 41.448944], [2.158366, 41.448138], [2.158099, 41.447879], [2.157768, 41.447635], [2.157626, 41.447551], [2.157407, 41.44749], [2.157136, 41.44749], [2.157063, 41.447444], [2.157061, 41.447374], [2.157124, 41.447304], [2.157465, 41.447125], [2.157546, 41.446982], [2.157571, 41.446882], [2.157555, 41.446693], [2.157242, 41.446058], [2.157121, 41.446003], [2.156129, 41.445812], [2.15584, 41.445822], [2.155726, 41.445771], [2.155684, 41.445717], [2.155696, 41.445651], [2.155759, 41.445577], [2.155983, 41.445569], [2.156249, 41.44553], [2.156591, 41.445389], [2.156813, 41.44526], [2.157083, 41.445096], [2.157397, 41.445052], [2.15753, 41.445015], [2.157601, 41.444978], [2.15784, 41.444777], [2.157912, 41.444653], [2.157987, 41.444319], [2.158055, 41.44417], [2.158282, 41.444044], [2.158349, 41.443963], [2.158459, 41.443764], [2.158517, 41.443458], [2.158559, 41.443383], [2.158718, 41.443013], [2.158882, 41.442796], [2.159079, 41.442534], [2.159212, 41.442403], [2.159405, 41.442284], [2.159716, 41.442179], [2.159802, 41.442305], [2.159974, 41.442419], [2.160011, 41.442382], [2.160143, 41.442233], [2.160348, 41.442165], [2.160824, 41.441962], [2.160987, 41.441888], [2.161115, 41.441827], [2.161556, 41.441637], [2.161699, 41.441661], [2.162215, 41.44144], [2.162326, 41.441415], [2.162526, 41.441412], [2.162646, 41.44141], [2.162735, 41.441361], [2.162806, 41.441247], [2.162808, 41.441064], [2.162782, 41.440996], [2.162721, 41.440891], [2.162645, 41.440865], [2.162291, 41.440852], [2.162153, 41.440831], [2.16207, 41.440819], [2.161939, 41.440781], [2.161822, 41.440713], [2.161685, 41.44056], [2.161537, 41.440236], [2.161512, 41.440043], [2.161542, 41.439958], [2.161598, 41.439804], [2.161628, 41.439617], [2.161813, 41.439284], [2.162006, 41.439026], [2.162342, 41.438697], [2.162523, 41.438574], [2.162875, 41.438371], [2.163696, 41.437915], [2.163631, 41.437853], [2.163437, 41.437667], [2.163316, 41.437552], [2.163166, 41.437408], [2.163145, 41.437387], [2.16317, 41.437385], [2.163285, 41.437376], [2.163225, 41.437317], [2.1633, 41.437273], [2.163388, 41.437221], [2.163543, 41.437131], [2.163461, 41.437015], [2.163369, 41.436886], [2.16326, 41.436733], [2.163246, 41.436713], [2.163171, 41.436608], [2.164281, 41.43631], [2.163743, 41.434956], [2.163614, 41.434565], [2.163498, 41.434217], [2.163496, 41.434211], [2.163477, 41.434154], [2.163376, 41.433821], [2.163163, 41.433109], [2.163147, 41.433016], [2.163099, 41.432744], [2.163119, 41.432471], [2.163153, 41.432292], [2.163173, 41.432183], [2.163215, 41.43211], [2.163326, 41.431913], [2.163842, 41.431109], [2.163847, 41.431101], [2.163965, 41.430875], [2.164353, 41.430684], [2.164649, 41.43053], [2.165304, 41.430147], [2.166191, 41.42963], [2.165918, 41.429488], [2.1657, 41.42943], [2.165696, 41.429365], [2.165588, 41.429289], [2.165575, 41.429236], [2.16555, 41.429218], [2.16551, 41.429184], [2.165487, 41.429174], [2.165462, 41.429162], [2.165333, 41.429115], [2.16519, 41.429104], [2.16482, 41.428888], [2.164688, 41.428806], [2.163658, 41.428143], [2.163713, 41.428066], [2.163754, 41.428052], [2.163736, 41.427964], [2.162961, 41.427608], [2.162065, 41.427249], [2.160069, 41.426404], [2.159226, 41.42611], [2.158354, 41.425623], [2.158332, 41.425707], [2.158158, 41.426467], [2.158189, 41.426597], [2.158067, 41.427299], [2.157971, 41.427683], [2.157767, 41.428503], [2.157934, 41.428532], [2.157943, 41.428778], [2.157945, 41.428834], [2.157946, 41.428868], [2.15795, 41.428978], [2.157953, 41.42907], [2.157961, 41.429361], [2.156996, 41.429026], [2.156788, 41.429294], [2.156671, 41.429433], [2.156637, 41.429475], [2.156614, 41.429502], [2.156577, 41.429538], [2.156542, 41.42957], [2.156504, 41.429601], [2.156467, 41.42963], [2.156428, 41.429657], [2.156389, 41.429682], [2.156347, 41.429707], [2.156323, 41.429719], [2.156242, 41.429761], [2.156007, 41.429881], [2.155988, 41.42989], [2.155955, 41.429908], [2.155923, 41.429927], [2.155892, 41.429948], [2.155864, 41.429969], [2.155832, 41.429993], [2.155801, 41.430019], [2.155772, 41.430047], [2.155745, 41.430076], [2.155721, 41.430106], [2.155701, 41.430133], [2.155558, 41.430334], [2.155556, 41.430338], [2.155542, 41.430359], [2.155527, 41.430379], [2.155511, 41.430399], [2.155498, 41.430413], [2.155473, 41.430437], [2.155453, 41.430454], [2.155431, 41.43047], [2.1554, 41.430491], [2.155175, 41.430637], [2.154442, 41.431084], [2.154347, 41.431145], [2.154304, 41.431176], [2.154257, 41.43121], [2.154171, 41.431277], [2.15409, 41.431349], [2.154015, 41.431423], [2.153945, 41.4315], [2.153881, 41.43158], [2.153823, 41.431662], [2.153803, 41.431693], [2.15377, 41.431745], [2.153723, 41.431831], [2.153682, 41.431918], [2.153646, 41.432008], [2.153618, 41.432073], [2.153587, 41.432137], [2.153554, 41.4322], [2.153517, 41.432263], [2.153481, 41.43232], [2.153438, 41.43238], [2.153393, 41.432439], [2.153344, 41.432496], [2.153287, 41.432559], [2.153227, 41.43262], [2.153163, 41.432678], [2.153095, 41.432735], [2.15301, 41.432799], [2.152923, 41.432861], [2.152893, 41.432879], [2.152822, 41.432928], [2.152442, 41.433176], [2.152335, 41.433312], [2.152252, 41.433424], [2.152242, 41.433438], [2.152228, 41.433461], [2.152217, 41.433485], [2.152209, 41.43351], [2.152203, 41.433536], [2.1522, 41.433561], [2.1522, 41.433587], [2.152202, 41.433613], [2.152208, 41.433638], [2.152216, 41.433663], [2.152227, 41.433688], [2.152241, 41.433711], [2.152257, 41.433734], [2.152275, 41.433755], [2.152296, 41.433776], [2.152319, 41.433795], [2.152344, 41.433812], [2.152371, 41.433828], [2.1524, 41.433842], [2.15252, 41.433907], [2.152525, 41.43391], [2.152545, 41.433923], [2.152563, 41.433936], [2.15258, 41.43395], [2.152596, 41.433965], [2.15261, 41.43398], [2.152623, 41.433997], [2.152634, 41.434014], [2.152643, 41.434031], [2.152649, 41.434042], [2.152653, 41.434053], [2.152657, 41.434065], [2.152667, 41.434099], [2.152721, 41.434278], [2.152762, 41.434381], [2.152808, 41.434483], [2.152859, 41.434584], [2.152914, 41.434683], [2.152973, 41.434781], [2.15301, 41.434837], [2.153058, 41.434917], [2.153097, 41.434981], [2.15225, 41.435149], [2.152373, 41.435253], [2.15243, 41.435303], [2.152492, 41.435365], [2.152553, 41.435431], [2.152601, 41.435502], [2.152637, 41.435563], [2.152676, 41.435646], [2.152517, 41.435694], [2.152327, 41.435752], [2.151993, 41.436275], [2.152285, 41.436353], [2.152457, 41.436502], [2.152779, 41.43678], [2.1525, 41.437043], [2.152491, 41.437052], [2.152462, 41.437081], [2.152431, 41.437109], [2.152398, 41.437136], [2.152363, 41.437162], [2.152327, 41.437186], [2.152288, 41.437209], [2.152248, 41.437231], [2.152206, 41.437251], [2.152163, 41.43727], [2.152119, 41.437287], [2.152073, 41.437302], [2.152033, 41.437314], [2.152025, 41.437316], [2.151986, 41.437326], [2.151975, 41.437329], [2.151945, 41.437335], [2.151924, 41.437339], [2.151873, 41.437347], [2.151821, 41.437354], [2.151769, 41.437358], [2.151715, 41.43736], [2.15165, 41.437359], [2.151452, 41.437343], [2.151252, 41.437309], [2.150885, 41.437245], [2.150445, 41.437143], [2.150017, 41.436997], [2.149676, 41.436851], [2.149552, 41.436783], [2.149283, 41.436624], [2.149022, 41.43646], [2.14896, 41.436418], [2.148898, 41.436375], [2.148836, 41.436333], [2.148709, 41.436243], [2.148589, 41.436153], [2.148309, 41.43658], [2.148275, 41.436669], [2.14816, 41.437239], [2.148107, 41.437504], [2.148073, 41.437568], [2.148048, 41.437606], [2.148015, 41.437645], [2.147971, 41.437688], [2.147923, 41.437727], [2.147864, 41.437777], [2.147801, 41.43783], [2.147727, 41.437893], [2.14766, 41.437948], [2.14761, 41.437984], [2.147511, 41.438057], [2.147363, 41.437989], [2.147229, 41.438128], [2.147223, 41.438131], [2.146337, 41.438624], [2.146145, 41.438731], [2.14615, 41.438759], [2.146143, 41.438787], [2.146129, 41.438809], [2.146107, 41.438831], [2.146076, 41.438845], [2.146047, 41.438849], [2.146018, 41.43885], [2.145998, 41.438851], [2.145986, 41.43885], [2.145977, 41.438846], [2.145947, 41.438877], [2.145733, 41.439094], [2.145645, 41.439262], [2.145373, 41.439428], [2.144382, 41.439782], [2.143782, 41.440168], [2.142959, 41.440488], [2.142844, 41.440265], [2.142732, 41.44031], [2.14178, 41.439938], [2.14116, 41.439695], [2.140368, 41.440042], [2.13976, 41.440289], [2.139408, 41.440447], [2.139211, 41.440522], [2.138994, 41.440591], [2.138446, 41.44082], [2.137853, 41.44035], [2.137841, 41.440405], [2.137816, 41.44044], [2.137759, 41.440456], [2.137745, 41.440467], [2.137642, 41.440492], [2.137613, 41.4405], [2.13752, 41.440528], [2.137406, 41.440573], [2.137318, 41.440617], [2.137217, 41.44069], [2.137152, 41.440738], [2.13709, 41.440801], [2.137009, 41.440908], [2.13696, 41.440988], [2.13697, 41.441079], [2.136987, 41.441179], [2.137005, 41.441309], [2.137012, 41.44142], [2.137029, 41.441552], [2.137057, 41.441646], [2.137075, 41.441718], [2.137086, 41.44176], [2.137065, 41.441845], [2.137003, 41.441918], [2.136914, 41.442005], [2.136838, 41.442072], [2.136763, 41.442164], [2.136693, 41.442256], [2.136604, 41.4423], [2.136553, 41.442394], [2.136499, 41.442513], [2.136405, 41.442639], [2.136323, 41.442763], [2.136314, 41.44276], [2.136292, 41.44277], [2.136217, 41.442822], [2.136115, 41.442868], [2.136034, 41.442899], [2.135995, 41.442924], [2.135946, 41.442955], [2.135903, 41.442972], [2.135849, 41.44302], [2.135772, 41.443054], [2.135639, 41.443174], [2.135431, 41.443309], [2.135291, 41.443448], [2.135167, 41.44354], [2.13507, 41.443602], [2.135014, 41.443667], [2.134919, 41.443711], [2.134801, 41.443733], [2.134662, 41.443785], [2.134481, 41.443857], [2.13431, 41.443919], [2.134109, 41.443985], [2.134003, 41.444067], [2.133852, 41.444152], [2.133757, 41.444258], [2.133688, 41.444422], [2.133638, 41.444466], [2.133572, 41.444526], [2.133454, 41.444527], [2.133446, 41.44453], [2.133362, 41.444573], [2.133207, 41.444592], [2.133082, 41.444632], [2.132942, 41.444692], [2.132869, 41.444748], [2.132864, 41.444751], [2.132896, 41.444839], [2.132912, 41.445287], [2.132917, 41.445423], [2.132892, 41.445461], [2.132973, 41.445503], [2.133125, 41.445548], [2.13346, 41.44569], [2.133676, 41.445877], [2.13376, 41.44601], [2.133932, 41.446212], [2.133983, 41.446338], [2.134144, 41.446575], [2.134195, 41.446612], [2.134251, 41.44672], [2.134359, 41.446849], [2.134423, 41.44698], [2.134647, 41.447249], [2.134667, 41.447339], [2.134661, 41.447487], [2.134677, 41.447549], [2.13472, 41.44762], [2.135575, 41.447499], [2.135705, 41.447463], [2.135961, 41.447393], [2.136184, 41.447413], [2.136282, 41.44746], [2.136606, 41.447683], [2.136707, 41.447789], [2.136907, 41.447744], [2.137289, 41.447685], [2.13732, 41.447711], [2.137608, 41.447931], [2.137716, 41.447919], [2.137803, 41.4479], [2.138148, 41.447859], [2.139717, 41.447664], [2.14038, 41.447642], [2.140507, 41.447641], [2.140682, 41.447627], [2.14081, 41.447603], [2.14092, 41.447572], [2.141192, 41.447402], [2.141328, 41.447253], [2.141368, 41.447227], [2.141413, 41.44718], [2.141547, 41.447115], [2.141679, 41.447123], [2.141989, 41.447174], [2.142329, 41.447291], [2.142678, 41.447456], [2.14308, 41.447496], [2.143248, 41.447528], [2.143672, 41.447662], [2.143892, 41.447559], [2.144168, 41.447466], [2.144406, 41.447416], [2.144659, 41.447422], [2.145054, 41.447468], [2.14522, 41.447444], [2.145359, 41.44738], [2.145414, 41.44741], [2.145494, 41.447424], [2.145745, 41.447543], [2.145799, 41.44756], [2.146101, 41.447599], [2.146631, 41.447595], [2.14678, 41.447578], [2.146983, 41.447538], [2.147418, 41.447199], [2.147525, 41.447142], [2.147651, 41.447109], [2.147799, 41.447034], [2.148071, 41.446947], [2.148191, 41.446973], [2.148675, 41.446818], [2.148784, 41.446849], [2.14911, 41.447092], [2.149304, 41.44721], [2.149469, 41.447286], [2.149657, 41.447334], [2.149804, 41.447343], [2.150572, 41.44732], [2.151489, 41.447384], [2.151611, 41.44736], [2.151703, 41.447332], [2.151945, 41.447297], [2.152119, 41.447323], [2.152358, 41.447401], [2.152633, 41.447549], [2.152816, 41.447694], [2.15315, 41.44825], [2.153332, 41.448546], [2.15336, 41.448719], [2.153408, 41.448838], [2.153482, 41.448943], [2.153542, 41.449007], [2.153672, 41.449114], [2.15375, 41.449165], [2.153965, 41.449272], [2.154185, 41.449358], [2.154381, 41.449401], [2.154543, 41.449423], [2.154894, 41.449516], [2.154999, 41.449544], [2.155368, 41.44975], [2.15585, 41.44993], [2.155985, 41.449952], [2.15644, 41.449957], [2.156624, 41.449919], [2.157199, 41.449693], [2.157318, 41.449634], [2.157537, 41.449659], [2.157744, 41.449735], [2.159118, 41.450449], [2.159138, 41.450491], [2.159198, 41.450389], [2.159392, 41.450221], [2.159495, 41.449992], [2.159504, 41.449798], [2.159451, 41.449661]]]]
    },
    "properties": {
      "neighbourhood": "Horta",
      "neighbourhood_group": "Horta-Guinardó"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.17423, 41.439946], [2.174316, 41.439863], [2.174399, 41.439779], [2.175125, 41.439037], [2.174876, 41.438766], [2.174716, 41.438598], [2.174792, 41.438549], [2.174795, 41.438547], [2.174807, 41.43854], [2.174818, 41.438532], [2.174828, 41.438524], [2.174838, 41.438516], [2.174847, 41.438507], [2.174858, 41.438495], [2.174864, 41.438488], [2.174868, 41.438485], [2.174885, 41.438458], [2.174896, 41.438434], [2.174898, 41.438428], [2.174903, 41.438408], [2.174905, 41.438388], [2.174905, 41.43837], [2.174899, 41.438347], [2.174894, 41.438335], [2.174888, 41.438322], [2.174881, 41.43831], [2.174874, 41.438298], [2.174865, 41.438287], [2.174855, 41.438276], [2.174844, 41.438266], [2.174833, 41.438256], [2.174821, 41.438247], [2.174804, 41.438235], [2.174788, 41.438227], [2.174771, 41.438219], [2.174754, 41.438212], [2.174736, 41.438206], [2.174718, 41.438201], [2.174699, 41.438197], [2.17468, 41.438194], [2.17466, 41.438193], [2.174641, 41.438192], [2.174621, 41.438192], [2.174602, 41.438194], [2.174583, 41.438196], [2.174457, 41.438216], [2.174231, 41.437886], [2.174188, 41.437823], [2.174142, 41.43776], [2.174091, 41.437691], [2.174006, 41.43758], [2.174002, 41.437574], [2.173933, 41.437496], [2.173861, 41.437419], [2.173776, 41.437336], [2.173561, 41.437127], [2.173517, 41.437084], [2.173073, 41.436656], [2.173, 41.436581], [2.172923, 41.436498], [2.172851, 41.436412], [2.172763, 41.436298], [2.172693, 41.436203], [2.172492, 41.435935], [2.172385, 41.435793], [2.172174, 41.435511], [2.172095, 41.435417], [2.172066, 41.435392], [2.171981, 41.435315], [2.171952, 41.435288], [2.171923, 41.435264], [2.171894, 41.435241], [2.171863, 41.435217], [2.171838, 41.435202], [2.171776, 41.435159], [2.171709, 41.435118], [2.171639, 41.435078], [2.171566, 41.435042], [2.171492, 41.435008], [2.171415, 41.434977], [2.171343, 41.43495], [2.171269, 41.434926], [2.171193, 41.434904], [2.171116, 41.434885], [2.171039, 41.434868], [2.170938, 41.434851], [2.170821, 41.434836], [2.170704, 41.434825], [2.170586, 41.434817], [2.170468, 41.434813], [2.170397, 41.434812], [2.170318, 41.434813], [2.170239, 41.434815], [2.170159, 41.434819], [2.170096, 41.434824], [2.170031, 41.43483], [2.169968, 41.434837], [2.169904, 41.434845], [2.169847, 41.434853], [2.169789, 41.434863], [2.169732, 41.434873], [2.169674, 41.434883], [2.169613, 41.434892], [2.169168, 41.43501], [2.168961, 41.435066], [2.168562, 41.435385], [2.168558, 41.435389], [2.168552, 41.435396], [2.168547, 41.4354], [2.168544, 41.435403], [2.168539, 41.435406], [2.168112, 41.435751], [2.168055, 41.435798], [2.167998, 41.435846], [2.167943, 41.435895], [2.167896, 41.435936], [2.167851, 41.435978], [2.167777, 41.436047], [2.167716, 41.435995], [2.167819, 41.435894], [2.167904, 41.435821], [2.167886, 41.435833], [2.167867, 41.435844], [2.16784, 41.435857], [2.167817, 41.435865], [2.167801, 41.43587], [2.167776, 41.435876], [2.167761, 41.435878], [2.167738, 41.435881], [2.167722, 41.435882], [2.167711, 41.435882], [2.167689, 41.435881], [2.167677, 41.43588], [2.167653, 41.435879], [2.167649, 41.435879], [2.167635, 41.435879], [2.167611, 41.435879], [2.167545, 41.435882], [2.167498, 41.435886], [2.167451, 41.435891], [2.167422, 41.435895], [2.167386, 41.435901], [2.16737, 41.435904], [2.167363, 41.435905], [2.167356, 41.435907], [2.167346, 41.435909], [2.166341, 41.436177], [2.166286, 41.436189], [2.166279, 41.436191], [2.16624, 41.436201], [2.165925, 41.436284], [2.165842, 41.436305], [2.165726, 41.436336], [2.165653, 41.436355], [2.165652, 41.436353], [2.165594, 41.436355], [2.165227, 41.43639], [2.165057, 41.436407], [2.16486, 41.436429], [2.164728, 41.436454], [2.164501, 41.436511], [2.164247, 41.43653], [2.163521, 41.436819], [2.163369, 41.436886], [2.163461, 41.437015], [2.163543, 41.437131], [2.163388, 41.437221], [2.1633, 41.437273], [2.163225, 41.437317], [2.163285, 41.437376], [2.16317, 41.437385], [2.163145, 41.437387], [2.163166, 41.437408], [2.163316, 41.437552], [2.163437, 41.437667], [2.163631, 41.437853], [2.163696, 41.437915], [2.162875, 41.438371], [2.162523, 41.438574], [2.162342, 41.438697], [2.162006, 41.439026], [2.161813, 41.439284], [2.161628, 41.439617], [2.161598, 41.439804], [2.161542, 41.439958], [2.162478, 41.440167], [2.163264, 41.440385], [2.163292, 41.440321], [2.16331, 41.440254], [2.163321, 41.440125], [2.163318, 41.440067], [2.163297, 41.439984], [2.163265, 41.439911], [2.163224, 41.439847], [2.163388, 41.440024], [2.163431, 41.440064], [2.163495, 41.440121], [2.163551, 41.440159], [2.163601, 41.440183], [2.165525, 41.440932], [2.166108, 41.441159], [2.166728, 41.441398], [2.168081, 41.441921], [2.168389, 41.44204], [2.169887, 41.442617], [2.169939, 41.442637], [2.170467, 41.442841], [2.171772, 41.443345], [2.172664, 41.442144], [2.172718, 41.442047], [2.17274, 41.441961], [2.172748, 41.44193], [2.17283, 41.441532], [2.172918, 41.441255], [2.172944, 41.441179], [2.17297, 41.441118], [2.173003, 41.441057], [2.173039, 41.440997], [2.173078, 41.440938], [2.173118, 41.440882], [2.17316, 41.440827], [2.173204, 41.440772], [2.17325, 41.440719], [2.1733, 41.440667], [2.173354, 41.440616], [2.173409, 41.440566], [2.173467, 41.440518], [2.173528, 41.440471], [2.173591, 41.440425], [2.173626, 41.440399], [2.173721, 41.440335], [2.173788, 41.440292], [2.173864, 41.440243], [2.173937, 41.440192], [2.174008, 41.44014], [2.174077, 41.440085], [2.174143, 41.440029], [2.17423, 41.439946]]]]
    },
    "properties": {
      "neighbourhood": "la Guineueta",
      "neighbourhood_group": "Nou Barris"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.162126, 41.450235], [2.163739, 41.449806], [2.163826, 41.449812], [2.164097, 41.449852], [2.163929, 41.449047], [2.163915, 41.447886], [2.165557, 41.446181], [2.165907, 41.446116], [2.16602, 41.446095], [2.166245, 41.446364], [2.166333, 41.446497], [2.166367, 41.446573], [2.166377, 41.446642], [2.166377, 41.446704], [2.166338, 41.446901], [2.166328, 41.447021], [2.166348, 41.44712], [2.166393, 41.447187], [2.166472, 41.44726], [2.166561, 41.447325], [2.166715, 41.447397], [2.166833, 41.447432], [2.166983, 41.447453], [2.167444, 41.447446], [2.167627, 41.447459], [2.167724, 41.44748], [2.167823, 41.447521], [2.167847, 41.447486], [2.168276, 41.446875], [2.168819, 41.447009], [2.169074, 41.44652], [2.169202, 41.44627], [2.169379, 41.445925], [2.169641, 41.445429], [2.170012, 41.444706], [2.170555, 41.444838], [2.170698, 41.444562], [2.170749, 41.444461], [2.17112, 41.444573], [2.171487, 41.443767], [2.171656, 41.443501], [2.171772, 41.443345], [2.170467, 41.442841], [2.169939, 41.442637], [2.169887, 41.442617], [2.168389, 41.44204], [2.168081, 41.441921], [2.166728, 41.441398], [2.166108, 41.441159], [2.165525, 41.440932], [2.163601, 41.440183], [2.163551, 41.440159], [2.163495, 41.440121], [2.163431, 41.440064], [2.163388, 41.440024], [2.163224, 41.439847], [2.163265, 41.439911], [2.163297, 41.439984], [2.163318, 41.440067], [2.163321, 41.440125], [2.16331, 41.440254], [2.163292, 41.440321], [2.163264, 41.440385], [2.162478, 41.440167], [2.161542, 41.439958], [2.161512, 41.440043], [2.161537, 41.440236], [2.161685, 41.44056], [2.161822, 41.440713], [2.161939, 41.440781], [2.16207, 41.440819], [2.162153, 41.440831], [2.162291, 41.440852], [2.162645, 41.440865], [2.162721, 41.440891], [2.162782, 41.440996], [2.162808, 41.441064], [2.162806, 41.441247], [2.162735, 41.441361], [2.162646, 41.44141], [2.162526, 41.441412], [2.162326, 41.441415], [2.162215, 41.44144], [2.161699, 41.441661], [2.161556, 41.441637], [2.161115, 41.441827], [2.160987, 41.441888], [2.160824, 41.441962], [2.160348, 41.442165], [2.160143, 41.442233], [2.160011, 41.442382], [2.159974, 41.442419], [2.159802, 41.442305], [2.159716, 41.442179], [2.159405, 41.442284], [2.159212, 41.442403], [2.159079, 41.442534], [2.158882, 41.442796], [2.158718, 41.443013], [2.158559, 41.443383], [2.158517, 41.443458], [2.158459, 41.443764], [2.158349, 41.443963], [2.158282, 41.444044], [2.158055, 41.44417], [2.157987, 41.444319], [2.157912, 41.444653], [2.15784, 41.444777], [2.157601, 41.444978], [2.15753, 41.445015], [2.157397, 41.445052], [2.157083, 41.445096], [2.156813, 41.44526], [2.156591, 41.445389], [2.156249, 41.44553], [2.155983, 41.445569], [2.155759, 41.445577], [2.155696, 41.445651], [2.155684, 41.445717], [2.155726, 41.445771], [2.15584, 41.445822], [2.156129, 41.445812], [2.157121, 41.446003], [2.157242, 41.446058], [2.157555, 41.446693], [2.157571, 41.446882], [2.157546, 41.446982], [2.157465, 41.447125], [2.157124, 41.447304], [2.157061, 41.447374], [2.157063, 41.447444], [2.157136, 41.44749], [2.157407, 41.44749], [2.157626, 41.447551], [2.157768, 41.447635], [2.158099, 41.447879], [2.158366, 41.448138], [2.159025, 41.448944], [2.159366, 41.449424], [2.15944, 41.449468], [2.159443, 41.449532], [2.159436, 41.449628], [2.159451, 41.449661], [2.159504, 41.449798], [2.159495, 41.449992], [2.159392, 41.450221], [2.159198, 41.450389], [2.159138, 41.450491], [2.159165, 41.450547], [2.159651, 41.450545], [2.159999, 41.450496], [2.16024, 41.450429], [2.162126, 41.450235]]]]
    },
    "properties": {
      "neighbourhood": "Canyelles",
      "neighbourhood_group": "Nou Barris"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.183149, 41.452864], [2.183143, 41.452744], [2.183152, 41.452624], [2.183186, 41.452468], [2.183147, 41.452402], [2.182985, 41.452281], [2.182499, 41.451953], [2.182445, 41.451863], [2.182199, 41.451717], [2.182065, 41.451638], [2.181899, 41.451481], [2.18175, 41.4513], [2.181505, 41.451124], [2.181079, 41.450785], [2.180604, 41.450524], [2.180165, 41.450182], [2.179956, 41.44971], [2.179274, 41.448807], [2.179441, 41.447973], [2.179658, 41.447928], [2.180213, 41.447302], [2.180307, 41.447234], [2.180345, 41.447206], [2.180409, 41.447117], [2.180261, 41.446937], [2.179792, 41.446408], [2.179626, 41.446116], [2.179611, 41.446114], [2.179447, 41.446081], [2.179393, 41.445875], [2.178294, 41.445628], [2.177007, 41.445279], [2.176229, 41.44502], [2.175566, 41.444788], [2.175363, 41.444718], [2.175237, 41.444674], [2.174264, 41.444288], [2.173117, 41.443854], [2.171772, 41.443345], [2.171656, 41.443501], [2.171487, 41.443767], [2.17112, 41.444573], [2.170749, 41.444461], [2.170698, 41.444562], [2.170555, 41.444838], [2.170012, 41.444706], [2.169641, 41.445429], [2.169379, 41.445925], [2.169202, 41.44627], [2.169074, 41.44652], [2.168819, 41.447009], [2.168276, 41.446875], [2.167847, 41.447486], [2.167823, 41.447521], [2.167876, 41.447557], [2.167921, 41.447596], [2.167946, 41.447629], [2.167965, 41.447665], [2.167979, 41.447703], [2.167988, 41.447744], [2.167997, 41.447836], [2.167889, 41.448276], [2.167821, 41.448537], [2.167696, 41.448843], [2.167629, 41.448973], [2.167597, 41.449087], [2.167626, 41.449195], [2.167698, 41.449297], [2.167789, 41.449366], [2.167992, 41.449443], [2.168273, 41.449523], [2.168437, 41.44956], [2.168554, 41.449558], [2.168702, 41.449526], [2.168815, 41.449481], [2.168899, 41.449417], [2.168969, 41.449336], [2.169128, 41.449085], [2.169177, 41.44901], [2.169252, 41.44892], [2.169349, 41.448835], [2.169489, 41.448742], [2.169615, 41.448697], [2.169784, 41.448675], [2.169975, 41.448699], [2.170148, 41.448733], [2.170273, 41.44878], [2.170499, 41.448932], [2.170675, 41.449025], [2.170874, 41.449124], [2.171059, 41.449227], [2.17124, 41.449355], [2.171429, 41.449494], [2.171536, 41.449543], [2.171645, 41.449547], [2.171754, 41.449532], [2.171954, 41.449458], [2.172252, 41.449317], [2.172339, 41.449288], [2.172434, 41.449272], [2.172538, 41.449286], [2.172646, 41.449336], [2.17284, 41.449448], [2.172963, 41.449518], [2.173084, 41.449581], [2.173213, 41.449627], [2.173356, 41.449684], [2.173451, 41.44974], [2.173541, 41.449829], [2.173651, 41.450051], [2.173719, 41.450126], [2.173844, 41.450232], [2.174093, 41.450397], [2.174313, 41.450509], [2.174464, 41.450565], [2.174667, 41.450616], [2.174771, 41.45063], [2.174836, 41.450614], [2.17485, 41.450609], [2.175076, 41.450527], [2.175194, 41.450505], [2.175337, 41.450493], [2.175486, 41.450486], [2.175668, 41.450503], [2.175873, 41.450542], [2.175962, 41.450576], [2.176052, 41.450653], [2.176345, 41.450946], [2.176419, 41.451034], [2.176487, 41.45113], [2.176553, 41.451189], [2.176657, 41.451251], [2.176787, 41.451305], [2.176895, 41.451342], [2.177033, 41.451373], [2.177243, 41.451393], [2.17749, 41.451417], [2.177781, 41.451453], [2.177995, 41.451486], [2.178121, 41.451519], [2.178205, 41.451556], [2.178258, 41.451595], [2.178313, 41.451643], [2.178893, 41.452159], [2.179024, 41.452075], [2.179183, 41.452235], [2.17926, 41.452172], [2.17959, 41.452417], [2.179939, 41.452494], [2.180239, 41.452494], [2.180363, 41.452522], [2.180558, 41.452658], [2.180671, 41.452713], [2.180811, 41.452753], [2.180895, 41.452761], [2.18101, 41.452756], [2.18113, 41.452753], [2.18114, 41.452806], [2.181283, 41.452796], [2.181422, 41.45281], [2.18147, 41.452815], [2.181513, 41.452823], [2.18169, 41.452841], [2.181818, 41.452864], [2.181872, 41.452896], [2.181929, 41.452984], [2.182004, 41.453089], [2.182051, 41.453136], [2.1822, 41.453277], [2.182294, 41.453339], [2.182365, 41.453385], [2.182535, 41.453473], [2.182614, 41.453518], [2.182672, 41.45356], [2.182791, 41.453641], [2.182886, 41.45368], [2.18319, 41.453751], [2.183337, 41.453801], [2.183603, 41.45393], [2.183864, 41.454078], [2.184035, 41.45421], [2.184065, 41.454233], [2.184122, 41.454285], [2.184166, 41.454332], [2.184222, 41.454438], [2.184252, 41.454484], [2.184265, 41.454499], [2.184283, 41.454513], [2.184309, 41.454527], [2.184343, 41.454535], [2.184362, 41.454532], [2.184382, 41.454524], [2.184389, 41.454489], [2.184378, 41.45441], [2.184346, 41.454281], [2.184298, 41.454173], [2.184239, 41.454094], [2.184021, 41.453856], [2.183969, 41.45379], [2.18388, 41.453648], [2.183824, 41.453563], [2.183759, 41.453466], [2.183668, 41.453395], [2.183534, 41.453335], [2.183452, 41.453296], [2.183401, 41.453259], [2.183312, 41.453179], [2.183269, 41.453093], [2.1832, 41.452972], [2.183149, 41.452864]]]]
    },
    "properties": {
      "neighbourhood": "les Roquetes",
      "neighbourhood_group": "Nou Barris"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.175397, 41.439332], [2.175125, 41.439037], [2.174399, 41.439779], [2.174316, 41.439863], [2.17423, 41.439946], [2.174143, 41.440029], [2.174077, 41.440085], [2.174008, 41.44014], [2.173937, 41.440192], [2.173864, 41.440243], [2.173788, 41.440292], [2.173721, 41.440335], [2.173626, 41.440399], [2.173591, 41.440425], [2.173528, 41.440471], [2.173467, 41.440518], [2.173409, 41.440566], [2.173354, 41.440616], [2.1733, 41.440667], [2.17325, 41.440719], [2.173204, 41.440772], [2.17316, 41.440827], [2.173118, 41.440882], [2.173078, 41.440938], [2.173039, 41.440997], [2.173003, 41.441057], [2.17297, 41.441118], [2.172944, 41.441179], [2.172918, 41.441255], [2.17283, 41.441532], [2.172748, 41.44193], [2.17274, 41.441961], [2.172718, 41.442047], [2.172664, 41.442144], [2.171772, 41.443345], [2.173117, 41.443854], [2.174264, 41.444288], [2.175237, 41.444674], [2.175363, 41.444718], [2.175566, 41.444788], [2.176229, 41.44502], [2.177007, 41.445279], [2.178294, 41.445628], [2.179393, 41.445875], [2.179447, 41.446081], [2.179611, 41.446114], [2.179626, 41.446116], [2.179448, 41.445725], [2.179275, 41.445337], [2.178923, 41.444546], [2.178858, 41.444395], [2.17841, 41.443349], [2.178376, 41.443271], [2.177992, 41.442392], [2.177852, 41.442134], [2.177709, 41.441951], [2.177578, 41.441784], [2.177374, 41.441542], [2.177139, 41.441273], [2.176625, 41.44068], [2.176201, 41.4402], [2.176081, 41.440064], [2.175397, 41.439332]]]]
    },
    "properties": {
      "neighbourhood": "Verdun",
      "neighbourhood_group": "Nou Barris"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.17633, 41.438614], [2.174898, 41.438428], [2.174896, 41.438434], [2.174885, 41.438458], [2.174868, 41.438485], [2.174864, 41.438488], [2.174858, 41.438495], [2.174847, 41.438507], [2.174838, 41.438516], [2.174828, 41.438524], [2.174818, 41.438532], [2.174807, 41.43854], [2.174795, 41.438547], [2.174792, 41.438549], [2.174716, 41.438598], [2.174876, 41.438766], [2.175125, 41.439037], [2.175397, 41.439332], [2.176081, 41.440064], [2.176201, 41.4402], [2.176625, 41.44068], [2.177139, 41.441273], [2.177374, 41.441542], [2.177578, 41.441784], [2.177709, 41.441951], [2.177852, 41.442134], [2.177992, 41.442392], [2.178376, 41.443271], [2.17841, 41.443349], [2.178858, 41.444395], [2.178923, 41.444546], [2.179275, 41.445337], [2.179448, 41.445725], [2.179626, 41.446116], [2.180442, 41.446245], [2.181421, 41.446376], [2.182346, 41.446499], [2.183444, 41.446633], [2.184816, 41.44676], [2.186192, 41.446879], [2.186639, 41.446919], [2.186867, 41.446951], [2.187118, 41.446976], [2.187315, 41.446984], [2.187706, 41.446994], [2.187635, 41.446888], [2.187365, 41.445821], [2.18676, 41.443936], [2.186491, 41.443095], [2.186291, 41.442472], [2.186302, 41.44235], [2.186312, 41.442241], [2.186315, 41.442191], [2.185811, 41.440751], [2.185458, 41.439736], [2.183496, 41.439502], [2.181705, 41.439287], [2.181512, 41.439277], [2.180262, 41.439124], [2.180124, 41.439107], [2.179278, 41.438999], [2.1788, 41.438936], [2.17841, 41.438886], [2.17657, 41.438645], [2.17633, 41.438614]]]]
    },
    "properties": {
      "neighbourhood": "la Prosperitat",
      "neighbourhood_group": "Nou Barris"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.207525, 41.432993], [2.207144, 41.432854], [2.207047, 41.43289], [2.206546, 41.432716], [2.206355, 41.432659], [2.20623, 41.432621], [2.206218, 41.432468], [2.206328, 41.431865], [2.20651, 41.43113], [2.206686, 41.43063], [2.206758, 41.430617], [2.206752, 41.430098], [2.207623, 41.429672], [2.207649, 41.429583], [2.20725, 41.429124], [2.207285, 41.428487], [2.207346, 41.428141], [2.207353, 41.428022], [2.207339, 41.427892], [2.207243, 41.427723], [2.207227, 41.427623], [2.207211, 41.427592], [2.205594, 41.428337], [2.205218, 41.42851], [2.203538, 41.429285], [2.203481, 41.429308], [2.202787, 41.429598], [2.202311, 41.429753], [2.201894, 41.429911], [2.201229, 41.43009], [2.200846, 41.430159], [2.200158, 41.430198], [2.199674, 41.430163], [2.199278, 41.430088], [2.198559, 41.429849], [2.198012, 41.429554], [2.197795, 41.429388], [2.197605, 41.429201], [2.19734, 41.428885], [2.197143, 41.428507], [2.197019, 41.42827], [2.196587, 41.427433], [2.196441, 41.427102], [2.196363, 41.426741], [2.196222, 41.42681], [2.195951, 41.426962], [2.19614, 41.42746], [2.196223, 41.427721], [2.19629, 41.428086], [2.196305, 41.428272], [2.196404, 41.429269], [2.19642, 41.429762], [2.196423, 41.42988], [2.196423, 41.42995], [2.19642, 41.430034], [2.196416, 41.430132], [2.196408, 41.430249], [2.196399, 41.430342], [2.196388, 41.430434], [2.196373, 41.430531], [2.196357, 41.430619], [2.196346, 41.43068], [2.196332, 41.430759], [2.196317, 41.430844], [2.196308, 41.430919], [2.196289, 41.430976], [2.196263, 41.431052], [2.196244, 41.431119], [2.19622, 41.431204], [2.196187, 41.431306], [2.196161, 41.431361], [2.195852, 41.431971], [2.195687, 41.432308], [2.19549, 41.432683], [2.19535, 41.432883], [2.194929, 41.433522], [2.194515, 41.43402], [2.194095, 41.434614], [2.193958, 41.434869], [2.193914, 41.434979], [2.193793, 41.435279], [2.19367, 41.435731], [2.193638, 41.43601], [2.193627, 41.436486], [2.193663, 41.436779], [2.193722, 41.437067], [2.194034, 41.437908], [2.19463, 41.439757], [2.195614, 41.442521], [2.197061, 41.442626], [2.198127, 41.442706], [2.19922, 41.442787], [2.19973, 41.442839], [2.199316, 41.445065], [2.201842, 41.446334], [2.202033, 41.446368], [2.203333, 41.447028], [2.203852, 41.446483], [2.204629, 41.445655], [2.20493, 41.445332], [2.205247, 41.445002], [2.205559, 41.444672], [2.20626, 41.443903], [2.206811, 41.443205], [2.207286, 41.442478], [2.207464, 41.442205], [2.207744, 41.441679], [2.208071, 41.440976], [2.208351, 41.440238], [2.20864, 41.439213], [2.209075, 41.437668], [2.20933, 41.436775], [2.209267, 41.43657], [2.209735, 41.435325], [2.209721, 41.435258], [2.209715, 41.435228], [2.209997, 41.434706], [2.210176, 41.434384], [2.210617, 41.433507], [2.209385, 41.433289], [2.208675, 41.433219], [2.208423, 41.433217], [2.208076, 41.43317], [2.207525, 41.432993]]]]
    },
    "properties": {
      "neighbourhood": "el Bon Pastor",
      "neighbourhood_group": "Sant Andreu"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.18855, 41.454608], [2.188776, 41.453789], [2.18886, 41.453305], [2.18893, 41.452725], [2.188926, 41.452635], [2.188911, 41.452051], [2.188858, 41.451466], [2.188843, 41.451331], [2.188792, 41.450826], [2.188626, 41.450001], [2.188471, 41.449386], [2.188407, 41.449166], [2.188313, 41.448897], [2.18821, 41.448604], [2.187739, 41.447043], [2.187706, 41.446994], [2.187315, 41.446984], [2.187118, 41.446976], [2.186867, 41.446951], [2.186639, 41.446919], [2.186192, 41.446879], [2.184816, 41.44676], [2.183444, 41.446633], [2.182346, 41.446499], [2.181421, 41.446376], [2.180442, 41.446245], [2.179626, 41.446116], [2.179792, 41.446408], [2.180261, 41.446937], [2.180409, 41.447117], [2.180345, 41.447206], [2.180307, 41.447234], [2.180213, 41.447302], [2.179658, 41.447928], [2.179441, 41.447973], [2.179274, 41.448807], [2.179956, 41.44971], [2.180165, 41.450182], [2.180604, 41.450524], [2.181079, 41.450785], [2.181505, 41.451124], [2.18175, 41.4513], [2.181899, 41.451481], [2.182065, 41.451638], [2.182199, 41.451717], [2.182445, 41.451863], [2.182499, 41.451953], [2.182985, 41.452281], [2.183147, 41.452402], [2.183186, 41.452468], [2.183152, 41.452624], [2.183143, 41.452744], [2.183149, 41.452864], [2.1832, 41.452972], [2.183269, 41.453093], [2.183312, 41.453179], [2.183401, 41.453259], [2.183452, 41.453296], [2.183534, 41.453335], [2.183668, 41.453395], [2.183759, 41.453466], [2.183824, 41.453563], [2.18388, 41.453648], [2.183969, 41.45379], [2.184021, 41.453856], [2.184239, 41.454094], [2.184298, 41.454173], [2.184346, 41.454281], [2.184378, 41.45441], [2.184389, 41.454489], [2.184382, 41.454524], [2.184425, 41.454552], [2.184433, 41.454578], [2.184441, 41.454606], [2.184446, 41.454624], [2.184455, 41.454655], [2.184466, 41.454703], [2.184469, 41.454736], [2.184466, 41.454777], [2.184506, 41.454822], [2.184533, 41.45485], [2.184565, 41.454874], [2.184594, 41.45489], [2.184617, 41.454903], [2.184625, 41.45491], [2.18463, 41.454914], [2.184634, 41.454918], [2.18464, 41.454923], [2.184645, 41.454927], [2.18465, 41.454931], [2.184754, 41.455007], [2.184856, 41.454902], [2.18551, 41.455194], [2.186115, 41.455467], [2.186146, 41.455491], [2.18619, 41.455526], [2.186242, 41.455565], [2.18629, 41.455602], [2.186336, 41.455636], [2.186406, 41.45569], [2.18647, 41.45574], [2.186506, 41.455794], [2.186874, 41.456082], [2.186932, 41.456127], [2.186971, 41.456157], [2.187047, 41.456217], [2.187152, 41.456112], [2.187263, 41.455991], [2.187388, 41.455846], [2.187461, 41.455755], [2.187516, 41.45568], [2.187563, 41.45561], [2.187586, 41.455595], [2.187629, 41.455525], [2.187721, 41.455389], [2.187817, 41.455226], [2.187917, 41.45505], [2.188003, 41.454886], [2.188068, 41.45474], [2.188116, 41.454628], [2.18813, 41.454559], [2.188187, 41.454398], [2.188241, 41.454219], [2.18827, 41.454099], [2.188285, 41.454031], [2.188299, 41.453962], [2.188317, 41.45387], [2.18833, 41.453788], [2.188336, 41.453746], [2.18855, 41.453763], [2.188516, 41.453963], [2.188508, 41.453962], [2.188478, 41.454112], [2.18845, 41.454219], [2.188444, 41.454241], [2.188405, 41.454387], [2.188333, 41.454594], [2.188226, 41.454855], [2.188126, 41.455059], [2.188034, 41.455215], [2.187884, 41.455508], [2.187826, 41.455592], [2.187781, 41.455654], [2.18772, 41.455735], [2.187664, 41.455808], [2.187615, 41.455871], [2.187509, 41.455998], [2.187462, 41.456047], [2.187409, 41.456106], [2.187365, 41.456156], [2.187322, 41.456195], [2.187259, 41.456255], [2.187191, 41.456318], [2.187601, 41.456666], [2.187731, 41.456487], [2.187852, 41.456305], [2.187945, 41.456149], [2.188089, 41.455882], [2.188162, 41.455719], [2.18824, 41.455533], [2.188316, 41.45533], [2.188387, 41.455116], [2.188421, 41.45501], [2.188438, 41.454962], [2.18855, 41.454608]]]]
    },
    "properties": {
      "neighbourhood": "la Trinitat Nova",
      "neighbourhood_group": "Nou Barris"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.181529, 41.461396], [2.181802, 41.461092], [2.182003, 41.460889], [2.182214, 41.460687], [2.182396, 41.460522], [2.182631, 41.460318], [2.18288, 41.460114], [2.183056, 41.459973], [2.183226, 41.459841], [2.183412, 41.459701], [2.183534, 41.459611], [2.18361, 41.459555], [2.183836, 41.459392], [2.184091, 41.459215], [2.184324, 41.459058], [2.184703, 41.458814], [2.184979, 41.458643], [2.185251, 41.45848], [2.185507, 41.458325], [2.185868, 41.458108], [2.186299, 41.457831], [2.18658, 41.457637], [2.186779, 41.457487], [2.187046, 41.457258], [2.187265, 41.457048], [2.187431, 41.456871], [2.18749, 41.4568], [2.187601, 41.456666], [2.187191, 41.456318], [2.187259, 41.456255], [2.187322, 41.456195], [2.187365, 41.456156], [2.187409, 41.456106], [2.187462, 41.456047], [2.187509, 41.455998], [2.187615, 41.455871], [2.187664, 41.455808], [2.18772, 41.455735], [2.187781, 41.455654], [2.187826, 41.455592], [2.187884, 41.455508], [2.188034, 41.455215], [2.188126, 41.455059], [2.188226, 41.454855], [2.188333, 41.454594], [2.188405, 41.454387], [2.188444, 41.454241], [2.18845, 41.454219], [2.188478, 41.454112], [2.188508, 41.453962], [2.188516, 41.453963], [2.18855, 41.453763], [2.188336, 41.453746], [2.18833, 41.453788], [2.188317, 41.45387], [2.188299, 41.453962], [2.188285, 41.454031], [2.18827, 41.454099], [2.188241, 41.454219], [2.188187, 41.454398], [2.18813, 41.454559], [2.188116, 41.454628], [2.188068, 41.45474], [2.188003, 41.454886], [2.187917, 41.45505], [2.187817, 41.455226], [2.187721, 41.455389], [2.187629, 41.455525], [2.187586, 41.455595], [2.187563, 41.45561], [2.187516, 41.45568], [2.187461, 41.455755], [2.187388, 41.455846], [2.187263, 41.455991], [2.187152, 41.456112], [2.187047, 41.456217], [2.186971, 41.456157], [2.186932, 41.456127], [2.186874, 41.456082], [2.186506, 41.455794], [2.18647, 41.45574], [2.186406, 41.45569], [2.186336, 41.455636], [2.18629, 41.455602], [2.186242, 41.455565], [2.18619, 41.455526], [2.186146, 41.455491], [2.186115, 41.455467], [2.18551, 41.455194], [2.184856, 41.454902], [2.184754, 41.455007], [2.18465, 41.454931], [2.184645, 41.454927], [2.18464, 41.454923], [2.184634, 41.454918], [2.18463, 41.454914], [2.184625, 41.45491], [2.184617, 41.454903], [2.184594, 41.45489], [2.184565, 41.454874], [2.184533, 41.45485], [2.184506, 41.454822], [2.184466, 41.454777], [2.184469, 41.454736], [2.184466, 41.454703], [2.184455, 41.454655], [2.184446, 41.454624], [2.184441, 41.454606], [2.184433, 41.454578], [2.184425, 41.454552], [2.184382, 41.454524], [2.184362, 41.454532], [2.184343, 41.454535], [2.184309, 41.454527], [2.184283, 41.454513], [2.184265, 41.454499], [2.184252, 41.454484], [2.184222, 41.454438], [2.184166, 41.454332], [2.184122, 41.454285], [2.184065, 41.454233], [2.184035, 41.45421], [2.183864, 41.454078], [2.183603, 41.45393], [2.183337, 41.453801], [2.18319, 41.453751], [2.182886, 41.45368], [2.182791, 41.453641], [2.182672, 41.45356], [2.182614, 41.453518], [2.182535, 41.453473], [2.182365, 41.453385], [2.182294, 41.453339], [2.1822, 41.453277], [2.182051, 41.453136], [2.182004, 41.453089], [2.181929, 41.452984], [2.181872, 41.452896], [2.181818, 41.452864], [2.18169, 41.452841], [2.181513, 41.452823], [2.18147, 41.452815], [2.181422, 41.45281], [2.181283, 41.452796], [2.18114, 41.452806], [2.18113, 41.452753], [2.18101, 41.452756], [2.180895, 41.452761], [2.180811, 41.452753], [2.180671, 41.452713], [2.180558, 41.452658], [2.180363, 41.452522], [2.180239, 41.452494], [2.179939, 41.452494], [2.17959, 41.452417], [2.17926, 41.452172], [2.179183, 41.452235], [2.179024, 41.452075], [2.178893, 41.452159], [2.178313, 41.451643], [2.178258, 41.451595], [2.178205, 41.451556], [2.178121, 41.451519], [2.177995, 41.451486], [2.177781, 41.451453], [2.17749, 41.451417], [2.177243, 41.451393], [2.177033, 41.451373], [2.176895, 41.451342], [2.176787, 41.451305], [2.176657, 41.451251], [2.176553, 41.451189], [2.176487, 41.45113], [2.176419, 41.451034], [2.176345, 41.450946], [2.176052, 41.450653], [2.175962, 41.450576], [2.175873, 41.450542], [2.175668, 41.450503], [2.175486, 41.450486], [2.175337, 41.450493], [2.175194, 41.450505], [2.175076, 41.450527], [2.17485, 41.450609], [2.174836, 41.450614], [2.174771, 41.45063], [2.174667, 41.450616], [2.174464, 41.450565], [2.174313, 41.450509], [2.174093, 41.450397], [2.173844, 41.450232], [2.173719, 41.450126], [2.173651, 41.450051], [2.173541, 41.449829], [2.173451, 41.44974], [2.173356, 41.449684], [2.173213, 41.449627], [2.173084, 41.449581], [2.172963, 41.449518], [2.17284, 41.449448], [2.172646, 41.449336], [2.172538, 41.449286], [2.172434, 41.449272], [2.172339, 41.449288], [2.172252, 41.449317], [2.171954, 41.449458], [2.171754, 41.449532], [2.171645, 41.449547], [2.171536, 41.449543], [2.171429, 41.449494], [2.17124, 41.449355], [2.171059, 41.449227], [2.170874, 41.449124], [2.170675, 41.449025], [2.170499, 41.448932], [2.170273, 41.44878], [2.170148, 41.448733], [2.169975, 41.448699], [2.169784, 41.448675], [2.169615, 41.448697], [2.169489, 41.448742], [2.169349, 41.448835], [2.169252, 41.44892], [2.169177, 41.44901], [2.169128, 41.449085], [2.168969, 41.449336], [2.168899, 41.449417], [2.168815, 41.449481], [2.168702, 41.449526], [2.168554, 41.449558], [2.168437, 41.44956], [2.168273, 41.449523], [2.167992, 41.449443], [2.167789, 41.449366], [2.167698, 41.449297], [2.167626, 41.449195], [2.167597, 41.449087], [2.167629, 41.448973], [2.167696, 41.448843], [2.167821, 41.448537], [2.167889, 41.448276], [2.167997, 41.447836], [2.167988, 41.447744], [2.167979, 41.447703], [2.167965, 41.447665], [2.167946, 41.447629], [2.167921, 41.447596], [2.167876, 41.447557], [2.167823, 41.447521], [2.167724, 41.44748], [2.167627, 41.447459], [2.167444, 41.447446], [2.166983, 41.447453], [2.166833, 41.447432], [2.166715, 41.447397], [2.166561, 41.447325], [2.166472, 41.44726], [2.166393, 41.447187], [2.166348, 41.44712], [2.166328, 41.447021], [2.166338, 41.446901], [2.166377, 41.446704], [2.166377, 41.446642], [2.166367, 41.446573], [2.166333, 41.446497], [2.166245, 41.446364], [2.16602, 41.446095], [2.165907, 41.446116], [2.165557, 41.446181], [2.163915, 41.447886], [2.163929, 41.449047], [2.164097, 41.449852], [2.16412, 41.449855], [2.164261, 41.44993], [2.16567, 41.451508], [2.165071, 41.452664], [2.165001, 41.454593], [2.164869, 41.454785], [2.164449, 41.455185], [2.164156, 41.455512], [2.163822, 41.455921], [2.164458, 41.456865], [2.164622, 41.457144], [2.165019, 41.458096], [2.166027, 41.458634], [2.16687, 41.45911], [2.168844, 41.459144], [2.16994, 41.459163], [2.170785, 41.45916], [2.17085, 41.45916], [2.170851, 41.459049], [2.170947, 41.459049], [2.171231, 41.459049], [2.171511, 41.458943], [2.171762, 41.458989], [2.171908, 41.459122], [2.17306, 41.459162], [2.17341, 41.459174], [2.174149, 41.4585], [2.174525, 41.45871], [2.175073, 41.458808], [2.175114, 41.458816], [2.175658, 41.458916], [2.175929, 41.458965], [2.175937, 41.458967], [2.175953, 41.458972], [2.175996, 41.458993], [2.176044, 41.45902], [2.176089, 41.459048], [2.176116, 41.459066], [2.176144, 41.459095], [2.176139, 41.459082], [2.176136, 41.459066], [2.176136, 41.459045], [2.176142, 41.459026], [2.176153, 41.459009], [2.17617, 41.458991], [2.176183, 41.458981], [2.176205, 41.458971], [2.176223, 41.458966], [2.176263, 41.458959], [2.176292, 41.458957], [2.176324, 41.458965], [2.17636, 41.458982], [2.176848, 41.459336], [2.176944, 41.459387], [2.177115, 41.459476], [2.177577, 41.459859], [2.178275, 41.46027], [2.178371, 41.460326], [2.178402, 41.460297], [2.178479, 41.460348], [2.17846, 41.460365], [2.178893, 41.460626], [2.178904, 41.460914], [2.178953, 41.460917], [2.178965, 41.460917], [2.178986, 41.460916], [2.179014, 41.460915], [2.179063, 41.460914], [2.179099, 41.460918], [2.179135, 41.460928], [2.179159, 41.460936], [2.179178, 41.460944], [2.179198, 41.460955], [2.179203, 41.460958], [2.179401, 41.461072], [2.17954, 41.461152], [2.179551, 41.461159], [2.179643, 41.461203], [2.179781, 41.461267], [2.179872, 41.46131], [2.179969, 41.461342], [2.180033, 41.461355], [2.180113, 41.461361], [2.180202, 41.461354], [2.180254, 41.461336], [2.18031, 41.461314], [2.180365, 41.46129], [2.180417, 41.461262], [2.180504, 41.46121], [2.180557, 41.461229], [2.180501, 41.461305], [2.180267, 41.461627], [2.18016, 41.461784], [2.180109, 41.461856], [2.180093, 41.461879], [2.180026, 41.461995], [2.179987, 41.462055], [2.179916, 41.462167], [2.179868, 41.462248], [2.179806, 41.462353], [2.179746, 41.462454], [2.179826, 41.46248], [2.179966, 41.462527], [2.180041, 41.462552], [2.180088, 41.462568], [2.179881, 41.46272], [2.179764, 41.462931], [2.179734, 41.462985], [2.179672, 41.463122], [2.179564, 41.463358], [2.179501, 41.463494], [2.179498, 41.463696], [2.179492, 41.463874], [2.179414, 41.464059], [2.179367, 41.464166], [2.17934, 41.464227], [2.179284, 41.464379], [2.179514, 41.464168], [2.179698, 41.46398], [2.179802, 41.463868], [2.180013, 41.463628], [2.180109, 41.463508], [2.180172, 41.463423], [2.180271, 41.463288], [2.180481, 41.462969], [2.180624, 41.462732], [2.180741, 41.462541], [2.180889, 41.462295], [2.181038, 41.462056], [2.181217, 41.461797], [2.181357, 41.461612], [2.181383, 41.461579], [2.181529, 41.461396]]]]
    },
    "properties": {
      "neighbourhood": "Torre Baró",
      "neighbourhood_group": "Nou Barris"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.180267, 41.461627], [2.180501, 41.461305], [2.180557, 41.461229], [2.180504, 41.46121], [2.180417, 41.461262], [2.180365, 41.46129], [2.18031, 41.461314], [2.180254, 41.461336], [2.180202, 41.461354], [2.180113, 41.461361], [2.180033, 41.461355], [2.179969, 41.461342], [2.179872, 41.46131], [2.179781, 41.461267], [2.179643, 41.461203], [2.179551, 41.461159], [2.17954, 41.461152], [2.179401, 41.461072], [2.179203, 41.460958], [2.179198, 41.460955], [2.179178, 41.460944], [2.179159, 41.460936], [2.179135, 41.460928], [2.179099, 41.460918], [2.179063, 41.460914], [2.179014, 41.460915], [2.178986, 41.460916], [2.178965, 41.460917], [2.178953, 41.460917], [2.178904, 41.460914], [2.178893, 41.460626], [2.17846, 41.460365], [2.178479, 41.460348], [2.178402, 41.460297], [2.178371, 41.460326], [2.178275, 41.46027], [2.177577, 41.459859], [2.177115, 41.459476], [2.176944, 41.459387], [2.176848, 41.459336], [2.17636, 41.458982], [2.176324, 41.458965], [2.176292, 41.458957], [2.176263, 41.458959], [2.176223, 41.458966], [2.176205, 41.458971], [2.176183, 41.458981], [2.17617, 41.458991], [2.176153, 41.459009], [2.176142, 41.459026], [2.176136, 41.459045], [2.176136, 41.459066], [2.176139, 41.459082], [2.176144, 41.459095], [2.176116, 41.459066], [2.176089, 41.459048], [2.176044, 41.45902], [2.175996, 41.458993], [2.175953, 41.458972], [2.175937, 41.458967], [2.175929, 41.458965], [2.175658, 41.458916], [2.175114, 41.458816], [2.175073, 41.458808], [2.174525, 41.45871], [2.174149, 41.4585], [2.17341, 41.459174], [2.17306, 41.459162], [2.171908, 41.459122], [2.171762, 41.458989], [2.171511, 41.458943], [2.171231, 41.459049], [2.170947, 41.459049], [2.170851, 41.459049], [2.17085, 41.45916], [2.170785, 41.45916], [2.16994, 41.459163], [2.168844, 41.459144], [2.16687, 41.45911], [2.167209, 41.459611], [2.167366, 41.459644], [2.167913, 41.459877], [2.167978, 41.459906], [2.168007, 41.459932], [2.168035, 41.459956], [2.168047, 41.459963], [2.168105, 41.460003], [2.168166, 41.460055], [2.168204, 41.4601], [2.168258, 41.460188], [2.168283, 41.460258], [2.168294, 41.460309], [2.168717, 41.460376], [2.16891, 41.460468], [2.168964, 41.460493], [2.169298, 41.460604], [2.169392, 41.46063], [2.169556, 41.46066], [2.169834, 41.460684], [2.169953, 41.460712], [2.170137, 41.460768], [2.170167, 41.460789], [2.170299, 41.460809], [2.170475, 41.460924], [2.170575, 41.460978], [2.170615, 41.460986], [2.170689, 41.460988], [2.170896, 41.461054], [2.171003, 41.46106], [2.171112, 41.461052], [2.171192, 41.461045], [2.171265, 41.461094], [2.171312, 41.461104], [2.171375, 41.461089], [2.171561, 41.461012], [2.171652, 41.461023], [2.171829, 41.461242], [2.171879, 41.461293], [2.171929, 41.461322], [2.171984, 41.461482], [2.172012, 41.461532], [2.172029, 41.461547], [2.172069, 41.461557], [2.172241, 41.461645], [2.172375, 41.461733], [2.172462, 41.461772], [2.172863, 41.462027], [2.173048, 41.462149], [2.1734, 41.462291], [2.173544, 41.462335], [2.173736, 41.462522], [2.17386, 41.462644], [2.174467, 41.463232], [2.175016, 41.463512], [2.175379, 41.463639], [2.176349, 41.463899], [2.177307, 41.46418], [2.177346, 41.464193], [2.178455, 41.464423], [2.178567, 41.464446], [2.178729, 41.464462], [2.178815, 41.464495], [2.178855, 41.464507], [2.178871, 41.464512], [2.179094, 41.464552], [2.179246, 41.464413], [2.179284, 41.464379], [2.17934, 41.464227], [2.179367, 41.464166], [2.179414, 41.464059], [2.179492, 41.463874], [2.179498, 41.463696], [2.179501, 41.463494], [2.179564, 41.463358], [2.179672, 41.463122], [2.179734, 41.462985], [2.179764, 41.462931], [2.179881, 41.46272], [2.180088, 41.462568], [2.180041, 41.462552], [2.179966, 41.462527], [2.179826, 41.46248], [2.179746, 41.462454], [2.179806, 41.462353], [2.179868, 41.462248], [2.179916, 41.462167], [2.179987, 41.462055], [2.180026, 41.461995], [2.180093, 41.461879], [2.180109, 41.461856], [2.18016, 41.461784], [2.180267, 41.461627]]]]
    },
    "properties": {
      "neighbourhood": "Ciutat Meridiana",
      "neighbourhood_group": "Nou Barris"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.181383, 41.461579], [2.181357, 41.461612], [2.181217, 41.461797], [2.181038, 41.462056], [2.180889, 41.462295], [2.180741, 41.462541], [2.180624, 41.462732], [2.180481, 41.462969], [2.180271, 41.463288], [2.180172, 41.463423], [2.180109, 41.463508], [2.180013, 41.463628], [2.179802, 41.463868], [2.179698, 41.46398], [2.179514, 41.464168], [2.179284, 41.464379], [2.179246, 41.464413], [2.179094, 41.464552], [2.179211, 41.464574], [2.179275, 41.464588], [2.179779, 41.464694], [2.180387, 41.464812], [2.180419, 41.464842], [2.180418, 41.464912], [2.179886, 41.465685], [2.179988, 41.465819], [2.180078, 41.465903], [2.180152, 41.465949], [2.180185, 41.465969], [2.180194, 41.466044], [2.18024, 41.466043], [2.180268, 41.466174], [2.180302, 41.466183], [2.180367, 41.466406], [2.180462, 41.466515], [2.180483, 41.466653], [2.180353, 41.466631], [2.180062, 41.466272], [2.179594, 41.466018], [2.17956, 41.466009], [2.17951, 41.466005], [2.179432, 41.466021], [2.179076, 41.466423], [2.179025, 41.466494], [2.178925, 41.466753], [2.178897, 41.467326], [2.178867, 41.467643], [2.178875, 41.467756], [2.178916, 41.46792], [2.17969, 41.467579], [2.180631, 41.467711], [2.180765, 41.467716], [2.180968, 41.467724], [2.181585, 41.467825], [2.182002, 41.467949], [2.182386, 41.467994], [2.182476, 41.467995], [2.182733, 41.468032], [2.182765, 41.468087], [2.183005, 41.468147], [2.18311, 41.468148], [2.183467, 41.468221], [2.183621, 41.468249], [2.183804, 41.468272], [2.183996, 41.468282], [2.184234, 41.468263], [2.184445, 41.468225], [2.184579, 41.468188], [2.184799, 41.468042], [2.185088, 41.467896], [2.185478, 41.467729], [2.186153, 41.467728], [2.186288, 41.467719], [2.186273, 41.467849], [2.186374, 41.467832], [2.187011, 41.467873], [2.187031, 41.467875], [2.187162, 41.466402], [2.187148, 41.466044], [2.187346, 41.463677], [2.187471, 41.462157], [2.187458, 41.462148], [2.187514, 41.461364], [2.187603, 41.460318], [2.187679, 41.459831], [2.187781, 41.459275], [2.187962, 41.458737], [2.188067, 41.458462], [2.188239, 41.45815], [2.188448, 41.457807], [2.188643, 41.457626], [2.18886, 41.457357], [2.188433, 41.457126], [2.18824, 41.457128], [2.187784, 41.457011], [2.187735, 41.456976], [2.187817, 41.456883], [2.188051, 41.456568], [2.188228, 41.456283], [2.1883, 41.45615], [2.188403, 41.45594], [2.188467, 41.455788], [2.188501, 41.455707], [2.188564, 41.455548], [2.188629, 41.455364], [2.188744, 41.455025], [2.188613, 41.454998], [2.188438, 41.454962], [2.188421, 41.45501], [2.188387, 41.455116], [2.188316, 41.45533], [2.18824, 41.455533], [2.188162, 41.455719], [2.188089, 41.455882], [2.187945, 41.456149], [2.187852, 41.456305], [2.187731, 41.456487], [2.187601, 41.456666], [2.18749, 41.4568], [2.187431, 41.456871], [2.187265, 41.457048], [2.187046, 41.457258], [2.186779, 41.457487], [2.18658, 41.457637], [2.186299, 41.457831], [2.185868, 41.458108], [2.185507, 41.458325], [2.185251, 41.45848], [2.184979, 41.458643], [2.184703, 41.458814], [2.184324, 41.459058], [2.184091, 41.459215], [2.183836, 41.459392], [2.18361, 41.459555], [2.183534, 41.459611], [2.183412, 41.459701], [2.183226, 41.459841], [2.183056, 41.459973], [2.18288, 41.460114], [2.182631, 41.460318], [2.182396, 41.460522], [2.182214, 41.460687], [2.182003, 41.460889], [2.181802, 41.461092], [2.181529, 41.461396], [2.181383, 41.461579]]]]
    },
    "properties": {
      "neighbourhood": "Vallbona",
      "neighbourhood_group": "Nou Barris"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.190663, 41.457292], [2.190837, 41.457155], [2.190884, 41.457175], [2.191504, 41.456695], [2.192795, 41.455742], [2.194667, 41.454406], [2.19464, 41.454377], [2.195351, 41.453884], [2.195726, 41.45361], [2.196488, 41.453054], [2.196768, 41.452893], [2.197492, 41.452397], [2.198078, 41.451932], [2.198935, 41.451242], [2.199488, 41.450796], [2.200969, 41.449346], [2.201336, 41.449037], [2.198183, 41.447947], [2.19722, 41.447643], [2.196804, 41.447494], [2.196468, 41.447356], [2.196244, 41.447281], [2.195792, 41.447601], [2.195685, 41.447604], [2.195632, 41.447606], [2.195579, 41.447608], [2.195554, 41.447609], [2.195475, 41.447614], [2.195402, 41.447619], [2.195331, 41.447624], [2.195235, 41.447631], [2.195141, 41.447637], [2.195047, 41.447642], [2.194965, 41.447646], [2.194872, 41.447648], [2.194757, 41.447647], [2.194666, 41.447643], [2.194563, 41.447634], [2.194483, 41.447624], [2.194344, 41.4476], [2.194206, 41.447568], [2.194089, 41.447537], [2.194074, 41.447533], [2.194043, 41.447524], [2.194019, 41.447517], [2.194, 41.447511], [2.193973, 41.447502], [2.193947, 41.447492], [2.193912, 41.447479], [2.193886, 41.447468], [2.193867, 41.44746], [2.193838, 41.447448], [2.193809, 41.447435], [2.193729, 41.447397], [2.193689, 41.447378], [2.193649, 41.447359], [2.193569, 41.44732], [2.193491, 41.447281], [2.193414, 41.447243], [2.193337, 41.447206], [2.193317, 41.447197], [2.193282, 41.447181], [2.193256, 41.447169], [2.193216, 41.447152], [2.193176, 41.447135], [2.193142, 41.447121], [2.193117, 41.447112], [2.193077, 41.447097], [2.193038, 41.447083], [2.192997, 41.447069], [2.192967, 41.447059], [2.192944, 41.447051], [2.19291, 41.447041], [2.192875, 41.44703], [2.192849, 41.447023], [2.192829, 41.447018], [2.192799, 41.447011], [2.192769, 41.447004], [2.192741, 41.446998], [2.192721, 41.446994], [2.192691, 41.446988], [2.19266, 41.446983], [2.192626, 41.446977], [2.192601, 41.446973], [2.192563, 41.446968], [2.192545, 41.446966], [2.192527, 41.446963], [2.192499, 41.44696], [2.192403, 41.446951], [2.191535, 41.446928], [2.19126, 41.446986], [2.190614, 41.446973], [2.189802, 41.446976], [2.189625, 41.446977], [2.187719, 41.446994], [2.187706, 41.446994], [2.187739, 41.447043], [2.18821, 41.448604], [2.188313, 41.448897], [2.188407, 41.449166], [2.188471, 41.449386], [2.188626, 41.450001], [2.188792, 41.450826], [2.188843, 41.451331], [2.188858, 41.451466], [2.188911, 41.452051], [2.188926, 41.452635], [2.18893, 41.452725], [2.18886, 41.453305], [2.188776, 41.453789], [2.18855, 41.454608], [2.188438, 41.454962], [2.188613, 41.454998], [2.188744, 41.455025], [2.188629, 41.455364], [2.188564, 41.455548], [2.188501, 41.455707], [2.188467, 41.455788], [2.188403, 41.45594], [2.1883, 41.45615], [2.188228, 41.456283], [2.188051, 41.456568], [2.187817, 41.456883], [2.187735, 41.456976], [2.187784, 41.457011], [2.18824, 41.457128], [2.188433, 41.457126], [2.18886, 41.457357], [2.188643, 41.457626], [2.188448, 41.457807], [2.188239, 41.45815], [2.188067, 41.458462], [2.187962, 41.458737], [2.187781, 41.459275], [2.187679, 41.459831], [2.187603, 41.460318], [2.187514, 41.461364], [2.187458, 41.462148], [2.187471, 41.462157], [2.187671, 41.462098], [2.187736, 41.461632], [2.187863, 41.461193], [2.188127, 41.460517], [2.188338, 41.460091], [2.188733, 41.459469], [2.189152, 41.458924], [2.189674, 41.458367], [2.190059, 41.458005], [2.189974, 41.457958], [2.190176, 41.457735], [2.190677, 41.457322], [2.190663, 41.457292]]]]
    },
    "properties": {
      "neighbourhood": "la Trinitat Vella",
      "neighbourhood_group": "Sant Andreu"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.195792, 41.447601], [2.196244, 41.447281], [2.196468, 41.447356], [2.196804, 41.447494], [2.19722, 41.447643], [2.196634, 41.445719], [2.196343, 41.444817], [2.196157, 41.444208], [2.195939, 41.443545], [2.195614, 41.442521], [2.19463, 41.439757], [2.194034, 41.437908], [2.193722, 41.437067], [2.193663, 41.436779], [2.193627, 41.436486], [2.193638, 41.43601], [2.19367, 41.435731], [2.193793, 41.435279], [2.193914, 41.434979], [2.193958, 41.434869], [2.194095, 41.434614], [2.194515, 41.43402], [2.194929, 41.433522], [2.19535, 41.432883], [2.19549, 41.432683], [2.195687, 41.432308], [2.195852, 41.431971], [2.196161, 41.431361], [2.196187, 41.431306], [2.19622, 41.431204], [2.196244, 41.431119], [2.196263, 41.431052], [2.196289, 41.430976], [2.196308, 41.430919], [2.196317, 41.430844], [2.196332, 41.430759], [2.196346, 41.43068], [2.196357, 41.430619], [2.196373, 41.430531], [2.196388, 41.430434], [2.196399, 41.430342], [2.196408, 41.430249], [2.196416, 41.430132], [2.19642, 41.430034], [2.196423, 41.42995], [2.196423, 41.42988], [2.19642, 41.429762], [2.196404, 41.429269], [2.196305, 41.428272], [2.19629, 41.428086], [2.196223, 41.427721], [2.19614, 41.42746], [2.195951, 41.426962], [2.195683, 41.427113], [2.195352, 41.427257], [2.195284, 41.427288], [2.193699, 41.428013], [2.191552, 41.427803], [2.191005, 41.427749], [2.190893, 41.427748], [2.190748, 41.427747], [2.190729, 41.427748], [2.190457, 41.427751], [2.190436, 41.427753], [2.190414, 41.427756], [2.190392, 41.427759], [2.190371, 41.427763], [2.190348, 41.427768], [2.190237, 41.42779], [2.190147, 41.427807], [2.189399, 41.42797], [2.189269, 41.427994], [2.189238, 41.428], [2.189203, 41.428006], [2.189138, 41.428021], [2.189073, 41.428037], [2.188981, 41.428063], [2.18894, 41.428076], [2.188871, 41.428101], [2.188804, 41.428129], [2.188738, 41.428159], [2.188673, 41.428192], [2.188611, 41.428224], [2.188095, 41.428482], [2.188082, 41.428489], [2.188011, 41.42852], [2.187938, 41.428548], [2.187862, 41.428572], [2.187785, 41.428594], [2.187707, 41.428612], [2.187629, 41.428627], [2.187554, 41.428638], [2.187481, 41.428646], [2.187396, 41.428651], [2.187308, 41.428655], [2.18601, 41.428667], [2.184516, 41.428681], [2.184113, 41.428685], [2.183134, 41.430016], [2.18304, 41.430207], [2.18303, 41.430222], [2.182964, 41.430317], [2.182738, 41.430639], [2.182608, 41.431045], [2.182657, 41.431546], [2.182723, 41.431828], [2.182898, 41.432247], [2.18313, 41.432499], [2.183319, 41.43307], [2.183683, 41.434171], [2.183759, 41.434402], [2.183938, 41.43482], [2.183968, 41.434917], [2.1842, 41.435678], [2.184231, 41.435779], [2.184317, 41.436058], [2.184486, 41.436632], [2.184594, 41.436993], [2.18479, 41.43764], [2.185041, 41.438491], [2.185116, 41.438747], [2.185458, 41.439736], [2.185811, 41.440751], [2.186315, 41.442191], [2.186312, 41.442241], [2.186302, 41.44235], [2.186291, 41.442472], [2.186491, 41.443095], [2.18676, 41.443936], [2.187365, 41.445821], [2.187635, 41.446888], [2.187706, 41.446994], [2.187719, 41.446994], [2.189625, 41.446977], [2.189802, 41.446976], [2.190614, 41.446973], [2.19126, 41.446986], [2.191535, 41.446928], [2.192403, 41.446951], [2.192499, 41.44696], [2.192527, 41.446963], [2.192545, 41.446966], [2.192563, 41.446968], [2.192601, 41.446973], [2.192626, 41.446977], [2.19266, 41.446983], [2.192691, 41.446988], [2.192721, 41.446994], [2.192741, 41.446998], [2.192769, 41.447004], [2.192799, 41.447011], [2.192829, 41.447018], [2.192849, 41.447023], [2.192875, 41.44703], [2.19291, 41.447041], [2.192944, 41.447051], [2.192967, 41.447059], [2.192997, 41.447069], [2.193038, 41.447083], [2.193077, 41.447097], [2.193117, 41.447112], [2.193142, 41.447121], [2.193176, 41.447135], [2.193216, 41.447152], [2.193256, 41.447169], [2.193282, 41.447181], [2.193317, 41.447197], [2.193337, 41.447206], [2.193414, 41.447243], [2.193491, 41.447281], [2.193569, 41.44732], [2.193649, 41.447359], [2.193689, 41.447378], [2.193729, 41.447397], [2.193809, 41.447435], [2.193838, 41.447448], [2.193867, 41.44746], [2.193886, 41.447468], [2.193912, 41.447479], [2.193947, 41.447492], [2.193973, 41.447502], [2.194, 41.447511], [2.194019, 41.447517], [2.194043, 41.447524], [2.194074, 41.447533], [2.194089, 41.447537], [2.194206, 41.447568], [2.194344, 41.4476], [2.194483, 41.447624], [2.194563, 41.447634], [2.194666, 41.447643], [2.194757, 41.447647], [2.194872, 41.447648], [2.194965, 41.447646], [2.195047, 41.447642], [2.195141, 41.447637], [2.195235, 41.447631], [2.195331, 41.447624], [2.195402, 41.447619], [2.195475, 41.447614], [2.195554, 41.447609], [2.195579, 41.447608], [2.195632, 41.447606], [2.195685, 41.447604], [2.195792, 41.447601]]]]
    },
    "properties": {
      "neighbourhood": "Sant Andreu",
      "neighbourhood_group": "Sant Andreu"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.190729, 41.427748], [2.190748, 41.427747], [2.190893, 41.427748], [2.191005, 41.427749], [2.191552, 41.427803], [2.193699, 41.428013], [2.195284, 41.427288], [2.195352, 41.427257], [2.195683, 41.427113], [2.195951, 41.426962], [2.196222, 41.42681], [2.196363, 41.426741], [2.196555, 41.426621], [2.195912, 41.424481], [2.195622, 41.422727], [2.195622, 41.422682], [2.195549, 41.422485], [2.195466, 41.422363], [2.195205, 41.422393], [2.195001, 41.421765], [2.194565, 41.420566], [2.194053, 41.419004], [2.193334, 41.417201], [2.193206, 41.416936], [2.192417, 41.414687], [2.192379, 41.414598], [2.192086, 41.414802], [2.191205, 41.415414], [2.191142, 41.415543], [2.191351, 41.416266], [2.191435, 41.41672], [2.191427, 41.416977], [2.19126, 41.417105], [2.189009, 41.418829], [2.18694, 41.420413], [2.186832, 41.420496], [2.18395, 41.422702], [2.183954, 41.423192], [2.184118, 41.424094], [2.184217, 41.424788], [2.184221, 41.425478], [2.184229, 41.426834], [2.184312, 41.427658], [2.184361, 41.427657], [2.184705, 41.427862], [2.184119, 41.428677], [2.184113, 41.428685], [2.184516, 41.428681], [2.18601, 41.428667], [2.187308, 41.428655], [2.187396, 41.428651], [2.187481, 41.428646], [2.187554, 41.428638], [2.187629, 41.428627], [2.187707, 41.428612], [2.187785, 41.428594], [2.187862, 41.428572], [2.187938, 41.428548], [2.188011, 41.42852], [2.188082, 41.428489], [2.188095, 41.428482], [2.188611, 41.428224], [2.188673, 41.428192], [2.188738, 41.428159], [2.188804, 41.428129], [2.188871, 41.428101], [2.18894, 41.428076], [2.188981, 41.428063], [2.189073, 41.428037], [2.189138, 41.428021], [2.189203, 41.428006], [2.189238, 41.428], [2.189269, 41.427994], [2.189399, 41.42797], [2.190147, 41.427807], [2.190237, 41.42779], [2.190348, 41.427768], [2.190371, 41.427763], [2.190392, 41.427759], [2.190414, 41.427756], [2.190436, 41.427753], [2.190457, 41.427751], [2.190729, 41.427748]]]]
    },
    "properties": {
      "neighbourhood": "la Sagrera",
      "neighbourhood_group": "Sant Andreu"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.182236, 41.420532], [2.180733, 41.419421], [2.180829, 41.419803], [2.180857, 41.420022], [2.18084, 41.420196], [2.18077, 41.420394], [2.180656, 41.420568], [2.180314, 41.42096], [2.179796, 41.42151], [2.179756, 41.421553], [2.179443, 41.421888], [2.178989, 41.422375], [2.178633, 41.422761], [2.178273, 41.423162], [2.177653, 41.423817], [2.176971, 41.424543], [2.176828, 41.424708], [2.176558, 41.425031], [2.176178, 41.42547], [2.177381, 41.425516], [2.17732, 41.426832], [2.177246, 41.426913], [2.177244, 41.427082], [2.177251, 41.427144], [2.17725, 41.427762], [2.177259, 41.427807], [2.177338, 41.42819], [2.178949, 41.427944], [2.179197, 41.427902], [2.179339, 41.427878], [2.179829, 41.427834], [2.18255, 41.427726], [2.184312, 41.427658], [2.184229, 41.426834], [2.184221, 41.425478], [2.184217, 41.424788], [2.184118, 41.424094], [2.183954, 41.423192], [2.18395, 41.422702], [2.183948, 41.422498], [2.183944, 41.421795], [2.183346, 41.421353], [2.182236, 41.420532]]]]
    },
    "properties": {
      "neighbourhood": "el Congrés i els Indians",
      "neighbourhood_group": "Sant Andreu"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.189009, 41.418829], [2.19126, 41.417105], [2.191427, 41.416977], [2.191435, 41.41672], [2.191351, 41.416266], [2.191142, 41.415543], [2.191205, 41.415414], [2.190956, 41.41522], [2.19014, 41.414585], [2.188983, 41.413697], [2.187893, 41.414548], [2.18755, 41.414824], [2.186901, 41.415299], [2.186883, 41.415312], [2.185674, 41.416241], [2.185521, 41.416368], [2.185127, 41.416655], [2.184799, 41.416901], [2.184435, 41.417184], [2.183366, 41.417987], [2.182204, 41.417147], [2.181092, 41.416338], [2.180725, 41.416063], [2.180465, 41.415892], [2.180437, 41.416318], [2.180428, 41.416527], [2.180409, 41.417114], [2.180425, 41.417566], [2.180445, 41.417844], [2.180524, 41.418407], [2.180532, 41.418463], [2.180569, 41.418688], [2.180579, 41.418747], [2.180701, 41.419275], [2.180733, 41.419421], [2.182236, 41.420532], [2.183346, 41.421353], [2.183944, 41.421795], [2.183948, 41.422498], [2.18395, 41.422702], [2.186832, 41.420496], [2.18694, 41.420413], [2.189009, 41.418829]]]]
    },
    "properties": {
      "neighbourhood": "Navas",
      "neighbourhood_group": "Sant Andreu"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.184248, 41.406713], [2.183379, 41.406063], [2.183104, 41.406275], [2.182257, 41.406925], [2.181127, 41.407781], [2.18003, 41.408604], [2.178939, 41.409464], [2.178853, 41.409501], [2.177737, 41.410332], [2.177159, 41.410779], [2.176602, 41.411211], [2.17603, 41.41166], [2.175436, 41.412071], [2.176659, 41.41298], [2.17768, 41.413738], [2.178856, 41.41459], [2.179026, 41.414713], [2.179564, 41.415107], [2.180246, 41.415607], [2.180465, 41.415892], [2.180725, 41.416063], [2.181092, 41.416338], [2.182204, 41.417147], [2.183366, 41.417987], [2.184435, 41.417184], [2.184799, 41.416901], [2.185127, 41.416655], [2.185521, 41.416368], [2.185674, 41.416241], [2.186883, 41.415312], [2.186901, 41.415299], [2.186928, 41.414265], [2.186925, 41.413933], [2.18691, 41.412222], [2.186909, 41.412125], [2.186907, 41.411958], [2.186878, 41.408679], [2.186127, 41.408118], [2.185746, 41.407834], [2.184554, 41.406942], [2.184248, 41.406713]]]]
    },
    "properties": {
      "neighbourhood": "el Camp de l'Arpa del Clot",
      "neighbourhood_group": "Sant Martí"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.213445, 41.410672], [2.214146, 41.410143], [2.216031, 41.410615], [2.219234, 41.411416], [2.219571, 41.411155], [2.219213, 41.410766], [2.220787, 41.409945], [2.220678, 41.409827], [2.220859, 41.409455], [2.220896, 41.409406], [2.220944, 41.409344], [2.221012, 41.409289], [2.221035, 41.409271], [2.221041, 41.409267], [2.221047, 41.409262], [2.221053, 41.409258], [2.221059, 41.409253], [2.221065, 41.409249], [2.221071, 41.409245], [2.221078, 41.409241], [2.221084, 41.409237], [2.221091, 41.409233], [2.221097, 41.409229], [2.221104, 41.409225], [2.22111, 41.409221], [2.221117, 41.409217], [2.221124, 41.409213], [2.22113, 41.40921], [2.221133, 41.409209], [2.221137, 41.409206], [2.221144, 41.409203], [2.221151, 41.409199], [2.221158, 41.409196], [2.221165, 41.409192], [2.221172, 41.409189], [2.221179, 41.409186], [2.221187, 41.409182], [2.221194, 41.409179], [2.221201, 41.409176], [2.221209, 41.409173], [2.221216, 41.40917], [2.221223, 41.409167], [2.221231, 41.409165], [2.221238, 41.409162], [2.221246, 41.409159], [2.221254, 41.409156], [2.221261, 41.409154], [2.221269, 41.409151], [2.221277, 41.409149], [2.221284, 41.409147], [2.221292, 41.409144], [2.2213, 41.409142], [2.221308, 41.40914], [2.221316, 41.409138], [2.221324, 41.409136], [2.221332, 41.409134], [2.22134, 41.409132], [2.221348, 41.40913], [2.221356, 41.409128], [2.221364, 41.409127], [2.221372, 41.409125], [2.22138, 41.409123], [2.221388, 41.409122], [2.221396, 41.409121], [2.221405, 41.409119], [2.221413, 41.409118], [2.221421, 41.409117], [2.221429, 41.409116], [2.221437, 41.409115], [2.221446, 41.409114], [2.221454, 41.409113], [2.221462, 41.409112], [2.221471, 41.409111], [2.221479, 41.40911], [2.221487, 41.40911], [2.221496, 41.409109], [2.221504, 41.409109], [2.221512, 41.409108], [2.221521, 41.409108], [2.221529, 41.409108], [2.221537, 41.409108], [2.221546, 41.409107], [2.221554, 41.409107], [2.221563, 41.409107], [2.221571, 41.409108], [2.221579, 41.409108], [2.221588, 41.409108], [2.221596, 41.409108], [2.221604, 41.409109], [2.221613, 41.409109], [2.221621, 41.40911], [2.221626, 41.40911], [2.221629, 41.40911], [2.221638, 41.409111], [2.221646, 41.409112], [2.221654, 41.409112], [2.221663, 41.409113], [2.221669, 41.409114], [2.221601, 41.409104], [2.221481, 41.409087], [2.221431, 41.409079], [2.22138, 41.409071], [2.221281, 41.40905], [2.221236, 41.409036], [2.221193, 41.40902], [2.22115, 41.409002], [2.22111, 41.408982], [2.221033, 41.408937], [2.220989, 41.408905], [2.220949, 41.408872], [2.220908, 41.408835], [2.220871, 41.408798], [2.220836, 41.40876], [2.220804, 41.40872], [2.220728, 41.408637], [2.22065, 41.408555], [2.220569, 41.408474], [2.22054, 41.408385], [2.220533, 41.408362], [2.220432, 41.408236], [2.220327, 41.408112], [2.220129, 41.407893], [2.219995, 41.407753], [2.219857, 41.407616], [2.219603, 41.407383], [2.219369, 41.407187], [2.219147, 41.407005], [2.218835, 41.406766], [2.219293, 41.406426], [2.220355, 41.40564], [2.220362, 41.405635], [2.22168, 41.404659], [2.222277, 41.404217], [2.222727, 41.404953], [2.223293, 41.405458], [2.223606, 41.405212], [2.223083, 41.40473], [2.222475, 41.403728], [2.222112, 41.403433], [2.221902, 41.403603], [2.222032, 41.403835], [2.220053, 41.405303], [2.217867, 41.404082], [2.217107, 41.403071], [2.218488, 41.402149], [2.218269, 41.401964], [2.216846, 41.402915], [2.215908, 41.4022], [2.21427, 41.400019], [2.215719, 41.398946], [2.215318, 41.39865], [2.214208, 41.399472], [2.211654, 41.397525], [2.210721, 41.396283], [2.212038, 41.395249], [2.211486, 41.394849], [2.211466, 41.394864], [2.210918, 41.395278], [2.210729, 41.395438], [2.210533, 41.395592], [2.210329, 41.395741], [2.209983, 41.395972], [2.209258, 41.396527], [2.209795, 41.396929], [2.209971, 41.397001], [2.210135, 41.397002], [2.210339, 41.396922], [2.210967, 41.397591], [2.209573, 41.398604], [2.209496, 41.398545], [2.206867, 41.400439], [2.207859, 41.401256], [2.209994, 41.403016], [2.20851, 41.404144], [2.207388, 41.404997], [2.206722, 41.405503], [2.20512, 41.406721], [2.203967, 41.407597], [2.207351, 41.408446], [2.211884, 41.41185], [2.213445, 41.410672]]]]
    },
    "properties": {
      "neighbourhood": "Diagonal Mar i el Front Marítim del Poblenou",
      "neighbourhood_group": "Sant Martí"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.223268, 41.412019], [2.225858, 41.410966], [2.227033, 41.410489], [2.227205, 41.410419], [2.22922, 41.409601], [2.226146, 41.405313], [2.224704, 41.40638], [2.224416, 41.405944], [2.223653, 41.40623], [2.22168, 41.404659], [2.220362, 41.405635], [2.220355, 41.40564], [2.219293, 41.406426], [2.218835, 41.406766], [2.219147, 41.407005], [2.219369, 41.407187], [2.219603, 41.407383], [2.219857, 41.407616], [2.219995, 41.407753], [2.220129, 41.407893], [2.220327, 41.408112], [2.220432, 41.408236], [2.220533, 41.408362], [2.22054, 41.408385], [2.220569, 41.408474], [2.22065, 41.408555], [2.220728, 41.408637], [2.220804, 41.40872], [2.220836, 41.40876], [2.220871, 41.408798], [2.220908, 41.408835], [2.220949, 41.408872], [2.220989, 41.408905], [2.221033, 41.408937], [2.22111, 41.408982], [2.22115, 41.409002], [2.221193, 41.40902], [2.221236, 41.409036], [2.221281, 41.40905], [2.22138, 41.409071], [2.221431, 41.409079], [2.221481, 41.409087], [2.221601, 41.409104], [2.221669, 41.409114], [2.221663, 41.409113], [2.221654, 41.409112], [2.221646, 41.409112], [2.221638, 41.409111], [2.221629, 41.40911], [2.221626, 41.40911], [2.221621, 41.40911], [2.221613, 41.409109], [2.221604, 41.409109], [2.221596, 41.409108], [2.221588, 41.409108], [2.221579, 41.409108], [2.221571, 41.409108], [2.221563, 41.409107], [2.221554, 41.409107], [2.221546, 41.409107], [2.221537, 41.409108], [2.221529, 41.409108], [2.221521, 41.409108], [2.221512, 41.409108], [2.221504, 41.409109], [2.221496, 41.409109], [2.221487, 41.40911], [2.221479, 41.40911], [2.221471, 41.409111], [2.221462, 41.409112], [2.221454, 41.409113], [2.221446, 41.409114], [2.221437, 41.409115], [2.221429, 41.409116], [2.221421, 41.409117], [2.221413, 41.409118], [2.221405, 41.409119], [2.221396, 41.409121], [2.221388, 41.409122], [2.22138, 41.409123], [2.221372, 41.409125], [2.221364, 41.409127], [2.221356, 41.409128], [2.221348, 41.40913], [2.22134, 41.409132], [2.221332, 41.409134], [2.221324, 41.409136], [2.221316, 41.409138], [2.221308, 41.40914], [2.2213, 41.409142], [2.221292, 41.409144], [2.221284, 41.409147], [2.221277, 41.409149], [2.221269, 41.409151], [2.221261, 41.409154], [2.221254, 41.409156], [2.221246, 41.409159], [2.221238, 41.409162], [2.221231, 41.409165], [2.221223, 41.409167], [2.221216, 41.40917], [2.221209, 41.409173], [2.221201, 41.409176], [2.221194, 41.409179], [2.221187, 41.409182], [2.221179, 41.409186], [2.221172, 41.409189], [2.221165, 41.409192], [2.221158, 41.409196], [2.221151, 41.409199], [2.221144, 41.409203], [2.221137, 41.409206], [2.221133, 41.409209], [2.22113, 41.40921], [2.221124, 41.409213], [2.221117, 41.409217], [2.22111, 41.409221], [2.221104, 41.409225], [2.221097, 41.409229], [2.221091, 41.409233], [2.221084, 41.409237], [2.221078, 41.409241], [2.221071, 41.409245], [2.221065, 41.409249], [2.221059, 41.409253], [2.221053, 41.409258], [2.221047, 41.409262], [2.221041, 41.409267], [2.221035, 41.409271], [2.221012, 41.409289], [2.220944, 41.409344], [2.220896, 41.409406], [2.220859, 41.409455], [2.220678, 41.409827], [2.220787, 41.409945], [2.219213, 41.410766], [2.219571, 41.411155], [2.219234, 41.411416], [2.216031, 41.410615], [2.214146, 41.410143], [2.213445, 41.410672], [2.211884, 41.41185], [2.20967, 41.413521], [2.207277, 41.415326], [2.208302, 41.416548], [2.209842, 41.418504], [2.208429, 41.419566], [2.209671, 41.420492], [2.210681, 41.421245], [2.211494, 41.421851], [2.211635, 41.42141], [2.212357, 41.420864], [2.212647, 41.42083], [2.21282, 41.420778], [2.21291, 41.420751], [2.213224, 41.420575], [2.213763, 41.42031], [2.213929, 41.420219], [2.213962, 41.420186], [2.214016, 41.420163], [2.214402, 41.419923], [2.21456, 41.419812], [2.21505, 41.419441], [2.215132, 41.419377], [2.215275, 41.419264], [2.216114, 41.418632], [2.216349, 41.418482], [2.21645, 41.418406], [2.216549, 41.418331], [2.216641, 41.418253], [2.216759, 41.418134], [2.216868, 41.41801], [2.21717, 41.417619], [2.217437, 41.417315], [2.217758, 41.416983], [2.218005, 41.416659], [2.218187, 41.416522], [2.218253, 41.416479], [2.218335, 41.416392], [2.218392, 41.416345], [2.218571, 41.416216], [2.219096, 41.415904], [2.219441, 41.415632], [2.21949, 41.415573], [2.219783, 41.415277], [2.219916, 41.415107], [2.220161, 41.414721], [2.220338, 41.414486], [2.220553, 41.414273], [2.220835, 41.414043], [2.221126, 41.413903], [2.221306, 41.413773], [2.221389, 41.413665], [2.221404, 41.413602], [2.221412, 41.413558], [2.221071, 41.413184], [2.22104, 41.413123], [2.221052, 41.413103], [2.221114, 41.413059], [2.22232, 41.412551], [2.222509, 41.412473], [2.222596, 41.412437], [2.222801, 41.412353], [2.222811, 41.412348], [2.222897, 41.412192], [2.223051, 41.412123], [2.223143, 41.412082], [2.223268, 41.412019]]]]
    },
    "properties": {
      "neighbourhood": "el Besòs i el Maresme",
      "neighbourhood_group": "Sant Martí"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.195699, 41.405522], [2.193798, 41.405043], [2.192681, 41.405887], [2.192252, 41.406211], [2.191437, 41.406827], [2.192556, 41.407667], [2.194798, 41.40935], [2.197095, 41.411075], [2.198225, 41.411923], [2.199358, 41.412774], [2.201631, 41.41448], [2.202779, 41.415342], [2.205033, 41.417033], [2.206157, 41.417871], [2.207293, 41.418719], [2.208429, 41.419566], [2.209842, 41.418504], [2.208302, 41.416548], [2.207277, 41.415326], [2.20967, 41.413521], [2.211884, 41.41185], [2.207351, 41.408446], [2.203967, 41.407597], [2.198883, 41.406322], [2.196602, 41.40575], [2.195699, 41.405522]]]]
    },
    "properties": {
      "neighbourhood": "Provençals del Poblenou",
      "neighbourhood_group": "Sant Martí"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.198225, 41.411923], [2.197095, 41.411075], [2.194683, 41.412877], [2.193557, 41.413718], [2.192379, 41.414598], [2.192417, 41.414687], [2.193206, 41.416936], [2.193334, 41.417201], [2.194053, 41.419004], [2.194565, 41.420566], [2.195001, 41.421765], [2.195205, 41.422393], [2.195466, 41.422363], [2.195919, 41.422284], [2.197239, 41.422055], [2.197462, 41.422015], [2.197824, 41.421949], [2.197944, 41.421928], [2.198075, 41.421903], [2.19818, 41.421884], [2.198281, 41.421864], [2.198848, 41.421733], [2.199281, 41.421403], [2.200407, 41.420547], [2.201531, 41.419693], [2.202645, 41.418846], [2.20378, 41.417983], [2.204409, 41.417505], [2.205033, 41.417033], [2.202779, 41.415342], [2.201631, 41.41448], [2.199358, 41.412774], [2.198225, 41.411923]]]]
    },
    "properties": {
      "neighbourhood": "Sant Martí de Provençals",
      "neighbourhood_group": "Sant Martí"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.207464, 41.425039], [2.207788, 41.425017], [2.207865, 41.42503], [2.208116, 41.425083], [2.208452, 41.425207], [2.208508, 41.42518], [2.208763, 41.425114], [2.209015, 41.425051], [2.209138, 41.424957], [2.209168, 41.424978], [2.209181, 41.42497], [2.209228, 41.424817], [2.209366, 41.424491], [2.209429, 41.424281], [2.209612, 41.424144], [2.209638, 41.424159], [2.209717, 41.4241], [2.209822, 41.424046], [2.20992, 41.424014], [2.210271, 41.423856], [2.210411, 41.423786], [2.210555, 41.423693], [2.210733, 41.42356], [2.21091, 41.423381], [2.210985, 41.423297], [2.211044, 41.423205], [2.211111, 41.422989], [2.211149, 41.422834], [2.211301, 41.422368], [2.211363, 41.422203], [2.211485, 41.421879], [2.211494, 41.421851], [2.210681, 41.421245], [2.209671, 41.420492], [2.208429, 41.419566], [2.207293, 41.418719], [2.206157, 41.417871], [2.205033, 41.417033], [2.204409, 41.417505], [2.20378, 41.417983], [2.202645, 41.418846], [2.201531, 41.419693], [2.200407, 41.420547], [2.199281, 41.421403], [2.198848, 41.421733], [2.198281, 41.421864], [2.19818, 41.421884], [2.198075, 41.421903], [2.197944, 41.421928], [2.197824, 41.421949], [2.197462, 41.422015], [2.197239, 41.422055], [2.195919, 41.422284], [2.195466, 41.422363], [2.195549, 41.422485], [2.195622, 41.422682], [2.195622, 41.422727], [2.195912, 41.424481], [2.196555, 41.426621], [2.196363, 41.426741], [2.196441, 41.427102], [2.196587, 41.427433], [2.197019, 41.42827], [2.197143, 41.428507], [2.19734, 41.428885], [2.197605, 41.429201], [2.197795, 41.429388], [2.198012, 41.429554], [2.198559, 41.429849], [2.199278, 41.430088], [2.199674, 41.430163], [2.200158, 41.430198], [2.200846, 41.430159], [2.201229, 41.43009], [2.201894, 41.429911], [2.202311, 41.429753], [2.202787, 41.429598], [2.203481, 41.429308], [2.203538, 41.429285], [2.205218, 41.42851], [2.205594, 41.428337], [2.207211, 41.427592], [2.207167, 41.427506], [2.207134, 41.427359], [2.207074, 41.427155], [2.207043, 41.427086], [2.207022, 41.427056], [2.206869, 41.426881], [2.206859, 41.426858], [2.206829, 41.426815], [2.20647, 41.426423], [2.206351, 41.426093], [2.206303, 41.426004], [2.206169, 41.425867], [2.206068, 41.425598], [2.20617, 41.425537], [2.206256, 41.425531], [2.206378, 41.425498], [2.206476, 41.425472], [2.206899, 41.425343], [2.20727, 41.425166], [2.207464, 41.425039]]]]
    },
    "properties": {
      "neighbourhood": "la Verneda i la Pau",
      "neighbourhood_group": "Sant Martí"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.075218, 41.416049], [2.0752, 41.416033], [2.074436, 41.41533], [2.074038, 41.41504], [2.072134, 41.412734], [2.070517, 41.412208], [2.070713, 41.412667], [2.070603, 41.413356], [2.070369, 41.413978], [2.070423, 41.414218], [2.071111, 41.415065], [2.072898, 41.415867], [2.073601, 41.416609], [2.073915, 41.417135], [2.073958, 41.417574], [2.073961, 41.417594], [2.07398, 41.417579], [2.074126, 41.417258], [2.074045, 41.417], [2.075218, 41.416049]]]]
    },
    "properties": {
      "neighbourhood": "Vallvidrera, el Tibidabo i les Planes",
      "neighbourhood_group": "Sarrià-Sant Gervasi"
    }
  }, {
    "type": "Feature",
    "geometry": {
      "type": "MultiPolygon",
      "coordinates": [[[[2.070525, 41.419069], [2.070498, 41.419063], [2.06811, 41.418494], [2.06779, 41.418407], [2.067495, 41.418291], [2.067205, 41.418159], [2.066861, 41.418137], [2.065013, 41.418163], [2.064239, 41.417872], [2.064942, 41.416627], [2.064729, 41.415623], [2.064219, 41.414105], [2.062074, 41.413461], [2.058894, 41.412548], [2.059455, 41.412249], [2.059716, 41.412092], [2.059901, 41.411951], [2.060046, 41.411804], [2.060151, 41.411637], [2.060225, 41.411478], [2.060412, 41.411325], [2.05807, 41.410006], [2.054677, 41.414], [2.055214, 41.414425], [2.055611, 41.414799], [2.056036, 41.415375], [2.056481, 41.415872], [2.05691, 41.416441], [2.056963, 41.416742], [2.057069, 41.417527], [2.057167, 41.417992], [2.057247, 41.41829], [2.05725, 41.418401], [2.057226, 41.418528], [2.057003, 41.418848], [2.056922, 41.419125], [2.056698, 41.419546], [2.056582, 41.420262], [2.05643, 41.42052], [2.056381, 41.420694], [2.056381, 41.42081], [2.056429, 41.420983], [2.056474, 41.421069], [2.056494, 41.421168], [2.056458, 41.421387], [2.056332, 41.421599], [2.056074, 41.421862], [2.055776, 41.422097], [2.05552, 41.422237], [2.055298, 41.422316], [2.05491, 41.422406], [2.054629, 41.42253], [2.054565, 41.422597], [2.054522, 41.422692], [2.05452, 41.422824], [2.054, 41.422743], [2.053839, 41.423029], [2.053611, 41.423315], [2.053396, 41.423537], [2.053199, 41.423668], [2.05311, 41.423697], [2.052917, 41.423708], [2.05285, 41.423736], [2.052698, 41.423848], [2.05247, 41.424108], [2.052554, 41.424161], [2.052878, 41.42441], [2.053137, 41.424593], [2.053495, 41.424749], [2.053923, 41.424823], [2.054451, 41.424953], [2.054943, 41.425087], [2.056554, 41.425654], [2.056899, 41.425792], [2.057286, 41.426031], [2.057554, 41.426149], [2.057715, 41.426237], [2.057815, 41.426389], [2.057889, 41.426583], [2.05786, 41.42712], [2.05792, 41.427595], [2.057985, 41.42783], [2.058311, 41.428665], [2.058343, 41.428799], [2.058344, 41.429141], [2.058302, 41.429668], [2.057579, 41.434627], [2.057625, 41.436161], [2.059735, 41.43622], [2.060056, 41.436246], [2.060115, 41.436249], [2.06015, 41.436224], [2.06018, 41.436192], [2.060181, 41.436128], [2.060119, 41.435995], [2.060059, 41.435438], [2.06, 41.435052], [2.059998, 41.434598], [2.060145, 41.434234], [2.060221, 41.433999], [2.060303, 41.433912], [2.060421, 41.433876], [2.060715, 41.433908], [2.061159, 41.434001], [2.062657, 41.434461], [2.063195, 41.432505], [2.063134, 41.432337], [2.063952, 41.432336], [2.064384, 41.432352], [2.06484, 41.432388], [2.06589, 41.432297], [2.068595, 41.432082], [2.067901, 41.429806], [2.067835, 41.429676], [2.067765, 41.429454], [2.067795, 41.42935], [2.067816, 41.429171], [2.067543, 41.428688], [2.067386, 41.428314], [2.06713, 41.428009], [2.066913, 41.427625], [2.066837, 41.427426], [2.066888, 41.427182], [2.067025, 41.426859], [2.067195, 41.426316], [2.069735, 41.425756], [2.071304, 41.42298], [2.070525, 41.419069]]]]
    },
    "properties": {
      "neighbourhood": "Vallvidrera, el Tibidabo i les Planes",
      "neighbourhood_group": "Sarrià-Sant Gervasi"
    }
  }]
};
},{}],"carte.js":[function(require,module,exports) {
"use strict";

var d3 = _interopRequireWildcard(require("d3"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

//  fichier json
var data = require('../neighbourhoods.json');

console.log(data); // taille forme svg

var WIDTH = 800;
var HEIGHT = 500;
var svg = d3.select('#chart').append('svg').attr('width', WIDTH).attr('height', HEIGHT);
d3.select("#chart").attr("align", "center"); // alignement du graphique

var projection = (0, d3.geoMercator)().fitExtent([[0, 0], [WIDTH, HEIGHT]], data); // centrer la carte sur les quartiers

var pathCreator = (0, d3.geoPath)().projection(projection);
svg.selectAll('path').data(data.features).enter().append('path').attr('d', pathCreator);
console.log('test');
},{"d3":"../../node_modules/d3/index.js","../neighbourhoods.json":"../neighbourhoods.json"}],"../../node_modules/parcel-bundler/src/builtins/hmr-runtime.js":[function(require,module,exports) {
var global = arguments[3];
var OVERLAY_ID = '__parcel__error__overlay__';
var OldModule = module.bundle.Module;

function Module(moduleName) {
  OldModule.call(this, moduleName);
  this.hot = {
    data: module.bundle.hotData,
    _acceptCallbacks: [],
    _disposeCallbacks: [],
    accept: function (fn) {
      this._acceptCallbacks.push(fn || function () {});
    },
    dispose: function (fn) {
      this._disposeCallbacks.push(fn);
    }
  };
  module.bundle.hotData = null;
}

module.bundle.Module = Module;
var checkedAssets, assetsToAccept;
var parent = module.bundle.parent;

if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {
  var hostname = "" || location.hostname;
  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';
  var ws = new WebSocket(protocol + '://' + hostname + ':' + "49771" + '/');

  ws.onmessage = function (event) {
    checkedAssets = {};
    assetsToAccept = [];
    var data = JSON.parse(event.data);

    if (data.type === 'update') {
      var handled = false;
      data.assets.forEach(function (asset) {
        if (!asset.isNew) {
          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);

          if (didAccept) {
            handled = true;
          }
        }
      }); // Enable HMR for CSS by default.

      handled = handled || data.assets.every(function (asset) {
        return asset.type === 'css' && asset.generated.js;
      });

      if (handled) {
        console.clear();
        data.assets.forEach(function (asset) {
          hmrApply(global.parcelRequire, asset);
        });
        assetsToAccept.forEach(function (v) {
          hmrAcceptRun(v[0], v[1]);
        });
      } else if (location.reload) {
        // `location` global exists in a web worker context but lacks `.reload()` function.
        location.reload();
      }
    }

    if (data.type === 'reload') {
      ws.close();

      ws.onclose = function () {
        location.reload();
      };
    }

    if (data.type === 'error-resolved') {
      console.log('[parcel] ✨ Error resolved');
      removeErrorOverlay();
    }

    if (data.type === 'error') {
      console.error('[parcel] 🚨  ' + data.error.message + '\n' + data.error.stack);
      removeErrorOverlay();
      var overlay = createErrorOverlay(data);
      document.body.appendChild(overlay);
    }
  };
}

function removeErrorOverlay() {
  var overlay = document.getElementById(OVERLAY_ID);

  if (overlay) {
    overlay.remove();
  }
}

function createErrorOverlay(data) {
  var overlay = document.createElement('div');
  overlay.id = OVERLAY_ID; // html encode message and stack trace

  var message = document.createElement('div');
  var stackTrace = document.createElement('pre');
  message.innerText = data.error.message;
  stackTrace.innerText = data.error.stack;
  overlay.innerHTML = '<div style="background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;">' + '<span style="background: red; padding: 2px 4px; border-radius: 2px;">ERROR</span>' + '<span style="top: 2px; margin-left: 5px; position: relative;">🚨</span>' + '<div style="font-size: 18px; font-weight: bold; margin-top: 20px;">' + message.innerHTML + '</div>' + '<pre>' + stackTrace.innerHTML + '</pre>' + '</div>';
  return overlay;
}

function getParents(bundle, id) {
  var modules = bundle.modules;

  if (!modules) {
    return [];
  }

  var parents = [];
  var k, d, dep;

  for (k in modules) {
    for (d in modules[k][1]) {
      dep = modules[k][1][d];

      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {
        parents.push(k);
      }
    }
  }

  if (bundle.parent) {
    parents = parents.concat(getParents(bundle.parent, id));
  }

  return parents;
}

function hmrApply(bundle, asset) {
  var modules = bundle.modules;

  if (!modules) {
    return;
  }

  if (modules[asset.id] || !bundle.parent) {
    var fn = new Function('require', 'module', 'exports', asset.generated.js);
    asset.isNew = !modules[asset.id];
    modules[asset.id] = [fn, asset.deps];
  } else if (bundle.parent) {
    hmrApply(bundle.parent, asset);
  }
}

function hmrAcceptCheck(bundle, id) {
  var modules = bundle.modules;

  if (!modules) {
    return;
  }

  if (!modules[id] && bundle.parent) {
    return hmrAcceptCheck(bundle.parent, id);
  }

  if (checkedAssets[id]) {
    return;
  }

  checkedAssets[id] = true;
  var cached = bundle.cache[id];
  assetsToAccept.push([bundle, id]);

  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    return true;
  }

  return getParents(global.parcelRequire, id).some(function (id) {
    return hmrAcceptCheck(global.parcelRequire, id);
  });
}

function hmrAcceptRun(bundle, id) {
  var cached = bundle.cache[id];
  bundle.hotData = {};

  if (cached) {
    cached.hot.data = bundle.hotData;
  }

  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {
    cached.hot._disposeCallbacks.forEach(function (cb) {
      cb(bundle.hotData);
    });
  }

  delete bundle.cache[id];
  bundle(id);
  cached = bundle.cache[id];

  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    cached.hot._acceptCallbacks.forEach(function (cb) {
      cb();
    });

    return true;
  }
}
},{}]},{},["../../node_modules/parcel-bundler/src/builtins/hmr-runtime.js","carte.js"], null)
//# sourceMappingURL=/carte.660dbf8f.js.map